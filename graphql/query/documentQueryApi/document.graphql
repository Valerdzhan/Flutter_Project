#import "../../fragments/fragment-user-item.graphql"
#import "../../fragments/fragment-document-description.graphql"
#import "../../fragments/fragment-attachments.graphql"
#import "../../fragments/fragment-contract-item.graphql"
#import "../../fragments/fragment-letter.graphql"
#import "../../fragments/fragment-outgoing-doc-item.graphql"
#import "../../fragments/fragment-incoming-doc-item.graphql"
#import "../../fragments/fragment-tax-expertise-item.graphql"
#import "../../fragments/fragment-correspondent.graphql"
#import "../../fragments/fragment-hr-hire.graphql"
#import "../../fragments/fragment-hr-transfer.graphql"
#import "../../fragments/fragment-hr-dismissal.graphql"
#import "../../fragments/fragment-hr-cancellation-dismissal.graphql"
#import "../../fragments/fragment-lna-directive.graphql"
#import "../../fragments/fragment-lna-order.graphql"
#import "../../fragments/fragment-generic-item.graphql"
#import "../../fragments/fragment-mass-mail.graphql"

query getDocument($id: DocumentId!) {
    documentQueryAPI(documentId: $id) {
        document {
            id
            eventCount
            version
            subDocuments {
                ...documentDescriptorFragment
            }
            attachments {
                ...attachmentsFragment
            }
            documentType
            adminIds
            readerIds
            registrationInfo {
                isRegistered
                registerNumber
                registrationDate
            }
            registrationBookItem {
                authorId
                date
                documentId
                isPermanent
                number
                registrationBookId
                registrationBook {
                    name
                }
            }
            revoked {
                isRevoked
                revokedNote
                isTaskCanceled
            }
            relations {
                relationId
                documentId
                document {
                    id
                    documentType
                    title: compileTitle
                    hasAccess
                    adminIds
                    ... on ContractItem {
                        responderId
                    }
                    ... on LetterItem {
                        responderId
                    }
                    ... on OutgoingDocItem {
                        responderId: responder
                    }
                }
                relationType
            }
            examinationAuditList {
                masters
                userId
                whenRead
            }
            # readAuditList {
            #     masters
            #     userId
            #     whenRead
            # }
            authorId
            editorId
            whenCreated
            whenEdited
            documentSerialNumber
            documentSystemNumber
            documentStatus
            isLinkAccessAllowed
            isPublished
            publisherId
            whenPublished
            mailingGroups {
                id
                authorId
                hasChildren
                isDeleted
                name
                parentId
                state
                when
            }
            mailingUsers {
                authorId
                state
                userId
                when
            }
            userRoles
            ... on ContractItem {
                ...contractItemFragment
            }
            ... on LetterItem {
                ...letterItemFragment
            }
            ... on IncomingDocItem {
                ...incomingDocItemFragment
            }
            ... on OutgoingDocItem {
                ...OutgoingDocItemFragment
            }
            ... on TaxExpertiseItem {
                ...taxExpertiseItemFragment
            }
            ... on RequestToHireItem {
                ...requestToHireItemFragment
            }
            ... on RequestForDismissalItem {
                ...requestForDismissalItemFragment
            }
            ... on TransferRequestItem {
                ...transferRequestItemFragment
            }
            ... on CancellationRequestForDismissalItem {
                ...requestCancellationForDismissalItemFragment
            }
            ... on LNADirectiveItem {
                ...lnaDirectiveItemFragment
            }
            ... on LNAOrderItem {
                ...lnaOrderItemFragment
            }
            ... on GenericRequestItem {
                ...genericItemFragment
            }
            ... on MassMailItem {
                ...massMailItemFragment
            }
        }
        unlockedAttachments {
            ...attachmentsFragment
        }
    }
}
