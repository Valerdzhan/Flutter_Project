# This is sample SDL schema for GraphQL Faker.
#
# There are two directives you can use to enhance fake data:
#   - @fake
#   - @examples
# Each directive has autocompletion working so start by typing @
#
# Press save or Cmd+Enter to apply the changes and update server. Switch to GraphiQL
# on the left panel to immediately test your changes.
# This tool also supports extending existing APIs. Check graphql-faker --help
#
# Developed with ❤️ by APIs.guru | https://github.com/APIs-guru/graphql-faker

# This is sample SDL schema for GraphQL Faker.
#
# There are two directives you can use to enhance fake data:
#   - @fake
#   - @examples
# Each directive has autocompletion working so start by typing @
#
# Press save or Cmd+Enter to apply the changes and update server. Switch to GraphiQL
# on the left panel to immediately test your changes.
# This tool also supports extending existing APIs. Check graphql-faker --help
#
# Developed with ❤️ by APIs.guru | https://github.com/APIs-guru/graphql-faker
schema {
  query: DFSQuery
  mutation: DFSMutation
  subscription: DFSSubscription
}


type Todo {
    id: Int!
    title: String
    done: Boolean
}

"""
Набор доступов
"""
type AccessList {
  """
  Доступ на группы
  """
  groups: [String]

  """
  Доступ на группы рассылок
  """
  mailingGroups: [String]

  """
  Персональный доступ
  """
  people: [UserId]
}

"""
Статус активации учетной записи пользователя
"""
enum ActivationStatus {
  """
  Учетная запись автивирована
  """
  OK

  """
  Учетная запись не включалась
  """
  NOT_USED

  """
  Учетная запись временно отключена
  """
  TEMPORARILY_DEACTIVATED

  """
  Учетная запись отключена в связи с увольнением
  """
  RETIRED
}

"""
Пользователь - Адресат. Является строкой - идентификатором пользователя.
"""
scalar Addressee @fake(type: uuid)

"""
Перечисление возможных действий над задачей согласования
"""
enum AgreementTaskAction {
  """
  Отклонить
  """
  REJECT

  """
  Согласовать
  """
  APPROVE
}

"""
Перечисление возможных статусов для задач согласования
"""
enum AgreementTaskStatus {
  """
  Инициализирована
  """
  INITIAL

  """
  В ожидании
  """
  PENDING

  """
  Отправлена
  """
  IN_PROGRESS

  """
  Отклонена
  """
  REJECTED

  """
  Согласована
  """
  APPROVED

  """
  Завершена
  """
  FINAL
}

"""
Перечисление всех возможных типов задач
"""
enum AllTaskTypeEnumType {
  UNKNOWN

  """
  На согласование
  """
  AGREEMENT

  """
  На подписание
  """
  SIGNING

  """
  На утверждение
  """
  APPROVAL

  """
  На регистрацию
  """
  REGISTRATION

  """
  Для исполнения
  """
  FOR_PERFORMANCE

  """
  На рассмотрение
  """
  FOR_CONSIDERATION

  """
  На согласование
  """
  FOR_AGREEMENT

  """
  Для сведения
  """
  FOR_INFORMATION

  """
  Входящая корреспонденция
  """
  FOR_INCOMING

  """
  Исходящая корреспонденция
  """
  FOR_OUTCOMING

  """
  На рассмотрение
  """
  FOR_INTERNAL_USE

  """
  На нормоконтроль
  """
  FOR_NORMO_CONTROL

  """
  На нормоконтроль
  """
  NORMATIVE_CONTROL

  """
  На рассмотрение
  """
  FOR_HR_DECISION

  """
  Для исполнения
  """
  FOR_IMPLEMENTATION
}

input AppendPostMutationInput {
  """
  Идентификатор владельца комментария
  """
  ownerId: String!

  """
  Текст комментария
  """
  body: String!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input AppendStageMutationInput {
  """
  Идентификатор маршрута
  """
  routeId: RouteId!

  """
  тип задач
  """
  defaultTaskType: TaskType!

  """
  Продолжительность (дни)
  """
  duration: UInt!

  """
  Участники этапа / Исполнители задач
  """
  actors: [TaskActor!]
}

"""
Назначаемое ассистирование
"""
input AppointAssistantInput {
  """
  Идентификатор ассистируемого пользователя
  """
  masterUserId: UserId!

  """
  Идентификатор пользователя-ассистента
  """
  slaveUserId: UserId!
}

"""
Назначаемое замещение
"""
input AppointSubstitutionInput {
  """
  Идентификатор замещаемого пользователя
  """
  masterUserId: UserId!

  """
  Идентификатор пользователя-заместителя
  """
  slaveUserId: UserId!

  """
  Период замещения
  """
  period: SubstitutionPeriodInput

  """
  Заметка для замещения
  """
  note: String
}

"""
Перечисление возможных действий над задачей подписания
"""
enum ApprovalTaskAction {
  """
  Отклонить
  """
  REJECT

  """
  Утвердить
  """
  APPROVE
}

"""
Перечисление возможных статусов для задач утверждения
"""
enum ApprovalTaskStatus {
  """
  Инициализирована
  """
  INITIAL

  """
  В ожидании
  """
  PENDING

  """
  Отправлена
  """
  IN_PROGRESS

  """
  Отклонена
  """
  REJECTED

  """
  Утверждена
  """
  APPROVED

  """
  Завершена
  """
  FINAL
}

"""
Операции над элементом в журнале изменений
"""
enum ArrayPropertyOperationType {
  """
  Добавлен
  """
  ADDED

  """
  Удален
  """
  REMOVED
}

input BaseAttributeSearch {
  """
  Поиск по автору
  """
  author: UserId

  """
  Поиск по содержимому
  """
  contains: String

  """
  Зарегистрирован
  """
  isRegistred: Boolean

  """
  Номер регистрации
  """
  registrationNumber: String

  """
  Дата регистрации документа (с)
  """
  fromRegistrationDate: DateTime

  """
  Дата регистрации документа (по)
  """
  toRegistrationDate: DateTime

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Серийный номер документа
  """
  documentSerialNumber: String

  """
  Фильтр типа документа
  """
  documentTypes: [DocumentType!]

  """
  Наличие скан-копии
  """
  isScanCopyExists: Boolean
}

scalar BigInt

"""
Флаговая опция
"""
input BooleanOptionInput {
  """
  Имя опции
  """
  optionId: String!

  """
  Значение флаговой опции
  """
  optionValue: Boolean!
}

"""
Флаговая опция
"""
type BooleanOptionType {
  """
  Значение по умолчанию
  """
  defaultValue: Boolean!

  """
  Описание опции
  """
  description: String!

  """
  Имя опции
  """
  optionId: String!

  """
  Значение флаговой опции
  """
  optionValue: Boolean!
}

type BooleanPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: Boolean
}

scalar Byte

"""
Отзыв заявления на увольнение
"""
type CancellationRequestForDismissalItem implements IDocument {
  """
  Адресат / Ответственный за рассмотрение
  """
  addresseeId: UserId!

  """
  Администраторы договора
  """
  adminIds: [UserId]

  """
  Заявитель
  """
  applicant: person!

  """
  Данные о заявитель-работник
  """
  applicantDetails: employeeDetails

  """
  Applicant ExternalUserId
  """
  applicantExternalUserId: String

  """
  Applicant UserId
  """
  applicantId: UserId

  """
  Вложения
  """
  attachments: [FileVersionListItem]

  """
  Автор
  """
  authorId: UserId

  """
  Статья Трудового права
  """
  clauseEmploymentLaw: String

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Подразделение, с которого производится увольнение
  """
  departmentFrom: DepartmentId

  """
  Дата увольнения
  """
  dismissalDate: DateTime

  """
  Серийный номер документа
  """
  documentSerialNumber: Int

  """
  Статус
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус по русски
  """
  documentStatusDescription: String

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean

  """
  Количество событий
  """
  eventCount: Int!

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  Проверяет есть ли доступ у текущего пользователя
  """
  hasAccess: Boolean

  """
  ИД документа
  """
  id: String!

  """
  Опция - доступ по ссылке
  """
  isLinkAccessAllowed: Boolean

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Группы рассылок
  """
  mailingGroups: [UsedMailingGroupType]

  """
  Пользователи рассылок
  """
  mailingUsers: [MailingUserItem]

  """
  Информация о приказе
  """
  orderDescriptor: orderDescriptor

  """
  Должность, с которой производится увольнение
  """
  positionFrom: String

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]

  """
  Читатели договора
  """
  readerIds: [UserId]

  """
  Регистрация в журнале
  """
  registrationBookItem: RegistrationBookItem

  """
  Регистрационные данные
  """
  registrationInfo: RegistrationInfo

  """
  Связанные документы
  """
  relations: [relation]

  """
  Примечание
  """
  remark: String

  """
  Отзываемое заявление на увольнение
  """
  requestForDismissalId: DocumentId!

  """
  Данные по резервированию
  """
  reservationInfo: RegistrationInfo

  """
  Ответственный
  """
  responderId: UserId

  """
  Аннулирование документа
  """
  revoked: revoked

  """
  Скан-копия оригинала
  """
  scanCopyOriginal: FileInstance

  """
  Статус
  """
  status: ReferenceValue

  """
  Вложенные документы
  """
  subDocuments: [DocumentDescriptor]

  """
  Задачи кадрового решения
  """
  tasks: [TaskId]

  """
  Список ролей текущего пользователя к этому документу
  """
  userRoles: [UserRoleInDocument]!

  """
  Версия
  """
  version: Int!

  """
  Когда создан
  """
  whenCreated: DateTime

  """
  Когда изменен
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

input CancellationRequestForDismissalPropertiesInput {
  """
  Адресат
  """
  addresseeId: Addressee!

  """
  Заявитель
  """
  applicant: PersonInput!

  """
  Данные о заявитель-работник
  """
  applicantDetails: EmployeeDetailsInput

  """
  Статья
  """
  clauseEmploymentLaw: String

  """
  Подразделение, с которого производится увольнение
  """
  departmentFrom: DepartmentId

  """
  Дата увольнения
  """
  dismissalDate: DateTime

  """
  Приказ об увольнении
  """
  orderDescriptor: OrderDescriptorInput

  """
  Должность, с которой производится увольнение
  """
  positionFrom: String

  """
  Примечание
  """
  remark: String

  """
  Ответственный
  """
  responderId: Responder!

  """
  Файл скан-копии оригинала заявления
  """
  scanCopyOriginal: FileInstanceInput

  """
  Статус
  """
  status: ReferenceKeyInput

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean
}

type captureRegistrationBook {
  """
  Статус job-а
  """
  getStatus(
    """
    Идент. job-а
    """
    id: Guid!
  ): CaptureRegistrationJobStatus

  """
  Индексация регистраций по докуменам (наполнить DocumentRegistrationCaptured)
  """
  start(
    """
    Имя stream-а ex. $ce-DFS:RegistrationBookState
    """
    streamName: String!
  ): Guid

  """
  Принудительный останов job-а
  """
  stop(
    """
    Идент. job-а
    """
    id: Guid!
  ): CaptureRegistrationJobStatus
}

"""
Состояние job-а
"""
type CaptureRegistrationJobStatus {
  """
  Количество примененных событий
  """
  appliedCount: Long!

  """
  Время исполнения
  """
  elapsed: String

  """
  Время окончания
  """
  endTime: DateTime

  """
  Сообщение об ошибке
  """
  error: String

  """
  Идент. задания
  """
  jobId: Guid!

  """
  Последний номер события
  """
  lastEventNumber: String

  """
  Активность грейна
  """
  online: Boolean!

  """
  Время обновления
  """
  refreshTime: DateTime

  """
  Имя stream-а которые было выбрано как источник
  """
  requestedStreamName: String

  """
  Время запуска
  """
  startTime: DateTime

  """
  Статус
  """
  status: String!

  """
  Общее количество обработтаных событий
  """
  totalCount: Long!
}

"""
Справочник
"""
type CatalogItem {
  """
  Признак - используется ли справочник
  """
  isUsed: Boolean!

  """
  Код
  """
  key: String!

  """
  Название
  """
  title: String!

  """
  Значения в справочнике
  """
  values: [ReferenceValue!]
}

"""
Сообщение
"""
type Comment {
  """
  Вложения
  """
  attachments: [PostAttachmentType!]

  """
  Автор
  """
  authorId: String

  """
  Текст
  """
  body: String

  """
  ИД поста
  """
  id: String!

  """
  Количество подкомментариев
  """
  numberChildren: Int!

  """
  Создано
  """
  when: DateTime
}

"""
Представляет обёртку над коллекцией элементов
"""
type CommentTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [Comment]!
}

"""
Перечисление возможных типов коммерческой тайны
"""
enum CommercialSecret {
  """
  Не содержит
  """
  NO

  """
  Содержит КТ
  """
  CONTAINS_KT

  """
  Содержит КИ
  """
  CONTAINS_KI

  """
  Содержит ДСП
  """
  CONTAINS_DSP
}

type CommercialSecretPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: CommercialSecret
}

"""
Состояние job-а
"""
type ConnectResolutionJobStatus {
  """
  Время исполнения
  """
  elapsed: String

  """
  Время окончания
  """
  endTime: DateTime

  """
  Сообщение об ошибке
  """
  error: String

  """
  Количество исправленных элементов
  """
  fixedCount: Long!

  """
  Идент. задания
  """
  jobId: Guid!

  """
  Последний номер события
  """
  lastEventNumber: String

  """
  Активность грейна
  """
  online: Boolean!

  """
  Время обновления
  """
  refreshTime: DateTime

  """
  Имя stream-а которые было выбрано как источник
  """
  requestedStreamName: String

  """
  Время запуска
  """
  startTime: DateTime

  """
  Статус
  """
  status: String!

  """
  Общее количество обработанных элементов
  """
  totalCount: Long!
}

type connectResolutions {
  """
  Статус job-а
  """
  getStatus(
    """
    Идент. job-а
    """
    id: Guid!
  ): ConnectResolutionJobStatus

  """
  Прикрепить резолюции к своим документам (наполнить ResolutionsInDocument)
  """
  start(
    """
    Имя stream-а ex. $et-DFS.Activities.Resolutions.Events.OrdinaryResolutionCreated
    """
    streamName: String!
  ): Guid

  """
  Принудительный останов job-а
  """
  stop(
    """
    Идент. job-а
    """
    id: Guid!
  ): ConnectResolutionJobStatus
}

"""
Налоговые последствия
"""
type Consequence {
  """
  Причина
  """
  reason: String

  """
  Описание
  """
  text: String
}

"""
Экземпляр налогового последствия
"""
input ConsequenceInput {
  """
  Текст последствия
  """
  text: String

  """
  Основание последствия
  """
  reason: String
}

input ContractBasicPropertiesInput {
  """
  Тип договора
  """
  type: ReferenceKeyInput!

  """
  Основание для заключения договора
  """
  reasonToEnter: String

  """
  Наименование договора
  """
  name: String!

  """
  Предмет договора
  """
  subject: String!

  """
  Контрагент
  """
  contractor: ContractorId

  """
  Сумма по договору с учетом налоговой ставки
  """
  sum: TaxMoneyInput

  """
  Исполнитель договора
  """
  departmentResponder: String!

  """
  Ответственный
  """
  responder: Responder!

  """
  Куратор договора
  """
  curator: Curator

  """
  Регистрационный номер договора
  """
  registerNumber: String

  """
  Системный номер договора
  """
  systemNumber: String

  """
  Регистрационный номер договора
  """
  legalNumber: String

  """
  Дата составления договора
  """
  preparationDate: DateTime

  """
  Дата заключения договора
  """
  conclusionDate: DateTime

  """
  Период действия договора
  """
  validityPeriod: ValidityPeriodInput

  """
  Дата окончания платежей по договору
  """
  paymentEndDate: DateTime

  """
  Файл скан-копии оригинала
  """
  scanCopyOriginal: FileInstanceInput

  """
  Статус
  """
  status: ReferenceKeyInput

  """
  Финансовая позиция
  """
  financialPositions: MultiReferenceKeyInput

  """
  Статья бюджета
  """
  budgetItems: MultiReferenceKeyInput

  """
  Примечание
  """
  note: String

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean

  """
  Информация ограниченного доступа
  """
  commercialSecret: CommercialSecret
}

"""
Договор
"""
type ContractItem implements IDocument {
  """
  Администраторы договора
  """
  adminIds: [UserId]

  """
  Вложения
  """
  attachments: [FileVersionListItem]

  """
  Автор
  """
  authorId: UserId

  """
  Статья бюджета
  """
  budgetItems: MultiReferenceValue

  """
  Информация ограниченного доступа
  """
  commercialSecret: CommercialSecret

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Дата заключения договора
  """
  conclusionDate: DateTime

  """
  Контрагент
  """
  contractor: String

  """
  Куратор договора
  """
  curatorId: UserId

  """
  Ответственное подразделение
  """
  departmentResponder: String

  """
  Серийный номер документа
  """
  documentSerialNumber: Int

  """
  Статус
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус по русски
  """
  documentStatusDescription: String

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean

  """
  Количество событий
  """
  eventCount: Int!

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  Финансовая позиция
  """
  financialPositions: MultiReferenceValue

  """
  Проверяет есть ли доступ у текущего пользователя
  """
  hasAccess: Boolean

  """
  ИД документа
  """
  id: String!

  """
  Опция - доступ по ссылке
  """
  isLinkAccessAllowed: Boolean

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Регистрационный номер договора в ЮрО
  """
  legalNumber: String

  """
  Группы рассылок
  """
  mailingGroups: [UsedMailingGroupType]

  """
  Пользователи рассылок
  """
  mailingUsers: [MailingUserItem]

  """
  Наименование договора
  """
  name: String

  """
  Примечание
  """
  note: String

  """
  Дата окончания платежей по договору
  """
  paymentEndDate: DateTime

  """
  Дата договора
  """
  preparationDate: DateTime

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]

  """
  Читатели договора
  """
  readerIds: [UserId]

  """
  Основание для заключения договора
  """
  reasonToEnter: String

  """
  Номер договора
  """
  registerNumber: String

  """
  Регистрация в журнале
  """
  registrationBookItem: RegistrationBookItem

  """
  Регистрационные данные
  """
  registrationInfo: RegistrationInfo

  """
  Связанные документы
  """
  relations: [relation]

  """
  Данные по резервированию
  """
  reservationInfo: RegistrationInfo

  """
  Ответственный
  """
  responderId: UserId

  """
  Аннулирование документа
  """
  revoked: revoked

  """
  Скан-копия оригинала
  """
  scanCopyOriginal: FileInstance

  """
  Статус
  """
  status: ReferenceValue

  """
  Вложенные документы
  """
  subDocuments: [DocumentDescriptor]

  """
  Предмет договора
  """
  subject: String

  """
  Сумма по договору с учетом налоговой ставки
  """
  sum: taxMoney

  """
  Системный номер договора в ИУС ПД
  """
  systemNumber: String

  """
  Тип договора
  """
  type: ReferenceValue

  """
  Список ролей текущего пользователя к этому документу
  """
  userRoles: [UserRoleInDocument]!

  """
  Период действия договора
  """
  validityPeriod: ValidityPeriod

  """
  Версия
  """
  version: Int!

  """
  Когда создан
  """
  whenCreated: DateTime

  """
  Когда изменен
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Договор
"""
type ContractListItem implements IDocumentListItem {
  """
  Автор
  """
  authorId: UserId

  """
  Имя автора без дополнительго зарпоса
  """
  authorName: String

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Id контрагента
  """
  contractorId: ContractorId

  """
  Контрагент
  """
  contractorName: String

  """
  Контрольные карты
  """
  controlCardsCount: Int

  """
  Контрольные карты количество снятых
  """
  controlCardsRemovedCount: Int

  """
  Подразделение
  """
  departmentResponder: String

  """
  Статус документа
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус документа по русски
  """
  documentStatusDescription: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  ИД документа
  """
  id: DocumentId!

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Дата составления договора
  """
  preparationDate: DateTime

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]

  """
  Номер регистрации
  """
  registerNumber: String
  registrationBookItem: RegistrationBookItem

  """
  Ответственный
  """
  responderId: UserId

  """
  Документ аннулирован
  """
  revoked: revoked

  """
  Наличие скан-копии оригинала документа
  """
  scanCopy: FileInstanceId

  """
  Статус
  """
  status: String

  """
  Сумма с НДС
  """
  sumAmountWithTax: Decimal

  """
  Название
  """
  title: String!

  """
  Создано
  """
  whenCreated: DateTime

  """
  Изменено
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Представляет обёртку над коллекцией элементов
"""
type ContractListItemTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [ContractListItem]!
}

"""
Контрагент
"""
type Contractor {
  """
  Район
  """
  area: String

  """
  Город
  """
  city: String

  """
  Страна
  """
  country: String

  """
  Кредитор
  """
  id: String!

  """
  Индекс
  """
  index: String

  """
  ИНН
  """
  iNN: String

  """
  Состояние удаления
  """
  isDeleted: Boolean!

  """
  КПП
  """
  kPP: String

  """
  Имя
  """
  name: String

  """
  ОКПО
  """
  oKPO: String

  """
  Телефон
  """
  phone: String

  """
  Регион
  """
  region: String

  """
  Улица
  """
  street: String
}

"""
Идентификатор контрагента. Является строкой.
"""
scalar ContractorId @fake(type: uuid)

"""
Атрибутный поиск по договорам
"""
input contractsAttributeSearch {
  """
  Поиск по автору
  """
  author: UserId

  """
  Поиск по содержимому
  """
  contains: String

  """
  Зарегистрирован
  """
  isRegistred: Boolean

  """
  Номер регистрации
  """
  registrationNumber: String

  """
  Дата регистрации документа (с)
  """
  fromRegistrationDate: DateTime

  """
  Дата регистрации документа (по)
  """
  toRegistrationDate: DateTime

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Серийный номер документа
  """
  documentSerialNumber: String

  """
  Фильтр типа документа
  """
  documentTypes: [DocumentType!]

  """
  Наличие скан-копии
  """
  isScanCopyExists: Boolean

  """
  Начальная сумма с НДС
  """
  amountFrom: Decimal

  """
  Конечная сумма с НДС
  """
  amountTo: Decimal

  """
  Контрагент ID
  """
  contractorId: ContractorId

  """
  Контрагент поисковая строка
  """
  contractor: String

  """
  Статус
  """
  documentStatus: String

  """
  Перечень фильтруемых статусов договоров
  """
  statusFilter: [String!]
}

"""
Перечисление возможных полей для сортировки документов
"""
enum ContractsSortFieldEnumType {
  """
  По предмету договора
  """
  title

  """
  По контрагенту
  """
  contractor

  """
  По сумме
  """
  amount

  """
  По подразделению
  """
  department

  """
  По ответственному
  """
  responder

  """
  По дате создания
  """
  whenCreated

  """
  По дате изменения
  """
  whenEdited

  """
  По статусу
  """
  status
}

"""
Карта налоговой экспертизы
"""
input ContractTaxExpertisePropertiesInput {
  """
  Вывод по результатам анализа сделки (договора)
  """
  conclusionResultContract: String

  """
  Налоговые последствия для Общества по налогу на прибыль
  """
  consequenceIncomeTax: ConsequenceInput

  """
  Налоговые последствия для Общества по иным налогам
  """
  consequenceOtherTaxes: ConsequenceInput

  """
  Налоговые последствия для Общества по НДС
  """
  consequenceVAT: ConsequenceInput

  """
  Налоговые последствия для контрагента по налогу на прибыль
  """
  contractorConsequenceIncomeTax: ConsequenceInput

  """
  Налоговые последствия для контрагента по иным налогам
  """
  contractorConsequenceOtherTaxes: ConsequenceInput

  """
  Налоговые последствия для контрагента по НДС
  """
  contractorConsequenceVAT: ConsequenceInput

  """
  Налоговые риски для Контрагента
  """
  contractorTaxRisks: TaxRiskInput

  """
  Оценка влияния на КГН (Консолидированная группа налогоплательщиков)
  """
  impactAssessmentKGN: String

  """
  Позиция Минфина
  """
  notionMinFin: String

  """
  Позиция налоговых органов
  """
  notionTaxAuthorities: String

  """
  Позиция судов
  """
  notionTribunal: String

  """
  Последствия. Рекомендации. Предложения.
  """
  recommendations: String

  """
  Исполнитель от бухгалтерии
  """
  responderAccountant: Responder

  """
  Исполнитель от отдела налогов
  """
  responderTax: Responder

  """
  Налоговые риски для Общества
  """
  taxRisks: TaxRiskInput
}

"""
Контрольная карта
"""
type ControlCard {
  """
  Автор
  """
  authorId: UserId

  """
  Дата контроля
  """
  date: DateTime

  """
  Дата снятия с контроля
  """
  deControlDate: DateTime

  """
  Документ последней версии
  """
  documentLastVersion: LastDocumentVersion
  hostDocumentId: DocumentId
  id: DocumentId

  """
  Запрос на снятие с контроля
  """
  isControlRemovalRequested: Boolean

  """
  Снято с контроля
  """
  isRemoved: Boolean

  """
  Периодичность контроля
  """
  period: ControlCardPeriodEnumType

  """
  Примечание
  """
  remark: String

  """
  Отчет
  """
  report: String

  """
  Ответственные
  """
  responderIds: [UserId]

  """
  Тип контроля
  """
  type: ReferenceValue
}

"""
Перечисление всех периодичностей контроля
"""
enum ControlCardPeriodEnumType {
  """
  Без периода
  """
  NO

  """
  Ежедневно
  """
  DAILY

  """
  Еженедельно
  """
  WEEKLY

  """
  Два раза в месяц
  """
  TWO_TIMES_IN_MONTH

  """
  Ежемесячно
  """
  MONTHLY

  """
  Ежеквартально
  """
  QUARTERLY

  """
  Раз в пол года
  """
  SEMIANNUALLY

  """
  Ежегодно
  """
  YEARLY

  """
  Раз в 2 года
  """
  ONCE_IN_TWO_YEARS

  """
  Раз в 3 года
  """
  ONCE_EVERY_THREE_YEARS

  """
  Постоянно
  """
  CONTINUOUSLY
}

input ControlCardPropertiesInput {
  """
  Тип контроля
  """
  type: ReferenceKeyInput!

  """
  Дата контроля
  """
  date: DateTime

  """
  Отметка о снятии контроля
  """
  isRemoved: Boolean

  """
  Отметка запроса о снятии контроля
  """
  isControlRemovalRequested: Boolean

  """
  Периодичность контроля
  """
  period: ControlCardPeriodEnumType

  """
  Ответственные
  """
  responders: [Responder!]

  """
  Примечание
  """
  remark: String

  """
  Отчет
  """
  report: String

  """
  Дата снятия с контроля
  """
  deControlDate: DateTime
}

"""
Атрибутный поиск по контрольным картам
"""
input controlCardsAttributeSearch {
  """
  Фильтр по содержимому
  """
  contains: String

  """
  Фильтр по ответственным
  """
  responders: [UserId!]

  """
  Фильтр по типам контроля
  """
  filterTypes: [String]

  """
  Дата контроля с
  """
  fromDate: DateTime

  """
  Дата контроля по
  """
  toDate: DateTime

  """
  Отображать просроченные
  """
  isOverdue: Boolean

  """
  Отображать запрошенные на снятие с контроля
  """
  isControlRemoval: Boolean

  """
  Дата снятия с контроля (с)
  """
  fromDeDate: DateTime

  """
  Дата снятия с контроля (по)
  """
  toDeDate: DateTime

  """
  Отображать снятые с контроля
  """
  isRemoved: Boolean
}

"""
Перечисление возможных полей для сортировки
"""
enum ControlCardsSortFieldEnumType {
  """
  По названию документа
  """
  documentTitle

  """
  По дате контроля
  """
  date

  """
  По дате создания
  """
  whenCreated
}

"""
Представляет обёртку над коллекцией элементов
"""
type ControlCardTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [ControlCard]!
}

"""
Корреспондент из справочника предприятий-адресатов и отправителей
"""
type Correspondent {
  """
  Импортированный адрес
  """
  addressImported: String

  """
  Город
  """
  city: String

  """
  Корреспондент
  """
  correspondent: String

  """
  E-mail
  """
  email: String

  """
  Полное наименование
  """
  fullTitle: String

  """
  Признак наличия дочерних элементов
  """
  hasChildren: Boolean

  """
  ИД
  """
  id: String!

  """
  Индекс
  """
  index: String

  """
  Признак удаления
  """
  isDeleted: Boolean

  """
  Организация
  """
  organization: String

  """
  ИД Родителя
  """
  parentId: String

  """
  Телефон
  """
  phone: String

  """
  Должность
  """
  position: String

  """
  Регион
  """
  region: String

  """
  Улица
  """
  street: String

  """
  Наименование
  """
  title: String
}

type CorrespondentPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: Correspondent
}

"""
API для корреспондентов
"""
type CorrespondentsAPI {
  """
  Получение дочерних или корневых кореспондентов
  """
  childs(
    """
    ИД родителя или null
    """
    id: ReferenceCorrespondentId
  ): [Correspondent]

  """
  Получение дерева дочерних кореспондентов
  """
  drilldown(
    """
    ИД кореспондента
    """
    id: ReferenceCorrespondentId!
  ): [Correspondent]

  """
  Получить корреспондента по id
  """
  getById(
    """
    ИД
    """
    id: ReferenceCorrespondentId
  ): Correspondent

  """
  Входящий индекс для пользователя
  """
  incomingIndex(
    """
    Пользователь
    """
    userId: UserId
  ): String

  """
  Исходящий индекс для пользователя
  """
  outgoingIndex(
    """
    Пользователь
    """
    userId: UserId
  ): String

  """
  Массив регистраторов по отправителю
  """
  registratorsBySender(
    """
    Пользователь
    """
    userId: UserId
  ): [UserId]

  """
  Массив регистраторов по отправителям
  """
  registratorsBySenders(
    """
    Пользователи
    """
    userIds: [UserId]
  ): [UserId]

  """
  Поиск кореспондентов по строке
  """
  search(
    """
    Строка поиска
    """
    searchString: String

    """
    Включить удаленные записи
    """
    includeDeleted: Boolean = false
  ): [Correspondent]
}

input CreateCancellationRequestForDismissalMutationInput {
  """
  Значение атрибутов заявления
  """
  props: CancellationRequestForDismissalPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]

  """
  Идентификатор для автоматической связи заявления с типом связи "Отменяет"
  """
  relatedDocumentId: DocumentId!
}

input CreateContractMutationInput {
  """
  Значение основных атрибутов договора
  """
  props: ContractBasicPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input CreateDocumentRelationMutationInput {
  """
  От
  """
  fromId: DocumentId

  """
  К
  """
  toId: DocumentId

  """
  Тип связи
  """
  relationType: RelationType
}

input CreateGenericRequestMutationInput {
  """
  Значение атрибутов заявления
  """
  props: GenericRequestPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input CreateIncomingDocMutationInput {
  """
  Значение основных атрибутов документа
  """
  props: IncomingDocBasicPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input CreateLetterMutationInput {
  """
  Значение основных атрибутов записки
  """
  props: LetterBasicPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]

  """
  Идентификатор для автоматической связи документа с типом связи "Ответ на"
  """
  relatedDocumentId: DocumentId
}

input CreateLNADirectiveMutationInput {
  """
  Значение атрибутов распоряжения
  """
  props: LNADirectivePropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input CreateLNAOrderMutationInput {
  """
  Значение атрибутов распоряжения
  """
  props: LNAOrderPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input CreateMassMailMutationInput {
  """
  Значение основных атрибутов записки
  """
  props: MassMailBasicPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input CreateOutgoingDocMutationInput {
  """
  Значение основных атрибутов документа
  """
  props: OutgoingDocPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]

  """
  Идентификатор для автоматической связи документа с типом связи "Ответ на"
  """
  relatedDocumentId: DocumentId
}

input CreateParentlessResolutionMutationInput {
  """
  Документ
  """
  documentId: DocumentId

  """
  Тип задач резолюции
  """
  taskType: ResolutionTaskType!

  """
  Текст-Описание
  """
  description: String

  """
  Срок
  """
  dueDate: DateTime

  """
  Контролер
  """
  overseer: TaskActor

  """
  Участники
  """
  actors: [TaskActor!]

  """
  Ответственные из участников
  """
  responsibles: [TaskActor!]

  """
  Резолюция завершается только ответственным исполнителем
  """
  onlyResponsibleResultOption: Boolean

  """
  Резолюция может быть завершена любым исполнителем
  """
  requireSingleResultOption: Boolean
}

input CreateRequestForDismissalMutationInput {
  """
  Значение атрибутов заявления
  """
  props: RequestForDismissalPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input CreateRequestToHireMutationInput {
  """
  Значение атрибутов заявления
  """
  props: RequestToHirePropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input CreateResolutionMutationInput {
  """
  Идентификатор родительской задачи
  """
  sourceTaskId: TaskId!

  """
  Тип задач резолюции
  """
  taskType: ResolutionTaskType!

  """
  Инициатор резолюции
  """
  originator: TaskActor

  """
  Текст-Описание
  """
  description: String

  """
  Срок
  """
  dueDate: DateTime

  """
  Контролер
  """
  overseer: TaskActor

  """
  Участники
  """
  actors: [TaskActor!]

  """
  Ответственные из участников
  """
  responsibles: [TaskActor!]

  """
  Автоматическое завершение задачи верхнего уровня
  """
  completeParentOption: Boolean

  """
  Резолюция завершается только ответственным исполнителем
  """
  onlyResponsibleResultOption: Boolean

  """
  Резолюция может быть завершена любым исполнителем
  """
  requireSingleResultOption: Boolean
}

input CreateRouteMutationInput {
  """
  Заголовок маршрута
  """
  title: String!

  """
  Идентификатор документа
  """
  documentId: DocumentId!

  """
  Набор элементов документа для маршрута
  """
  targets: [ObservedDocumentInputObject!]

  """
  Набор опций маршрута
  """
  options: [BooleanOptionInput!]
}

input CreateTaxExpertiseMutationInput {
  """
  Идентификатор договора
  """
  contractId: DocumentId!

  """
  Значение основных атрибутов КНЭ
  """
  props: ContractTaxExpertisePropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input CreateTransferRequestMutationInput {
  """
  Значение атрибутов заявления
  """
  props: TransferRequestPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

"""
Пользователь - куратор. Является строкой - идентификатором пользователя.
"""
scalar Curator @fake(type: uuid)

"""
The `Date` scalar type represents a year, month and day in accordance with the
[ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
"""
scalar Date @fake(type: date)

type DatePropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: DateTime
}

"""
The `DateTime` scalar type represents a date and time. `DateTime` expects
timestamps to be formatted in accordance with the
[ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
"""
scalar DateTime @fake(type: date)

"""
The `DateTimeOffset` scalar type represents a date, time and offset from UTC.
`DateTimeOffset` expects timestamps to be formatted in accordance with the
[ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
"""
scalar DateTimeOffset

scalar Decimal

type DecimalPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: Decimal
}

"""
Делегирование
"""
type DelegationInfoType {
  """
  Дата создания делегирования
  """
  date: DateTime

  """
  Пользователь
  """
  userId: UserId
}

input DeliverInternalDocument {
  """
  Идентификатор документа
  """
  documentId: DocumentId!

  """
  Отправитель (null = currentUser)
  """
  sender: TaskActor

  """
  Получатели
  """
  receivers: [TaskActor!]
}

"""
Идентификатор подразделения. Является строкой.
"""
scalar DepartmentId @fake(type: number)

type DFSMutation {
  addTodo(title: String!):Todo
  removeTodo(title: String!):Todo
  updateTodo(id: Int!, title: String, done: Boolean): Todo
  """
  Пересчитать acl
  """
  acl(id: DocumentId!): Boolean

  """
  Добавить комментарий к элементу
  """
  appendPost(input: AppendPostMutationInput!): Comment

  """
  Добавление этапа в маршрут, возращает id добавленного этапа
  """
  appendStage(input: AppendStageMutationInput!): String

  """
  Назначить ассистента
  """
  appointAssistant(input: AppointAssistantInput!): String

  """
  Назначить замещение
  """
  appointSubstitution(input: AppointSubstitutionInput!): String

  """
  Отменить замещение
  """
  cancelSubstitution(
    """
    Идентификатор замещения
    """
    id: SubstitutionId!
  ): Boolean

  """
  Создание отзыва заявления на увольнение
  """
  createCancellationRequestForDismissal(
    input: CreateCancellationRequestForDismissalMutationInput!
  ): String

  """
  Создание договора, возращает id созданного договора
  """
  createContract(input: CreateContractMutationInput!): String

  """
  Связать документы
  """
  createDocumentRelationMutation(
    input: CreateDocumentRelationMutationInput!
  ): relation

  """
  Создание обобщенного заявления
  """
  createGenericRequest(input: CreateGenericRequestMutationInput!): String

  """
  Создание входящего документа, возращает id созданного документа
  """
  createIncomingDoc(input: CreateIncomingDocMutationInput!): String

  """
  Создание служебной записки, возращает id созданного документа
  """
  createLetter(input: CreateLetterMutationInput!): String

  """
  Создание распоряжения
  """
  createLNADirectiveMutation(input: CreateLNADirectiveMutationInput!): String

  """
  Создание распоряжения
  """
  createLNAOrderMutation(input: CreateLNAOrderMutationInput!): String

  """
  Создание резолюции на ЛНА, возращает id созданной резолюции
  """
  createLNAResolutionMutation(
    input: CreateParentlessResolutionMutationInput!
  ): String

  """
  Создание, возращает id созданного документа
  """
  createMassMail(input: CreateMassMailMutationInput!): String

  """
  Создание исходящего документа, возращает id созданного документа
  """
  createOutgoingDoc(input: CreateOutgoingDocMutationInput!): String

  """
  Создание заявления на увольнение
  """
  createRequestForDismissal(
    input: CreateRequestForDismissalMutationInput!
  ): String

  """
  Создание заявления на прием
  """
  createRequestToHire(input: CreateRequestToHireMutationInput!): String

  """
  Создание резолюции, возращает id созданной резолюции
  """
  createResolution(input: CreateResolutionMutationInput!): String

  """
  Создание маршрута, возращает id созданного маршрута
  """
  createRoute(input: CreateRouteMutationInput!): String

  """
  Создание карточки налоговой экспертизы, возращает id созданной карточки
  """
  createTaxExpertise(input: CreateTaxExpertiseMutationInput!): String

  """
  Создание заявления на перевод
  """
  createTransferRequest(input: CreateTransferRequestMutationInput!): String

  """
  Удаление этапа в маршруте
  """
  deleteStage(
    """
    Идентификатор маршрута
    """
    routeId: RouteId!

    """
    Идентификатор этапа
    """
    stageId: StageId!
  ): String

  """
  Создание задач для обработки документа как внутренней корреспонденции
  """
  deliverInternalDocument(input: DeliverInternalDocument!): Boolean

  """
  API по документам
  """
  documentMutationAPI(
    """
    Идентификатор документа
    """
    documentId: DocumentId!
  ): DocumentMutationAPI

  """
  Аннулировать документ
  """
  documentRevoked(input: RevokeDocumentMutationInput!): Boolean

  """
  Пересчитывает статусы документов
  """
  documentStatusRecalculate(input: DocumentStatusRecalculateInput!): String

  """
  Применение изменений в задаче согласования
  """
  editAgreementTask(input: EditTaskMutationInput!): RouteTaskListItemType

  """
  Редактирование отзыва заявления на увольнение
  """
  editCancellationRequestForDismissal(
    input: EditCancellationRequestForDismissalMutationInput!
  ): Boolean

  """
  Редактирование основных атрибутов договора
  """
  editContract(input: EditContractMutationInput!): Boolean

  """
  Применение изменений в задаче кадрового решения
  """
  editForHRDecisionTask(
    input: EditInternalTaskMutationInput!
  ): ForHRDecisionTaskListItemType

  """
  Редактирование обобщенного заявления
  """
  editGenericRequest(input: EditGenericRequestMutationInput!): Boolean

  """
  Применение изменений в задаче исполнения ЛНА
  """
  editImplementationTask(
    input: EditInternalTaskMutationInput!
  ): ProcessingTaskListItemType

  """
  Редактирование основных атрибутов входящего документа
  """
  editIncomingDoc(input: EditIncomingDocMutationInput!): Boolean

  """
  Применение изменений в задаче внутренней корреспонденции
  """
  editInternalTask(
    input: EditInternalTaskMutationInput!
  ): ProcessingTaskListItemType

  """
  Редактирование основных атрибутов служебной записки
  """
  editLetter(input: EditLetterMutationInput!): Boolean

  """
  Редактирование распоряжения
  """
  editLNADirectiveMutation(input: EditLNADirectiveMutationInput!): Boolean

  """
  Редактирование распоряжения
  """
  editLNAOrderMutation(input: EditLNAOrderMutationInput!): Boolean

  """
  Редактирование основных атрибутов
  """
  editMassMail(input: EditMassMailMutationInput!): Boolean

  """
  Редактирование основных атрибутов исходящего документа
  """
  editOutgoingDoc(input: EditOutgoingDocMutationInput!): Boolean

  """
  Редактирование заявления на увольнение
  """
  editRequestForDismissal(input: EditRequestForDismissalMutationInput!): Boolean

  """
  Редактирование заявления на прием
  """
  editRequestToHire(input: EditRequestToHireMutationInput!): Boolean

  """
  Изменение резолюции
  """
  editResolution(input: EditResolutionMutationInput!): Resolution

  """
  Применение изменений в задаче резолюции
  """
  editResolutionTask(input: EditTaskMutationInput!): ResolutionTaskListItemType

  """
  Редактирование маршрута
  """
  editRoute(input: EditRouteMutationInput!): Boolean

  """
  Изменение этапа в маршруте, возращает модель измененного этапа
  """
  editStage(input: EditStageMutationInput!): StageItemDto

  """
  Редактирование основных свойств карточки налоговой экспертизы
  """
  editTaxExpertise(input: EditTaxExpertiseMutationInput!): Boolean

  """
  Редактирование заявления на перевод
  """
  editTransferRequest(input: EditTransferRequestMutationInput!): Boolean

  """
  Завершить маршрута
  """
  finishRoute(
    """
    Идентификатор маршрута
    """
    id: RouteId!
  ): Boolean

  """
  API по группам
  """
  groupMutationAPI(
    """
    Id группы
    """
    groupId: GroupId!
  ): GroupMutationAPI

  """
  API по кадровым заявлениям
  """
  hRRequestDocMutationAPI(
    """
    Идентификатор документа
    """
    documentId: DocumentId!
  ): HRRequestDocMutationAPI

  """
  API по входящим документам
  """
  incomingDocMutationAPI(
    """
    Идентификатор документа
    """
    documentId: DocumentId!
  ): IncomingDocMutationAPI

  """
  API для заданий (job)
  """
  jobMutationAPI: JobMutationAPI

  """
  Запуск маршрута
  """
  launchRoute(
    """
    Идентификатор маршрута
    """
    id: RouteId!
  ): Boolean

  """
  Запуск маршрута с созданием этапа/задачи нормоконтроля для куратора
  """
  launchRouteWithCurator(
    """
    Идентификатор маршрута
    """
    id: RouteId!

    """
    Идентификатор пользователя-куратора
    """
    curatorId: Curator!
  ): Boolean

  """
  Запуск маршрута с созданием этапа подписания для утверждающих указанных групп рассылок
  """
  launchRouteWithMailingGroups(
    """
    Идентификатор маршрута
    """
    id: RouteId!

    """
    Группы рассылок
    """
    mailingGroups: [MailingGroupId!]!
  ): Boolean

  """
  Запуск этапа
  """
  launchStage(
    """
    Идентификатор маршрута
    """
    routeId: RouteId!

    """
    Идентификатор этапа
    """
    stageId: StageId!
  ): Boolean

  """
  API по служебным запискам документам
  """
  letterMutationAPI(
    """
    Идентификатор документа
    """
    documentId: DocumentId!
  ): LetterMutationAPI

  """
  API по блокировке файлов
  """
  lockFileMutationAPI: LockFileMutationAPI

  """
  API по служебным информационным рассылкам
  """
  massMailMutationAPI(
    """
    Идентификатор документа
    """
    documentId: DocumentId!
  ): MassMailMutationAPI

  """
  API по исходящим документам
  """
  outgoingDocMutationAPI: OutgoingDocMutationAPI

  """
  API по регистрации
  """
  registrationMutationAPI: RegistrationMutationAPI

  """
  Удалить связь между документами
  """
  removeDocumentRelationMutation(input: RelationId!): Boolean

  """
  API по резолюциям
  """
  resolutionMutationAPI(
    """
    Id резолюции
    """
    resolutionId: ResolutionId!
  ): ResolutionMutationAPI

  """
  API для последовательностей
  """
  sequenceMutationAPI: SequenceMutationAPI

  """
  API по настройкам сервера
  """
  serverSettingsMutationAPI: ServerSettingsMutationAPI

  """
  API по сервисам
  """
  serviceMutationAPI: ServiceMutationAPI

  """
  Предоставить роль пользователям на документ
  """
  setDocumentRoleMutation(
    documentId: DocumentId!
    users: [UserId!]!
    role: DocumentRoleEnumType = NONE
  ): Boolean

  """
  Предоставить разрешения
  """
  setPermissions(input: GodPermissionsMutationInput!): Boolean

  """
  API по задачам
  """
  taskAPI(
    """
    Идентификатор задачи
    """
    taskId: TaskId!
  ): TaskAPI

  """
  Обновить ассистирование
  """
  updateAssistant(
    """
    Идентификатор замещения
    """
    id: SubstitutionId!

    """
    Данные для обновления
    """
    input: AppointAssistantInput!
  ): Boolean

  """
  Обновить замещение
  """
  updateSubstitution(
    """
    Идентификатор замещения
    """
    id: SubstitutionId!

    """
    Данные для обновления
    """
    input: AppointSubstitutionInput!
  ): Boolean

  """
  Регистрация пользователя
  """
  userRegister(input: RegisterUserInput!): String

  """
  API по настройкам пользователя
  """
  userSettingsByIdMutationAPI(
    """
    Id пользователя
    """
    userId: UserId!
  ): UserSettingsMutationAPI

  """
  API по настройкам текущего пользователя
  """
  userSettingsMutationAPI: UserSettingsMutationAPI
}

type DFSQuery {
  """
  Тестовый query
  """
  todos (title: String!): [Todo]
  """
  Все справочники из каталога
  """
  allCatalog: [CatalogItem!]

  """
  Перечень всех групп событий
  """
  allEventGroups: [EventGroup]

  """
  Перечень всех событий
  """
  allEvents: [EventEntry]

  """
  Перечень всех групп
  """
  allGroups: [groupType]

  """
  Перечень всех опций маршрута
  """
  allRouteOption: [RouteOptionsIntoDocumentType]

  """
  Выбранный справочник
  """
  catalogItem(
    """
    Код справочника
    """
    key: String!
  ): CatalogItem

  """
  Перечень комментариев
  """
  comments(
    """
    ИД элемента владельца комментариев
    """
    ownerId: String!

    """
    Сколько пропустить элементов
    """
    skip: Int!

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int!
  ): CommentTypeCollection

  """
  Контрагент
  """
  contractor(
    """
    Кредитор
    """
    id: ContractorId!
  ): Contractor

  """
  Список контрагентов
  """
  contractors(
    """
    Фильтр
    """
    filter: String

    """
    Skip
    """
    skip: Int = 0

    """
    Limit
    """
    limit: Int = 10
  ): [Contractor]

  """
  Список договоров
  """
  contracts(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10

    """
    Сортировка документов
    """
    sort: SortInput_ContractsSortFieldEnumType

    """
    Атрибутный поиск по документам
    """
    attributeSearch: contractsAttributeSearch
  ): ContractListItemTypeCollection

  """
  Список служебных записок
  """
  controlCards(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10

    """
    Сортировка документов
    """
    sort: SortInput_ControlCardsSortFieldEnumType

    """
    Атрибутный поиск по контрольным картам
    """
    attributeSearch: controlCardsAttributeSearch
  ): ControlCardTypeCollection

  """
  API для корреспондентов
  """
  correspondentsAPI: CorrespondentsAPI

  """
  Текущий пользователь
  """
  currentUser: UserItem

  """
  API по документу
  """
  documentQueryAPI(
    """
    Идентификатор документа
    """
    documentId: DocumentId!
  ): DocumentQueryAPI

  """
  Список договоров
  """
  documents(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10

    """
    Атрибутный поиск
    """
    attributeSearch: BaseAttributeSearch

    """
    Сортировка документов
    """
    sort: SortInput_DocumentSortFieldEnumType

    """
    представление на регистрации
    """
    onRegisterFilter: Boolean = false
  ): DocumentListItemInterfaceCollection

  """
  Поиск работника по глобальному персональному идентификатору
  """
  employee(
    """
    Глобальный персональный идентификатор
    """
    personalIdentifier: PersonalIdentifier!
  ): EmployeeEntity

  """
  Поиск по работникам
  """
  employees(
    """
    Фильтр
    """
    query: String!

    """
    с учетом уволенных?
    """
    withoutRetired: Boolean = false
  ): [EmployeeEntity]

  """
  Перечень групп событий по типу документа
  """
  eventGroupsByDocumentType(
    """
    Тип документа
    """
    type: DocumentType!
  ): [EventGroup]

  """
  Список документов для ознакомления
  """
  examinationDocuments(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10

    """
    Атрибутный поиск
    """
    attributeSearch: examinationDocumentsAttributeSearch

    """
    Сортировка документов
    """
    sort: SortInput_DocumentSortFieldEnumType
  ): DocumentListItemInterfaceCollection

  """
  Свойства файла
  """
  fileInfo(
    """
    Идентификатор файла
    """
    id: FileInstanceId!
  ): FileVersionListItem

  """
  API для справочника типов заявлений
  """
  genericRequestCatalogQueryAPI: GenericRequestCatalogQueryAPI

  """
  Список заявлений
  """
  genericRequestDoc(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10

    """
    Сортировка заявлений
    """
    sort: SortInput_GenericRequestDocsSortFieldEnumType

    """
    Атрибутный поиск по заявлениям
    """
    attributeSearch: genericRequestDocAttributeSearch
  ): GenericRequestListItemTypeCollection

  """
  Список кадровых заявлений
  """
  hRRequestDoc(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10

    """
    Сортировка документов
    """
    sort: SortInput_HRRequestDocsSortFieldEnumType

    """
    Атрибутный поиск по документам
    """
    attributeSearch: hrDocAttributeSearch
  ): HRRequestDocListItemTypeCollection

  """
  Список входящих документов
  """
  incomingDocs(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10

    """
    Сортировка документов
    """
    sort: SortInput_IncomingDocsSortFieldEnumType

    """
    Атрибутный поиск по документам
    """
    attributeSearch: incomingDocsAttributeSearch
  ): IncomingDocListItemTypeCollection

  """
  Список служебных записок
  """
  letters(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10

    """
    Сортировка документов
    """
    sort: SortInput_LettersSortFieldEnumType

    """
    Атрибутный поиск по документам
    """
    attributeSearch: letterAttributeSearch
  ): LetterListItemTypeCollection

  """
  Список локально нормативных актов
  """
  lNADocs(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10

    """
    Сортировка документов
    """
    sort: SortInput_LNADocsSortFieldEnumType

    """
    Атрибутный поиск по документам
    """
    attributeSearch: LNAAttributeSearch
  ): LNAListItemTypeCollection

  """
  API по группам рассылок
  """
  mailingGroupQueryAPI: MailingGroupQueryAPI

  """
  Список служебных записок
  """
  massMails(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10

    """
    Сортировка документов
    """
    sort: SortInput_MassMailsSortFieldEnumType

    """
    Атрибутный поиск по документам
    """
    attributeSearch: massMailAttributeSearch
  ): MassMailListItemTypeCollection
  metaSchema: MetaSchemaQuery

  """
  Запрос пользователей по массиву идентификаторов
  """
  multiUser(
    """
    Массив идентификаторов
    """
    input: [UserId!]
  ): [UserItem]

  """
  Подразделение
  """
  orgUnit(
    """
    Идентификатор подразделения
    """
    id: Int!
  ): OrgUnit

  """
  Список подразделений
  """
  orgUnits: [OrgUnit]

  """
  Список подразделений
  """
  orgUnitsTree(
    """
    Идентификатор родительского подразделения
    """
    parentId: Int
  ): [OrgUnit]

  """
  Список исходящих документов
  """
  outgoingDocs(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10

    """
    Сортировка документов
    """
    sort: SortInput_OutgoingDocsSortFieldEnumType

    """
    Атрибутный поиск по документам
    """
    attributeSearch: outgoingAttributeSearch
  ): OutgoingDocListItemTypeCollection

  """
  API по журналу регистрации
  """
  registrationQueryAPI: RegistrationQueryAPI

  """
  Список заявлений
  """
  requestDoc(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10

    """
    Сортировка документов
    """
    sort: SortInput_RequestDocsSortFieldEnumType

    """
    Атрибутный поиск по документам
    """
    attributeSearch: requestDocAttributeSearch
  ): RequestDocListItemTypeCollection

  """
  Резолюция по id
  """
  resolution(
    """
    Идентификатор резолюции
    """
    id: ResolutionId!
  ): Resolution

  """
  API по задаче
  """
  resolutionQueryAPI(
    """
    Идентификатор задачи
    """
    resolutionId: ResolutionId!
  ): ResolutionQueryAPI

  """
  Резолюции
  """
  resolutions(
    """
    Идентификатор пользователя по которому будет фильтр, по умолчанию текущий пользователь
    """
    user: UserId

    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10

    """
    Перечень фильтруемых статусов резолюций
    """
    statusFilter: [String!] = []

    """
    Фильтр для резолюций в зависимости от участия пользователя
    """
    filterType: ResolutionFilterEnum = NO

    """
    Сортировка резолюций
    """
    sort: SortInput_ResolutionsSortFieldEnumType

    """
    Фильтр по название документа
    """
    contains: String
  ): ResolutionTypeCollection

  """
  Резолюции по родительской задаче
  """
  resolutionsByParent(
    """
    Идентификатор родительской задачи
    """
    taskId: TaskId!
  ): [Resolution!]

  """
  Все резолюции по документу
  """
  resolutionsInDocument(
    """
    Идентификатор документа
    """
    documentId: DocumentId!
  ): [Resolution!]

  """
  Маршрут по идентификатору
  """
  route(
    """
    Идентификатор маршрута
    """
    id: RouteId!
  ): RouteItemDto

  """
  Полнотекстовый поиск документов
  """
  search(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10

    """
    Поисковый запрос
    """
    term: String
  ): SearchResultItemTypeCollection

  """
  Информация по серверу
  """
  serverInfo: ServerInfo

  """
  API по настройкам сервера
  """
  serverSettingsQueryAPI: ServerSettingsQueryAPI

  """
  Все записи по замещениям выбранного пользователя
  """
  slaveSubstitutions(
    """
    Идентификатор пользователя
    """
    id: UserId!
  ): [substitution!]

  """
  Этап по идентификатору
  """
  stage(
    """
    Идентификатор маршрута
    """
    routeId: RouteId!

    """
    Идентификатор этапа
    """
    id: StageId!
  ): StageItemDto

  """
  Список тегов
  """
  tags: [Tag]

  """
  Список тегов
  """
  tagsTree(
    """
    Идентификатор родительского тега
    """
    parentId: Int
  ): [Tag]

  """
  API по задаче
  """
  taskQueryAPI(
    """
    Идентификатор задачи
    """
    taskId: TaskId!
  ): TaskQueryAPI

  """
  Запрос задачи
  """
  taskView(
    """
    Идентификатор задачи
    """
    id: TaskId!
  ): TaskListItemInterface

  """
  Запрос пользователя
  """
  user(
    """
    Идентификатор пользователя
    """
    id: UserId!
  ): UserItem

  """
  Запрос пользователя на дату
  """
  userDated(
    """
    Идентификатор пользователя
    """
    id: UserId!

    """
    Дата время на какую смотреть
    """
    onDate: DateTime!
  ): UserDescriptionType

  """
  Поиск по пользователям
  """
  users(
    """
    Фильтр
    """
    query: String!

    """
    Включить уволенных
    """
    includeRetired: Boolean = false
  ): [UserItem]

  """
  API по настройкам пользователя
  """
  userSettingsQueryAPI(
    """
    Идентификатор пользователя
    """
    userId: UserId!
  ): UserSettingsQueryAPI

  """
  Пользователи с действиями по документу
  """
  usersWithDocumentActions(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10

    """
    Целевой идент. докумена
    """
    documentId: DocumentId!

    """
    Сортировка
    """
    sort: SortInput_UserActionsSortFieldEnumType

    """
    Аттрибуты поиска
    """
    attributeSearch: ExaminationUsersAttributeSearchType
  ): UserItemTypeCollection

  """
  Задачи по пользователю
  """
  userTasks(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10

    """
    Сортировка задач
    """
    sort: SortInput_UserTaskSortFieldEnumType

    """
    Аттрибуты поиска
    """
    attributeSearch: UserTasksAttributeSearchType
  ): TaskListItemInterfaceCollection
}

type DFSSubscription {
  documentSubscription(documentId: DocumentId!): DocSub
  resolution(userId: UserId): Resolution
  task(userId: UserId): TaskListItemInterface
}

union DocSub =
    ForHRDecisionTaskListItemType
  | ResolutionTaskListItemType
  | RouteTaskListItemType
  | ProcessingTaskListItemType
  | Resolution
  | ContractItem
  | LetterItem
  | IncomingDocItem
  | OutgoingDocItem
  | TaxExpertiseItem
  | RequestToHireItem
  | RequestForDismissalItem
  | TransferRequestItem
  | CancellationRequestForDismissalItem
  | LNADirectiveItem
  | LNAOrderItem
  | MassMailItem

"""
Пользователь - исполнитель служебной записки. Является строкой - идентификатором пользователя.
"""
scalar DocumentActor @fake(type: uuid)

"""
DocumentDescriptor
"""
type DocumentDescriptor {
  """
  Количество событий
  """
  eventCount: Int

  """
  Идентификатор документа
  """
  id: DocumentId!

  """
  Тип документа
  """
  type: DocumentType
}

"""
Идентификатор документа. Является строкой.
"""
scalar DocumentId @fake(type: uuid)

"""
Элемент журнала документа
"""
type DocumentJournalItemType {
  """
  Изменения во вложениях
  """
  attachments: [FilePropertyType]

  """
  Автор
  """
  authorId: UserId

  """
  Количество эвентов
  """
  eventCount: Int

  """
  Изменения в свойствах
  """
  properties: [JournalPropertyType]

  """
  Изменения во вложенных документах
  """
  subDocuments: [SubDocumentPropertyType]

  """
  Указатель на версию
  """
  traceId: String

  """
  Версия
  """
  version: Int

  """
  Когда создано
  """
  whenCreated: DateTime
}

"""
Представляет обёртку над коллекцией элементов
"""
type DocumentListItemInterfaceCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [IDocumentListItem]!
}

type DocumentMutationAPI {
  """
  Ознакомиться с документом
  """
  examine: Void

  """
  Ознакомиться с множеством документов
  """
  examineMulti(documentIds: [DocumentId!]!): Void

  """
  Публикация (предполагается ЛНА)
  """
  publish(
    """
    Персональная рассылка
    """
    users: [UserId!]!

    """
    Групповая рассылка
    """
    groups: [MailingGroupId!]!
  ): Boolean

  """
  Установить файлы для отображения в особой форме
  """
  publishedDocumentSetFiles(files: [String!]!): Void

  """
  Прочитать документ
  """
  read: Void

  """
  Убрать тег из досутпа документа
  """
  removeTag(
    """
    ИД Тега
    """
    tagId: Int!
  ): Void

  """
  Установка доступа по ссылке
  """
  setLinkAccessAllowed(
    """
    Доступ по ссылке
    """
    isLinkAccessAllowed: Boolean!
  ): Boolean

  """
  Группы рассылки
  """
  setMailingAttributes(
    """
    Персональная рассылка
    """
    users: [UserId!]!

    """
    Групповая рассылка
    """
    groups: [MailingGroupId!]!
  ): Boolean
}

type DocumentQueryAPI {
  """
  Контрольные карты
  """
  controlCards: [ControlCard]

  """
  Запрос документа
  """
  document: IDocument

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Журнал по документу
  """
  journal: [DocumentJournalItemType]

  """
  Все резолюции по документу
  """
  resolutions: [Resolution]

  """
  Маршруты по документу
  """
  routes: [RouteItemDto]

  """
  Все задачи по докумнту
  """
  tasks: [TaskListItemInterface]

  """
  Запрос не заблокированных вложений
  """
  unlockedAttachments: [FileVersionListItem]

  """
  Версия
  """
  version(eventCount: Long): Int!
}

"""
Роли пользователей для документа
"""
enum DocumentRoleEnumType {
  NONE
  READER
  ADMINISTRATOR
}

"""
Перечисление возможных полей для сортировки документов
"""
enum DocumentSortFieldEnumType {
  """
  По дате создания
  """
  whenCreated

  """
  По наименованию
  """
  title

  """
  По дате изменения
  """
  whenEdited

  """
  По автору
  """
  author

  """
  По типу
  """
  type
}

"""
Перечисление возможных статусов документа
"""
enum DocumentStatusEnumType {
  UNKNOWN

  """
  <Не поддерживается>
  """
  NOT_SUPPORTED

  """
  Черновик
  """
  DRAFT

  """
  Принят в работу
  """
  IN_PROGRESS

  """
  Просрочен
  """
  EXPIRED

  """
  Не согласован
  """
  REJECTED

  """
  Завершен
  """
  COMPLETED

  """
  Рассмотрен, в работе
  """
  REVIEWED

  """
  На рассмотрении
  """
  SENDED

  """
  На согласовании
  """
  ON_AGREEMENT

  """
  Аннулирован
  """
  REVOKED

  """
  Согласование завершено
  """
  AGREED

  """
  Подписан
  """
  SIGNED

  """
  Исполнен
  """
  SOLVED

  """
  На исполнении
  """
  ON_PERFORMANCE

  """
  Согласовано
  """
  AGREED_BY_ADDRESSEE

  """
  Согласован, в работе
  """
  AGREED_BY_ADDRESSEE_IN_PROGRESS

  """
  Отклонено
  """
  REJECTED_BY_ADDRESSEE

  """
  Отклонено, в работе
  """
  REJECTED_BY_ADDRESSEE_IN_PROGRESS

  """
  Отклонено, завершено
  """
  REJECTED_BY_ADDRESSEE_BY_PERFORMER

  """
  Отклонено, завершено
  """
  REJECTED_BY_ADDRESSEE_EXECUTED_BY_PERFORMER

  """
  Согласовано, отклонено исполнителем
  """
  AGREED_BY_ADDRESSEE_REJECTED_BY_PERFORMER
}

"""
Параметры для формирования списка обновляемых статусов документов
"""
input DocumentStatusRecalculateInput {
  """
  DocumentId
  """
  documentId: String

  """
  LatestsDocsTo
  """
  latestsDocsTo: String

  """
  LatestsDocsFrom
  """
  latestsDocsFrom: String

  """
  запрос по статусам где documentStatus не изменился послле изменения WhenStatusEditedMax у документа
  """
  isLatestDocumentsWithBreakDocStatus: Boolean
}

"""
Перечисление возможных типов документа
"""
enum DocumentType {
  UNKNOWN

  """
  Договор
  """
  CONTRACT

  """
  Карта налоговой экспертизы
  """
  TAX_EXPERTISE

  """
  Служебная записка
  """
  LETTER

  """
  Входящий документ
  """
  INCOMING_DOC

  """
  Исходящий документ
  """
  OUTGOING_DOC

  """
  Контрольная карта
  """
  CONTROL_CARD

  """
  Заявление на прием
  """
  REQUEST_TO_HIRE

  """
  Заявление на перевод
  """
  TRANSFER_REQUEST

  """
  Заявление на увольнение
  """
  REQUEST_FOR_DISMISSAL

  """
  Отзыв Заявления на увольнение
  """
  CANCELLATION_REQUEST_FOR_DISMISSAL

  """
  Приказ
  """
  ORDER

  """
  Распоряжение
  """
  DIRECTIVE

  """
  Заявление
  """
  GENERIC_REQUEST

  """
  Информационная рассылка
  """
  MASS_MAIL
}

input EditCancellationRequestForDismissalMutationInput {
  """
  Идентификатор заявления
  """
  id: DocumentId!

  """
  Значение атрибутов заявления
  """
  props: RequestForDismissalPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input EditContractMutationInput {
  """
  Идентификатор договора
  """
  id: DocumentId!

  """
  Значение основных атрибутов договора
  """
  props: ContractBasicPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input EditGenericRequestMutationInput {
  """
  Идентификатор документа
  """
  id: DocumentId!

  """
  Значение атрибутов заявления
  """
  props: GenericRequestPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input EditIncomingDocMutationInput {
  """
  Идентификатор документа
  """
  id: DocumentId!

  """
  Значение основных атрибутов документа
  """
  props: IncomingDocBasicPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input EditInternalTaskMutationInput {
  """
  Идентификатор задачи
  """
  taskId: TaskId!

  """
  Действие с задачей
  """
  action: String

  """
  Срок задачи
  """
  dueDate: DateTime

  """
  Делегированные исполнители
  """
  delegatedActors: [TaskActor!]

  """
  Комментарий | Причина | Замечание к задаче
  """
  comment: String

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input EditLetterMutationInput {
  """
  Идентификатор служебной записки
  """
  id: DocumentId!

  """
  Значение основных атрибутов служебной записки
  """
  props: LetterBasicPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input EditLNADirectiveMutationInput {
  """
  Идентификатор распоряжения
  """
  id: DocumentId!

  """
  Значение атрибутов заявления
  """
  props: LNADirectivePropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input EditLNAOrderMutationInput {
  """
  Идентификатор распоряжения
  """
  id: DocumentId!

  """
  Значение атрибутов заявления
  """
  props: LNAOrderPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input EditMassMailMutationInput {
  """
  Идентификатор
  """
  id: DocumentId!

  """
  Значение основных атрибутов
  """
  props: MassMailBasicPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input EditOutgoingDocMutationInput {
  """
  Идентификатор документа
  """
  id: DocumentId!

  """
  Значение основных атрибутов документа
  """
  props: OutgoingDocPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input EditRequestForDismissalMutationInput {
  """
  Идентификатор заявления
  """
  id: DocumentId!

  """
  Значение атрибутов заявления
  """
  props: RequestForDismissalPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input EditRequestToHireMutationInput {
  """
  Идентификатор заявления
  """
  id: DocumentId!

  """
  Значение атрибутов заявления
  """
  props: RequestToHirePropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input EditResolutionMutationInput {
  """
  Идентификатор резолюции
  """
  resolutionId: ResolutionId!

  """
  Текст-Описание
  """
  description: String

  """
  Срок
  """
  dueDate: DateTime

  """
  Контролер
  """
  overseer: TaskActor

  """
  Участники
  """
  actors: [TaskActor!]

  """
  Ответственные из участников
  """
  responsibles: [TaskActor!]

  """
  Автоматическое завершение задачи верхнего уровня
  """
  completeParentOption: Boolean

  """
  Резолюция завершается только ответственным исполнителем
  """
  onlyResponsibleResultOption: Boolean

  """
  Резолюция может быть завершена любым исполнителем
  """
  requireSingleResultOption: Boolean

  """
  Изменить срок у всех созданных ранее задач по резолюции
  """
  shiftTasksDueDate: Boolean
}

input EditRouteMutationInput {
  """
  Идентификатор маршрута
  """
  routeId: RouteId!

  """
  Заголовок маршрута
  """
  title: String!

  """
  Набор элементов документа для маршрута
  """
  targets: [ObservedDocumentInputObject!]

  """
  Набор идентификаторов этапов
  """
  stages: [StageId!]

  """
  Набор опций маршрута
  """
  options: [BooleanOptionInput!]
}

input EditStageMutationInput {
  """
  Идентификатор маршрута
  """
  routeId: RouteId!

  """
  Идентификатор этапа
  """
  stageId: StageId!

  """
  Продолжительность (дни)
  """
  duration: Int!

  """
  Участники этапа / Исполнители задач
  """
  actors: [TaskActor!]
}

input EditTaskMutationInput {
  """
  Идентификатор задачи
  """
  taskId: TaskId!

  """
  Действие с задачей
  """
  action: String

  """
  Срок задачи
  """
  dueDate: DateTime

  """
  Делегированные исполнители
  """
  delegatedActors: [TaskActor!]

  """
  Комментарий | Причина | Замечание к задаче
  """
  comment: String

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input EditTaxExpertiseMutationInput {
  """
  Идентификатор КНЭ
  """
  taxExpertiseId: DocumentId!

  """
  Идентификатор договора
  """
  contractId: DocumentId!

  """
  Значение основных атрибутов КНЭ
  """
  props: ContractTaxExpertisePropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

input EditTransferRequestMutationInput {
  """
  Идентификатор заявления
  """
  id: DocumentId!

  """
  Значение атрибутов заявления
  """
  props: TransferRequestPropertiesInput!

  """
  Вложения
  """
  attachments: [FileInstanceInput!]
}

"""
Данные по работнику
"""
type employeeDetails {
  """
  Подразделение
  """
  department: String

  """
  Должность
  """
  jobTitle: String

  """
  Филиал
  """
  orgUnit: String
}

"""
Данные о работнике
"""
input EmployeeDetailsInput {
  """
  Должность
  """
  jobTitle: String

  """
  Отдел
  """
  department: String

  """
  Подразделение
  """
  orgUnit: String
}

"""
Дополнительные даннае о работнике
"""
type employeeDetailsPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: employeeDetails
}

"""
Работник
"""
type EmployeeEntity {
  """
  Подразделение
  """
  department: String

  """
  ФИО
  """
  displayName: String

  """
  Имя
  """
  firstName: String!

  """
  Должность
  """
  jobTitle: String

  """
  Фамилия
  """
  lastName: String!

  """
  Филиал
  """
  orgUnit: String

  """
  Отчество
  """
  patronymic: String

  """
  Глобальный идентификатор человека
  """
  personalIdentifier: String

  """
  Url фото
  """
  photoUrl: String
}

"""
Описатель события
"""
type EventEntry {
  """
  Глагол в прошедшем времени как результат от события
  """
  action: String!

  """
  Описание события
  """
  description: String!

  """
  Идентификатор события
  """
  id: Guid!

  """
  Признак установки явного Guid-а для класса события
  """
  idSetManually: Boolean!

  """
  Перечень interface-ов реализующих классом события
  """
  interfaces: [String]

  """
  Namespace класса события
  """
  namespace: String!

  """
  Класс события
  """
  type: String
}

"""
Группа событий
"""
type EventGroup {
  """
  Тип документа
  """
  documentType: DocumentType

  """
  Перечень идентификаторов событий (Guid)
  """
  events: [Guid]

  """
  Идентификатор группы
  """
  id: EventGroupId!

  """
  Заголовок
  """
  title: String!
}

"""
Идентификатор группы событий. Является строкой.
"""
scalar EventGroupId @fake(type: uuid)

"""
Атрибутный поиск по документам
"""
input examinationDocumentsAttributeSearch {
  """
  Поиск по автору
  """
  author: UserId

  """
  Поиск по содержимому
  """
  contains: String

  """
  Зарегистрирован
  """
  isRegistred: Boolean

  """
  Номер регистрации
  """
  registrationNumber: String

  """
  Дата регистрации документа (с)
  """
  fromRegistrationDate: DateTime

  """
  Дата регистрации документа (по)
  """
  toRegistrationDate: DateTime

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Серийный номер документа
  """
  documentSerialNumber: String

  """
  Фильтр типа документа
  """
  documentTypes: [DocumentType!]

  """
  Наличие скан-копии
  """
  isScanCopyExists: Boolean

  """
  Чьи документы будем смотреть. Пусто == текущий пользовать
  """
  person: UserId

  """
  Скрывать документы, с которыми я ознакомлен
  """
  hideExamined: Boolean

  """
  Скрывать прочтенные документы
  """
  hideRead: Boolean

  """
  Отображать утратившие силу или не действующие
  """
  showDisabled: Boolean
}

input ExaminationUsersAttributeSearchType {
  """
  Фильтр по атрибутам пользователя (ФИО, должность, место работы)
  """
  contains: String
}

"""
Внешний пользователь
"""
type ExternalUser {
  """
  Статус учетной записи
  """
  activationStatus: ActivationStatus

  """
  Отдел
  """
  department: String

  """
  Почта
  """
  email: String

  """
  Внешний идентификатор пользователя
  """
  id: String

  """
  Статус активной учетной записи
  """
  isActive: Boolean

  """
  Уволен
  """
  isRetired: Boolean

  """
  Должность
  """
  jobTitle: String

  """
  Филиал
  """
  orgUnit: String

  """
  Телефон
  """
  phone: String

  """
  Имя пользователя
  """
  userName: String

  """
  Отсутствие
  """
  vacation: Vacation
}

"""
Найденый отрывок в поле документа
"""
type FieldHighlightRecord {
  """
  Описание поля документа
  """
  description: String

  """
  Внутренее имя поля документа
  """
  fieldName: String

  """
  Первый найденный отрывок в поле документа
  """
  highlight: String
}

"""
Хэш содержимого файлов. Является строкой.
"""
scalar FileContent @fake(type: filename)

"""
Найденый отрывок в файле
"""
type FileHighlightRecord {
  """
  hash файла
  """
  fileHash: String

  """
  Идентификатор файла
  """
  fileInstanceId: FileInstanceId

  """
  Имя файла
  """
  fileName: String

  """
  Найденые отрывки в файле или имени файла
  """
  highlights: [String]
}

"""
Экземпляр файла
"""
type FileInstance {
  """
  Контент файла
  """
  fileContent: String

  """
  Идентификатор файла
  """
  fileId: String!

  """
  Имя файла
  """
  fileName: String

  """
  Признак того, что файл заблокирован (как и удален, но нельзя скачать тело файла)
  """
  isLocked: Boolean!
}

"""
Идентификатор файла. Является строкой.
"""
scalar FileInstanceId

"""
Экземпляр файла
"""
input FileInstanceInput {
  fileId: String
  fileName: String!
  fileContent: String!
}

type FileInstancePropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: FileInstance
}

"""
Экземпляр файла. Json-строка пример: {
  "FileId": "Идентификатор файла",
  "FileName": "Имя файла",
  "FileContent": "Контент файла",
  "IsLocked": false
}
"""
scalar FileInstanceScalar

type FileJournalPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: FilePropertyType
}

"""
Операции над файлом в истории
"""
enum FilePropertyOperationType {
  """
  Добавлен
  """
  ADDED

  """
  Переименован
  """
  RENAMED

  """
  Изменен
  """
  REPLACED

  """
  Удален
  """
  DELETED

  """
  Уничтожен
  """
  LOCKED
}

"""
История файла
"""
type FilePropertyType {
  """
  Действие над файлом
  """
  action: FilePropertyOperationType

  """
  Контент файла
  """
  fileContent: String

  """
  ID файла
  """
  fileId: String

  """
  Имя файла
  """
  fileName: String

  """
  Признак того, что файл заблокирован (как и удален, но нельзя скачать тело файла)
  """
  isLocked: Boolean!
}

"""
Экземпляр файла во вложении
"""
type FileVersionListItem {
  """
  Автор
  """
  authorId: UserId

  """
  Идентификатор владельца-содержателя файла (документ или тема комментариев)
  """
  documentId: String!

  """
  Контент файла
  """
  fileContent: String

  """
  Идентификатор файла
  """
  fileId: String!

  """
  Размер файла
  """
  fileLength: Int

  """
  Имя файла
  """
  fileName: String

  """
  Тип файла
  """
  fileType: String

  """
  Признак того, что файл удален
  """
  isDeleted: Boolean!

  """
  Признак того, что файл заблокирован (как и удален, но нельзя скачать тело файла)
  """
  isLocked: Boolean!

  """
  Дата загрузки файла
  """
  when: DateTime
}

type FloatPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: Float
}

"""
Задача кадрового решения
"""
type ForHRDecisionTaskListItemType implements TaskListItemInterface {
  """
  Исполнитель задачи
  """
  actorId: UserId

  """
  Создатель задачи
  """
  authorId: UserId

  """
  Те кому задача делегирована
  """
  delegatedActorIds: [UserId]

  """
  Делегирования
  """
  delegations: [DelegationInfoType]

  """
  Документ
  """
  document: DocumentDescriptor!

  """
  Документ последней версии
  """
  documentLastVersion: LastDocumentVersion

  """
  Документ списочный
  """
  documentListItem: IDocumentListItem

  """
  Срок
  """
  dueDate: DateTime

  """
  Кто изменил задачу
  """
  editorId: UserId

  """
  Признак наличия потомков
  """
  hasChildren: Boolean!

  """
  ИД задачи
  """
  id: TaskId!

  """
  Требует персонального рассмотрения
  """
  isPersonalReview: Boolean

  """
  Последний пост актора
  """
  lastActorPost: String

  """
  Заметки во время работы с задачей
  """
  note: String

  """
  Информация по прочтениям
  """
  readAuditList: [ReadAuditType]

  """
  Зеленый гамбургер
  """
  resolutionsFinished: Boolean

  """
  Отправитель задачи
  """
  sender: person

  """
  Состояние задачи
  """
  state: String!

  """
  Текстовое описание состояние задачи
  """
  status: String! @examples(values: ["Initial","InProgress","Accepted","Approved","Resubmitted","Rejected","Final","Canceled"])

  """
  Пользователь который изменил статус
  """
  statusEditorId: UserId

  """
  Количество подзадач
  """
  subTaskCount: Int

  """
  Количество отклоненных подзадач
  """
  subTaskRejectedCount: Int

  """
  Количество разрешенных подзадач
  """
  subTaskSolvedCount: Int

  """
  Тип задачи
  """
  taskType: ProcessingTaskType! @examples(values: ["FOR_INCOMING", "FOR_OUTCOMING","FOR_INTERNAL_USE","FOR_HR_DECISION","FOR_IMPLEMENTATION"])

  """
  Дата создания задачи
  """
  whenCreated: DateTime!

  """
  Дата изменения задачи
  """
  whenEdited: DateTime!

  """
  Дата изменения статуса
  """
  whenStatusEdited: DateTime

  """
  Дата отправки
  """
  whenSubmitted: DateTime
}

"""
API для справочника типов заявлений
"""
type GenericRequestCatalogQueryAPI {
  """
  Все дерево категорий
  """
  allCategories: [RequestCategory]

  """
  Кураторы-ответственные по категории заявления и пользователю
  """
  curatorId(
    """
    Категория заявления
    """
    categoryId: Guid!

    """
    Работник для которого подбираются куратор-ответственный (default = Current)
    """
    personalIdentifier: PersonalIdentifier
  ): Curator

  """
  Подбор руководства для категории и пользователя
  """
  guide(
    """
    Категория заявления
    """
    categoryId: Guid!

    """
    Работник для которого подбираются шаблоны (default = Current)
    """
    personalIdentifier: PersonalIdentifier
  ): String

  """
  Подбор шаблонов по категории для пользователя
  """
  templates(
    """
    Категория заявления
    """
    categoryId: Guid!

    """
    Работник для которого подбираются шаблоны (default = Current)
    """
    personalIdentifier: PersonalIdentifier
  ): [RequestTemplateType]
}

"""
Атрибутный поиск по заявлениям
"""
input genericRequestDocAttributeSearch {
  """
  Поиск по автору
  """
  author: UserId

  """
  Поиск по содержимому
  """
  contains: String

  """
  Зарегистрирован
  """
  isRegistred: Boolean

  """
  Номер регистрации
  """
  registrationNumber: String

  """
  Дата регистрации документа (с)
  """
  fromRegistrationDate: DateTime

  """
  Дата регистрации документа (по)
  """
  toRegistrationDate: DateTime

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Серийный номер документа
  """
  documentSerialNumber: String

  """
  Фильтр типа документа
  """
  documentTypes: [DocumentType!]

  """
  Наличие скан-копии
  """
  isScanCopyExists: Boolean

  """
  Адресаты
  """
  addresseeIds: [UserId]

  """
  Ответственный
  """
  responder: UserId

  """
  Контролер
  """
  overseer: UserId

  """
  Заявитель
  """
  applicant: String

  """
  Категория заявления
  """
  category: DocumentType
}

"""
Сортировка документов
"""
input GenericRequestDocsSort {
  """
  Поле для сортировка
  """
  field: HRRequestDocsSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Перечисление возможных полей для сортировки заявлений
"""
enum GenericRequestDocsSortFieldEnumType {
  """
  По заявителю
  """
  applicant

  """
  По категории
  """
  categoryId

  """
  По дате создания
  """
  whenCreated

  """
  По дате изменения
  """
  whenEdited
}

"""
Обобщенное заявление
"""
type GenericRequestItem implements IDocument {
  """
  Адресат / Ответственный за рассмотрение
  """
  addresseeId: UserId!

  """
  Администраторы договора
  """
  adminIds: [UserId]

  """
  Заявитель
  """
  applicant: person!

  """
  Данные о заявитель-работник
  """
  applicantDetails: employeeDetails

  """
  Если заявитель пользователь СЭД, то это UserId
  """
  applicantId: UserId

  """
  Вложения
  """
  attachments: [FileVersionListItem]

  """
  Автор
  """
  authorId: UserId

  """
  Категория заявления
  """
  categoryId: Guid!

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Куратор-ответственный
  """
  curatorId: UserId

  """
  Серийный номер документа
  """
  documentSerialNumber: Int

  """
  Статус
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус по русски
  """
  documentStatusDescription: String

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean

  """
  Количество событий
  """
  eventCount: Int!

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  Проверяет есть ли доступ у текущего пользователя
  """
  hasAccess: Boolean

  """
  ИД документа
  """
  id: String!

  """
  Опция - доступ по ссылке
  """
  isLinkAccessAllowed: Boolean

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Группы рассылок
  """
  mailingGroups: [UsedMailingGroupType]

  """
  Пользователи рассылок
  """
  mailingUsers: [MailingUserItem]

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]

  """
  Читатели договора
  """
  readerIds: [UserId]

  """
  Регистрация в журнале
  """
  registrationBookItem: RegistrationBookItem

  """
  Регистрационные данные
  """
  registrationInfo: RegistrationInfo

  """
  Связанные документы
  """
  relations: [relation]

  """
  Примечание
  """
  remark: String

  """
  Данные по резервированию
  """
  reservationInfo: RegistrationInfo

  """
  Ответственный
  """
  responderId: UserId

  """
  Аннулирование документа
  """
  revoked: revoked

  """
  Скан-копия оригинала
  """
  scanCopyOriginal: FileInstance

  """
  Вложенные документы
  """
  subDocuments: [DocumentDescriptor]

  """
  Задачи кадрового решения
  """
  tasks: [TaskId]

  """
  Текст заявления
  """
  text: String

  """
  Список ролей текущего пользователя к этому документу
  """
  userRoles: [UserRoleInDocument]!

  """
  Версия
  """
  version: Int!

  """
  Когда создан
  """
  whenCreated: DateTime

  """
  Когда изменен
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Обобщенное заявление (для списочного отображения)
"""
type GenericRequestListItem implements IDocumentListItem {
  """
  Id адресата
  """
  addressee: UserId!

  """
  адресат ФИО
  """
  addresseeName: String

  """
  Заявитель
  """
  applicant: person

  """
  Applicant UserId
  """
  applicantId: UserId

  """
  Автор
  """
  authorId: UserId

  """
  Имя автора без дополнительго зарпоса
  """
  authorName: String

  """
  Категория заявления
  """
  categoryId: Guid!

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Контрольные карты
  """
  controlCardsCount: Int

  """
  Контрольные карты количество снятых
  """
  controlCardsRemovedCount: Int

  """
  Куратор-ответственный
  """
  curatorId: UserId

  """
  Статус документа
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус документа по русски
  """
  documentStatusDescription: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  ИД документа
  """
  id: DocumentId!

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]
  registrationBookItem: RegistrationBookItem

  """
  Ответственный
  """
  responderId: UserId

  """
  Документ аннулирован
  """
  revoked: revoked

  """
  Наличие скан-копии оригинала документа
  """
  scanCopy: FileInstanceId

  """
  Название
  """
  title: String!

  """
  Создано
  """
  whenCreated: DateTime

  """
  Изменено
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Представляет обёртку над коллекцией элементов
"""
type GenericRequestListItemTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [GenericRequestListItem]!
}

input GenericRequestPropertiesInput {
  """
  Категория заявления
  """
  categoryId: Guid!

  """
  Адресат
  """
  addresseeId: Addressee!

  """
  Заявитель
  """
  applicant: PersonInput!

  """
  Данные по заявитель-работник
  """
  applicantDetails: EmployeeDetailsInput

  """
  Текст заявления
  """
  text: String

  """
  Примечание
  """
  remark: String

  """
  Ответственный
  """
  responderId: Responder!

  """
  Файл скан-копии оригинала заявления
  """
  scanCopyOriginal: FileInstanceInput

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean
}

input GodPermissionsMutationInput {
  """
  Идентификатор объекта назначения разрешений
  """
  targetId: String!

  """
  Идентификаторы пользователей-администраторов
  """
  admins: [UserId!]!
}

"""
Группа. Является строкой - идентификатором группы.
"""
scalar GroupId @fake(type: uuid)

type GroupMutationAPI {
  create(
    """
    Имя группы
    """
    name: String!

    """
    Пользователи
    """
    users: [UserId!]!
  ): Void
  rename(
    """
    Новое имя группы
    """
    name: String!
  ): Void
  setMembers(
    """
    Пользователи
    """
    users: [UserId!]!
  ): Void
}

type groupType {
  """
  Кем создано
  """
  authorId: UserId

  """
  Кем изменено
  """
  editorId: UserId

  """
  Идентификатор группы
  """
  id: GroupId!

  """
  Имя группы
  """
  name: String

  """
  Пользователи в группе
  """
  userIds: [UserId]

  """
  Когда создано
  """
  whenCreated: DateTime

  """
  Когда Изменено
  """
  whenEdited: DateTime
}

scalar Guid @fake(type: uuid)

"""
Guid. Является строкой.
"""
scalar Guid228 @fake(type: uuid)

"""
Типы родительских элементов для уведомлений
"""
enum HostType {
  """
  Непоймичо
  """
  UNKNOWN

  """
  Задача
  """
  TASK
}

"""
Атрибутный поиск по документам
"""
input hrDocAttributeSearch {
  """
  Поиск по автору
  """
  author: UserId

  """
  Поиск по содержимому
  """
  contains: String

  """
  Зарегистрирован
  """
  isRegistred: Boolean

  """
  Номер регистрации
  """
  registrationNumber: String

  """
  Дата регистрации документа (с)
  """
  fromRegistrationDate: DateTime

  """
  Дата регистрации документа (по)
  """
  toRegistrationDate: DateTime

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Серийный номер документа
  """
  documentSerialNumber: String

  """
  Фильтр типа документа
  """
  documentTypes: [DocumentType!]

  """
  Наличие скан-копии
  """
  isScanCopyExists: Boolean

  """
  Адресаты
  """
  addresseeIds: [UserId]

  """
  Ответственный
  """
  responder: UserId

  """
  Заявитель
  """
  applicant: String

  """
  Номер регистрации
  """
  orderNumber: String

  """
  Статус документа
  """
  documentStatus: String

  """
  Тип документа
  """
  type: DocumentType

  """
  Перечень фильтруемых статусов договоров
  """
  statusFilter: [String!]

  """
  Показывать документы с оформленным приказом
  """
  isShowDocsWithOrders: Boolean

  """
  Показывать аннулированные документы
  """
  isShowRevokedDocs: Boolean

  """
  Показывать документы со статусом В работе
  """
  isShowInProgressDocs: Boolean
}

"""
Кадровое заявление (для списочного отображения)
"""
type HRRequestDocListItem implements IDocumentListItem {
  """
  Id адресата
  """
  addressee: UserId!

  """
  адресат ФИО
  """
  addresseeName: String

  """
  Заявитель
  """
  applicant: person

  """
  Applicant ExternalUserId
  """
  applicantExternalUserId: String

  """
  Applicant UserId
  """
  applicantId: UserId

  """
  Автор
  """
  authorId: UserId

  """
  Имя автора без дополнительго зарпоса
  """
  authorName: String

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Контрольные карты
  """
  controlCardsCount: Int

  """
  Контрольные карты количество снятых
  """
  controlCardsRemovedCount: Int

  """
  Статус документа
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус документа по русски
  """
  documentStatusDescription: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  ИД документа
  """
  id: DocumentId!

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Вх. №
  """
  orderDescriptor: orderDescriptor

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]
  registrationBookItem: RegistrationBookItem

  """
  Ответственный
  """
  responderId: UserId

  """
  Документ аннулирован
  """
  revoked: revoked

  """
  Наличие скан-копии оригинала документа
  """
  scanCopy: FileInstanceId

  """
  Статус
  """
  status: String

  """
  Название
  """
  title: String!

  """
  Создано
  """
  whenCreated: DateTime

  """
  Изменено
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Представляет обёртку над коллекцией элементов
"""
type HRRequestDocListItemTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [HRRequestDocListItem]!
}

type HRRequestDocMutationAPI {
  """
  Доставить заявление адресату
  """
  send: Boolean
}

"""
Сортировка документов
"""
input HRRequestDocsSort {
  """
  Поле для сортировка
  """
  field: HRRequestDocsSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Перечисление возможных полей для сортировки кадровых заявлений
"""
enum HRRequestDocsSortFieldEnumType {
  """
  По заявителю
  """
  applicant

  """
  По типу
  """
  type

  """
  По дате создания
  """
  whenCreated

  """
  По дате изменения
  """
  whenEdited
}

type HtmlPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: String
}

type IdentityPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: String
}

"""
Документ
"""
interface IDocument {
  """
  Администраторы документа
  """
  adminIds: [UserId]

  """
  Вложения
  """
  attachments: [FileVersionListItem]

  """
  Автор
  """
  authorId: UserId

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Серийный номер документа
  """
  documentSerialNumber: Int

  """
  Статус
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус по русски
  """
  documentStatusDescription: String

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Количество событий
  """
  eventCount: Int!

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  Проверяет есть ли доступ у текущего пользователя
  """
  hasAccess: Boolean

  """
  ИД документа
  """
  id: String!

  """
  Опция - доступ по ссылке
  """
  isLinkAccessAllowed: Boolean

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Группы рассылок
  """
  mailingGroups: [UsedMailingGroupType]

  """
  Пользователи рассылок
  """
  mailingUsers: [MailingUserItem]

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]

  """
  Читатели документа
  """
  readerIds: [UserId]

  """
  Регистрация в журнале
  """
  registrationBookItem: RegistrationBookItem

  """
  Регистрационные данные
  """
  registrationInfo: RegistrationInfo

  """
  Связанные документы
  """
  relations: [relation]

  """
  Данные по резервированию
  """
  reservationInfo: RegistrationInfo

  """
  Аннулирование документа
  """
  revoked: revoked

  """
  Вложенные документы
  """
  subDocuments: [DocumentDescriptor]

  """
  Список ролей текущего пользователя к этому документу
  """
  userRoles: [UserRoleInDocument]!

  """
  Версия
  """
  version: Int!

  """
  Когда создан
  """
  whenCreated: DateTime

  """
  Когда создан
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Документ списковый
"""
interface IDocumentListItem {
  """
  Автор
  """
  authorId: UserId

  """
  Имя автора без дополнительго зарпоса
  """
  authorName: String

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Контрольные карты количество
  """
  controlCardsCount: Int

  """
  Контрольные карты количество снятых
  """
  controlCardsRemovedCount: Int

  """
  Статус документа
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус документа по русски
  """
  documentStatusDescription: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  ИД документа
  """
  id: DocumentId!

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]
  registrationBookItem: RegistrationBookItem

  """
  Ответственный
  """
  responderId: UserId

  """
  Документ аннулирован
  """
  revoked: revoked

  """
  Наличие скан-копии оригинала документа
  """
  scanCopy: FileInstanceId

  """
  Название
  """
  title: String!

  """
  Создано
  """
  whenCreated: DateTime

  """
  Изменено
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

input IncomingDocBasicPropertiesInput {
  """
  Тип документа
  """
  type: ReferenceKeyInput!

  """
  Заголовок
  """
  head: String!

  """
  Отправитель
  """
  sender: ReferenceCorrespondentId!

  """
  Адресат
  """
  addressees: [Addressee]!

  """
  Исходящий номер отправителя
  """
  senderOutgoingNumber: String!

  """
  Дата документа отправителя
  """
  documentDate: DateTime!

  """
  Исполнитель
  """
  actor: String

  """
  Отметка о снятии с особого контроля
  """
  controlMark: Boolean

  """
  Примечание
  """
  remark: String

  """
  Дата контроля
  """
  controlDate: DateTime

  """
  Статус
  """
  status: ReferenceKeyInput

  """
  Особый контроль
  """
  specialControls: MultiReferenceKeyInput

  """
  Информация ограниченного доступа
  """
  commercialSecret: CommercialSecret

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean
}

"""
Входящий документ
"""
type IncomingDocItem implements IDocument {
  """
  Исполнитель
  """
  actor: String

  """
  Адресаты
  """
  addresseeIds: [Addressee]

  """
  Администраторы договора
  """
  adminIds: [UserId]

  """
  Вложения
  """
  attachments: [FileVersionListItem]

  """
  Автор
  """
  authorId: UserId

  """
  Информация ограниченного доступа
  """
  commercialSecret: CommercialSecret

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Количество контрольных карт
  """
  controlCardsCount: Int

  """
  Дата контроля
  """
  controlDate: DateTime

  """
  Снято с контроля
  """
  controlMark: Boolean

  """
  Дата документа
  """
  documentDate: DateTime

  """
  Серийный номер документа
  """
  documentSerialNumber: Int

  """
  Статус
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус по русски
  """
  documentStatusDescription: String

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean

  """
  Количество событий
  """
  eventCount: Int!

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  Проверяет есть ли доступ у текущего пользователя
  """
  hasAccess: Boolean

  """
  Заголовок
  """
  head: String

  """
  ИД документа
  """
  id: String!

  """
  Опция - доступ по ссылке
  """
  isLinkAccessAllowed: Boolean

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Группы рассылок
  """
  mailingGroups: [UsedMailingGroupType]

  """
  Пользователи рассылок
  """
  mailingUsers: [MailingUserItem]

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]

  """
  Читатели договора
  """
  readerIds: [UserId]

  """
  Регистрация в журнале
  """
  registrationBookItem: RegistrationBookItem

  """
  Регистрационные данные
  """
  registrationInfo: RegistrationInfo

  """
  Связанные документы
  """
  relations: [relation]

  """
  Примечание
  """
  remark: String

  """
  Данные по резервированию
  """
  reservationInfo: RegistrationInfo

  """
  Аннулирование документа
  """
  revoked: revoked

  """
  Отправитель
  """
  sender: Correspondent

  """
  Исходящий номер отправителя
  """
  senderOutgoingNumber: String

  """
  Особый контроль
  """
  specialControls: MultiReferenceValue

  """
  Статус
  """
  status: ReferenceValue

  """
  Вложенные документы
  """
  subDocuments: [DocumentDescriptor]

  """
  Задачи внутренней корреспонденции
  """
  tasks: [TaskId]

  """
  Тип документа
  """
  type: ReferenceValue

  """
  Список ролей текущего пользователя к этому документу
  """
  userRoles: [UserRoleInDocument]!

  """
  Версия
  """
  version: Int!

  """
  Когда создан
  """
  whenCreated: DateTime

  """
  Когда изменен
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Входящий документ
"""
type IncomingDocListItem implements IDocumentListItem {
  """
  Исполнитель
  """
  actor: String

  """
  Id адресатов
  """
  addresseeIds: [UserId]

  """
  Автор
  """
  authorId: UserId

  """
  Имя автора без дополнительго зарпоса
  """
  authorName: String

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Контрольные карты
  """
  controlCardsCount: Int

  """
  Контрольные карты количество снятых
  """
  controlCardsRemovedCount: Int

  """
  Дата
  """
  documentDate: DateTime

  """
  Статус документа
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус документа по русски
  """
  documentStatusDescription: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  ИД документа
  """
  id: DocumentId!

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]

  """
  Кем зарегистрировано
  """
  registrationAuthorId: UserId
  registrationBookItem: RegistrationBookItem

  """
  Вх. №
  """
  registrationDate: DateTime

  """
  Дата
  """
  registrationNumber: String

  """
  Кем забронировано
  """
  reservedRegistrationAuthorId: UserId

  """
  Забронированный Вх. №
  """
  reservedRegistrationDate: DateTime

  """
  Дата забронирования
  """
  reservedRegistrationNumber: String

  """
  Ответственный
  """
  responderId: UserId

  """
  Документ аннулирован
  """
  revoked: revoked

  """
  Наличие скан-копии оригинала документа
  """
  scanCopy: FileInstanceId

  """
  Отправитель
  """
  sender: String

  """
  ID Отправителя
  """
  senderId: ReferenceCorrespondentId @fake(type:uuid)

  """
  Исх. №
  """
  senderOutgoingNumber: String

  """
  Название
  """
  title: String!

  """
  Создано
  """
  whenCreated: DateTime

  """
  Изменено
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Представляет обёртку над коллекцией элементов
"""
type IncomingDocListItemTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [IncomingDocListItem]!
}

type IncomingDocMutationAPI {
  """
  Создать контрольную карту
  """
  createControlCard(input: ControlCardPropertiesInput!): ControlCard

  """
  Изменить контрольную карту
  """
  editControlCard(
    """
    Идентификатор контрольной карты
    """
    id: DocumentId!
    input: ControlCardPropertiesInput!
  ): ControlCard

  """
  Зарегистрировать и отправить
  """
  registerAndSend: Boolean
}

"""
Атрибутный поиск по документам
"""
input incomingDocsAttributeSearch {
  """
  Поиск по автору
  """
  author: UserId

  """
  Поиск по содержимому
  """
  contains: String

  """
  Зарегистрирован
  """
  isRegistred: Boolean

  """
  Номер регистрации
  """
  registrationNumber: String

  """
  Дата регистрации документа (с)
  """
  fromRegistrationDate: DateTime

  """
  Дата регистрации документа (по)
  """
  toRegistrationDate: DateTime

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Серийный номер документа
  """
  documentSerialNumber: String

  """
  Фильтр типа документа
  """
  documentTypes: [DocumentType!]

  """
  Наличие скан-копии
  """
  isScanCopyExists: Boolean

  """
  Отправитель
  """
  sender: String

  """
  Адресаты
  """
  addresseeIds: [UserId]

  """
  Отправитель
  """
  senderOutgoingNumber: String

  """
  Исходящая дата документа (с)
  """
  fromDocumentDate: DateTime

  """
  Исходящаяя дата документа (по)
  """
  toDocumentDate: DateTime

  """
  Тот самый корреспондент который фильтруем
  """
  correspondentId: ReferenceCorrespondentId
}

"""
Перечисление возможных полей для сортировки вх. документов
"""
enum IncomingDocsSortFieldEnumType {
  """
  По теме
  """
  title

  """
  По отправителю
  """
  sender

  """
  По исх. №
  """
  outNum

  """
  По дате
  """
  docDate

  """
  По номеру регистрации
  """
  regnum

  """
  По дате регистрации
  """
  regdate

  """
  По дате создания
  """
  whenCreated

  """
  По дате изменения
  """
  whenEdited
}

type IntPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: Int
}

type issueSystemNumber {
  """
  Статус job-а
  """
  getStatus(
    """
    Идент. job-а
    """
    id: Guid!
  ): IssueSystemNumberJobStatus

  """
  Издание системных номеров для документов
  """
  start: Guid

  """
  Принудительный останов job-а
  """
  stop(
    """
    Идент. job-а
    """
    id: Guid!
  ): IssueSystemNumberJobStatus
}

"""
Состояние job-а
"""
type IssueSystemNumberJobStatus {
  """
  Время исполнения
  """
  elapsed: String

  """
  Время окончания
  """
  endTime: DateTime

  """
  Сообщение об ошибке
  """
  error: String

  """
  Идент. задания
  """
  jobId: Guid!

  """
  Последний порядковый номер документа
  """
  lastDocNum: String

  """
  Активность грейна
  """
  online: Boolean!

  """
  Время обновления
  """
  refreshTime: DateTime

  """
  Время запуска
  """
  startTime: DateTime

  """
  Статус
  """
  status: String!

  """
  Общее количество обработанных элементов
  """
  totalCount: Long!
}

type JobMutationAPI {
  """
  Job для производства событий DocumentRegistrationCaptured
  """
  captureRegistrationBook: captureRegistrationBook

  """
  Job для производства событий ResolutionConnected
  """
  connectResolutions: connectResolutions

  """
  Издание системных номеров для документов
  """
  issueSystemNumber: issueSystemNumber
}

"""
Поля в истории
"""
interface JournalPropertyInterface {
  """
  Тип
  """
  type: String!
}

"""
Свойcтво
"""
type JournalPropertyType {
  """
  Поле
  """
  field: JournalPropertyInterface

  """
  Ключ - имя поля
  """
  key: String!
}

"""
Код-значение
"""
type KeyValue {
  """
  Признак - используется ли эта пара код-значение
  """
  isUsed: Boolean!

  """
  Код
  """
  key: String!

  """
  Значение
  """
  value: String!
}

type KeyValuePairType {
  key: String
  value: MetaValue
}

"""
Документ
"""
type LastDocumentVersion {
  """
  Автор
  """
  authorId: UserId

  """
  Имя автора без дополнительго зарпоса
  """
  authorName: String

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Контрольные карты
  """
  controlCardsCount: Int

  """
  Контрольные карты количество снятых
  """
  controlCardsRemovedCount: Int

  """
  Статус документа
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус документа по русски
  """
  documentStatusDescription: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  ИД документа
  """
  id: DocumentId!

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Ответственный
  """
  responderId: UserId

  """
  Документ аннулирован
  """
  revoked: revoked

  """
  Наличие скан-копии оригинала документа
  """
  scanCopy: FileInstanceId

  """
  Название
  """
  title: String!

  """
  Создано
  """
  whenCreated: DateTime

  """
  Изменено
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Атрибутный поиск по документам
"""
input letterAttributeSearch {
  """
  Поиск по автору
  """
  author: UserId

  """
  Поиск по содержимому
  """
  contains: String

  """
  Зарегистрирован
  """
  isRegistred: Boolean

  """
  Номер регистрации
  """
  registrationNumber: String

  """
  Дата регистрации документа (с)
  """
  fromRegistrationDate: DateTime

  """
  Дата регистрации документа (по)
  """
  toRegistrationDate: DateTime

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Серийный номер документа
  """
  documentSerialNumber: String

  """
  Фильтр типа документа
  """
  documentTypes: [DocumentType!]

  """
  Наличие скан-копии
  """
  isScanCopyExists: Boolean

  """
  Адресаты
  """
  addresseeIds: [UserId]

  """
  Отправитель
  """
  sender: [UserId]

  """
  Исполнитель
  """
  actor: UserId

  """
  Ответственный
  """
  responder: UserId
}

input LetterBasicPropertiesInput {
  """
  Тема
  """
  head: String!

  """
  Ответственный
  """
  responder: Responder

  """
  Отправитель
  """
  sender: Sender!

  """
  Адресат
  """
  addressees: [Addressee!]

  """
  Исполнитель
  """
  actor: DocumentActor

  """
  Персонально
  """
  personally: Boolean

  """
  Количество листов
  """
  sheetsQuantity: Int

  """
  Количество листов приложений
  """
  additionSheetsQuantity: Int

  """
  Примечание
  """
  remark: String

  """
  Сообщение
  """
  text: String

  """
  Статус
  """
  status: ReferenceKeyInput

  """
  Информация ограниченного доступа
  """
  commercialSecret: CommercialSecret

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean
}

"""
Служебная записка
"""
type LetterItem implements IDocument {
  """
  Исполнитель
  """
  actorId: UserId

  """
  Количество листов приложений
  """
  additionSheetsQuantity: Int

  """
  Адресаты
  """
  addresseeIds: [UserId]

  """
  Администраторы договора
  """
  adminIds: [UserId]

  """
  Вложения
  """
  attachments: [FileVersionListItem]

  """
  Автор
  """
  authorId: UserId

  """
  Информация ограниченного доступа
  """
  commercialSecret: CommercialSecret

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Серийный номер документа
  """
  documentSerialNumber: Int

  """
  Статус
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус по русски
  """
  documentStatusDescription: String

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean

  """
  Количество событий
  """
  eventCount: Int!

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  Проверяет есть ли доступ у текущего пользователя
  """
  hasAccess: Boolean

  """
  Тема
  """
  head: String

  """
  ИД документа
  """
  id: String!

  """
  Опция - доступ по ссылке
  """
  isLinkAccessAllowed: Boolean

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Группы рассылок
  """
  mailingGroups: [UsedMailingGroupType]

  """
  Пользователи рассылок
  """
  mailingUsers: [MailingUserItem]

  """
  Персонально
  """
  personally: Boolean

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]

  """
  Читатели договора
  """
  readerIds: [UserId]

  """
  Регистрация в журнале
  """
  registrationBookItem: RegistrationBookItem

  """
  Регистрационные данные
  """
  registrationInfo: RegistrationInfo

  """
  Связанные документы
  """
  relations: [relation]

  """
  Примечание
  """
  remark: String

  """
  Данные по резервированию
  """
  reservationInfo: RegistrationInfo

  """
  Ответственный
  """
  responderId: UserId

  """
  Аннулирование документа
  """
  revoked: revoked

  """
  Отправитель
  """
  senderId: UserId

  """
  Количество листов
  """
  sheetsQuantity: Int

  """
  Статус
  """
  status: ReferenceValue

  """
  Вложенные документы
  """
  subDocuments: [DocumentDescriptor]

  """
  Задачи внеренней корреспонденции
  """
  tasks: [TaskId]

  """
  Сообщение
  """
  text: String

  """
  Список ролей текущего пользователя к этому документу
  """
  userRoles: [UserRoleInDocument]!

  """
  Версия
  """
  version: Int!

  """
  Когда создан
  """
  whenCreated: DateTime

  """
  Когда изменен
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Служебная записка
"""
type LetterListItem implements IDocumentListItem {
  """
  Исполнитель
  """
  actorId: UserId

  """
  Id адресатов
  """
  addresseeIds: [UserId]

  """
  Автор
  """
  authorId: UserId

  """
  Имя автора без дополнительго зарпоса
  """
  authorName: String

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Контрольные карты
  """
  controlCardsCount: Int

  """
  Контрольные карты количество снятых
  """
  controlCardsRemovedCount: Int

  """
  Статус документа
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус документа по русски
  """
  documentStatusDescription: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  Тема
  """
  head: String!

  """
  ИД документа
  """
  id: DocumentId!

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Признак зарегистрирован или нет
  """
  isRegistered: Boolean

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]
  registrationBookItem: RegistrationBookItem

  """
  Дата регистрации
  """
  registrationDate: DateTime

  """
  Номер регистрации
  """
  registrationNumber: String

  """
  Ответственный
  """
  responderId: UserId

  """
  Документ аннулирован
  """
  revoked: revoked

  """
  Наличие скан-копии оригинала документа
  """
  scanCopy: FileInstanceId

  """
  Отправитель
  """
  senderId: UserId

  """
  Статус
  """
  status: String

  """
  Название
  """
  title: String!

  """
  Создано
  """
  whenCreated: DateTime

  """
  Изменено
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Представляет обёртку над коллекцией элементов
"""
type LetterListItemTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [LetterListItem]!
}

type LetterMutationAPI {
  """
  Зарегистрировать и отправить
  """
  registerAndSend: Boolean

  """
  Зарегистрировать и отправить принудительно
  """
  registerAndSendForAdmin: Boolean
}

"""
Перечисление возможных полей для сортировки служебных записок
"""
enum LettersSortFieldEnumType {
  """
  По теме
  """
  title

  """
  По отправителю
  """
  sender

  """
  По исполнителю
  """
  actor

  """
  По номеру регистрации
  """
  regnum

  """
  По дате регистрации
  """
  regdate

  """
  По дате создания
  """
  whenCreated

  """
  По дате изменения
  """
  whenEdited
}

"""
Атрибутный поиск по документам
"""
input LNAAttributeSearch {
  """
  Поиск по автору
  """
  author: UserId

  """
  Поиск по содержимому
  """
  contains: String

  """
  Зарегистрирован
  """
  isRegistred: Boolean

  """
  Номер регистрации
  """
  registrationNumber: String

  """
  Дата регистрации документа (с)
  """
  fromRegistrationDate: DateTime

  """
  Дата регистрации документа (по)
  """
  toRegistrationDate: DateTime

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Серийный номер документа
  """
  documentSerialNumber: String

  """
  Фильтр типа документа
  """
  documentTypes: [DocumentType!]

  """
  Наличие скан-копии
  """
  isScanCopyExists: Boolean

  """
  Заголовок
  """
  title: String

  """
  Место регистрации
  """
  placeOfRegistration: String

  """
  Подписывающий
  """
  signerId: Signer

  """
  Контроль за исполнением
  """
  overseerId: Overseer

  """
  Контроль за исполнением
  """
  actorId: DocumentActor

  """
  Ответсвенный
  """
  responderId: Responder

  """
  Автор
  """
  autorId: UserId

  """
  Статус документа
  """
  documentStatus: String

  """
  Тип документа
  """
  type: DocumentType

  """
  Статус действия
  """
  validStatusKey: String

  """
  Перечень фильтруемых статусов договоров
  """
  statusFilter: [String!]
}

"""
Распоряжения
"""
type LNADirectiveItem implements IDocument {
  """
  Исполнитель
  """
  actor: UserId

  """
  Администраторы договора
  """
  adminIds: [UserId]

  """
  Вложения
  """
  attachments: [FileVersionListItem]

  """
  Автор
  """
  authorId: UserId

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Серийный номер документа
  """
  documentSerialNumber: Int

  """
  Статус
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус по русски
  """
  documentStatusDescription: String

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean

  """
  Количество событий
  """
  eventCount: Int!

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  Файлы для отображения в особой форме
  """
  examinationFiles: [String]

  """
  Проверяет есть ли доступ у текущего пользователя
  """
  hasAccess: Boolean

  """
  ИД документа
  """
  id: String!

  """
  Опция - доступ по ссылке
  """
  isLinkAccessAllowed: Boolean

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Доступность регистрации
  """
  isRegistrationAllowed: Boolean

  """
  Группы рассылок
  """
  mailingGroups: [UsedMailingGroupType]

  """
  Пользователи рассылок
  """
  mailingUsers: [MailingUserItem]

  """
  Контроль за исполнением распоряжения
  """
  overseer: UserId

  """
  Место регистрации
  """
  placeOfRegistration: ReferenceValue

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]

  """
  Читатели договора
  """
  readerIds: [UserId]

  """
  Регистрация в журнале
  """
  registrationBookItem: RegistrationBookItem

  """
  Дата регистрации
  """
  registrationDate: DateTime

  """
  Регистрационные данные
  """
  registrationInfo: RegistrationInfo

  """
  Номер регистрации
  """
  registrationNumber: String

  """
  Связанные документы
  """
  relations: [relation]

  """
  Примечание
  """
  remark: String

  """
  Данные по резервированию
  """
  reservationInfo: RegistrationInfo

  """
  Ответственный
  """
  responder: UserId

  """
  Аннулирование документа
  """
  revoked: revoked

  """
  Скан-копия оригинала
  """
  scanCopyOriginal: FileInstance

  """
  Подписывающий
  """
  signer: UserId

  """
  Вложенные документы
  """
  subDocuments: [DocumentDescriptor]

  """
  Задачи внеренней корреспонденции
  """
  tasks: [TaskId]

  """
  Заголовок
  """
  title: String!

  """
  Список ролей текущего пользователя к этому документу
  """
  userRoles: [UserRoleInDocument]!

  """
  Статус действия
  """
  validStatus: ReferenceValue

  """
  Версия
  """
  version: Int!

  """
  Когда создан
  """
  whenCreated: DateTime

  """
  Когда изменен
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

input LNADirectivePropertiesInput {
  """
  Заголовок
  """
  title: String!

  """
  Примечание
  """
  remark: String

  """
  Подписывающий
  """
  signer: Signer!

  """
  Ответственный
  """
  responder: Responder!

  """
  Исполнитель
  """
  actor: DocumentActor!

  """
  Контролер
  """
  overseer: Overseer!

  """
  Место регистрации
  """
  placeOfRegistration: ReferenceKeyInput

  """
  Скан-копия оригинала
  """
  scanCopyOriginal: FileInstanceInput

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean

  """
  Статус действия
  """
  validStatus: ReferenceKeyInput
}

"""
Перечисление возможных полей для сортировки ЛНА
"""
enum LNADocsSortFieldEnumType {
  """
  По дате регистрации
  """
  registrationDate

  """
  По дате создания
  """
  whenCreated

  """
  По дате изменения
  """
  whenEdited
}

"""
ЛНА (для списочного отображения)
"""
type LNAListItem implements IDocumentListItem {
  """
  Исполнитель
  """
  actorId: UserId

  """
  Автор
  """
  authorId: UserId

  """
  Имя автора без дополнительго зарпоса
  """
  authorName: String

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Контрольные карты
  """
  controlCardsCount: Int

  """
  Контрольные карты количество снятых
  """
  controlCardsRemovedCount: Int

  """
  Статус документа
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус документа по русски
  """
  documentStatusDescription: String

  """
  Тип документа
  """
  documentType: DocumentType!

  """
  Кем изменено
  """
  editorId: UserId

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  ИД документа
  """
  id: DocumentId!

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Состояние регистрации
  """
  isRegistered: Boolean

  """
  Контролер
  """
  overseerId: UserId

  """
  Место регистрации, ключ
  """
  placeOfRegistrationKey: String

  """
  Место регистрации
  """
  placeOfRegistrationValue: String

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]
  registrationBookItem: RegistrationBookItem

  """
  Ответственный
  """
  responderId: UserId

  """
  Документ аннулирован
  """
  revoked: revoked

  """
  Наличие скан-копии оригинала документа
  """
  scanCopy: FileInstanceId

  """
  Подписывающий
  """
  signerId: UserId

  """
  Название
  """
  title: String!

  """
  Статус действия
  """
  validStatusValue: String

  """
  Создано
  """
  whenCreated: DateTime

  """
  Изменено
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Представляет обёртку над коллекцией элементов
"""
type LNAListItemTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [LNAListItem]!
}

"""
Приказы
"""
type LNAOrderItem implements IDocument {
  """
  Исполнитель
  """
  actor: UserId

  """
  Администраторы договора
  """
  adminIds: [UserId]

  """
  Вложения
  """
  attachments: [FileVersionListItem]

  """
  Автор
  """
  authorId: UserId

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Серийный номер документа
  """
  documentSerialNumber: Int

  """
  Статус
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус по русски
  """
  documentStatusDescription: String

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean

  """
  Количество событий
  """
  eventCount: Int!

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  Файлы для отображения в особой форме
  """
  examinationFiles: [String]

  """
  Проверяет есть ли доступ у текущего пользователя
  """
  hasAccess: Boolean

  """
  ИД документа
  """
  id: String!

  """
  Опция - доступ по ссылке
  """
  isLinkAccessAllowed: Boolean

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Доступность регистрации
  """
  isRegistrationAllowed: Boolean

  """
  Группы рассылок
  """
  mailingGroups: [UsedMailingGroupType]

  """
  Пользователи рассылок
  """
  mailingUsers: [MailingUserItem]

  """
  Контроль за исполнением приказа
  """
  overseer: UserId

  """
  Место регистрации
  """
  placeOfRegistration: ReferenceValue

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]

  """
  Читатели договора
  """
  readerIds: [UserId]

  """
  Регистрация в журнале
  """
  registrationBookItem: RegistrationBookItem

  """
  Дата регистрации
  """
  registrationDate: DateTime

  """
  Регистрационные данные
  """
  registrationInfo: RegistrationInfo

  """
  Номер регистрации
  """
  registrationNumber: String

  """
  Связанные документы
  """
  relations: [relation]

  """
  Примечание
  """
  remark: String

  """
  Данные по резервированию
  """
  reservationInfo: RegistrationInfo

  """
  Ответственный
  """
  responder: UserId

  """
  Аннулирование документа
  """
  revoked: revoked

  """
  Скан-копия оригинала
  """
  scanCopyOriginal: FileInstance

  """
  Подписывающий
  """
  signer: UserId

  """
  Вложенные документы
  """
  subDocuments: [DocumentDescriptor]

  """
  Задачи внеренней корреспонденции
  """
  tasks: [TaskId]

  """
  Заголовок
  """
  title: String!

  """
  Список ролей текущего пользователя к этому документу
  """
  userRoles: [UserRoleInDocument]!

  """
  Статус действия
  """
  validStatus: ReferenceValue

  """
  Версия
  """
  version: Int!

  """
  Когда создан
  """
  whenCreated: DateTime

  """
  Когда изменен
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

input LNAOrderPropertiesInput {
  """
  Заголовок
  """
  title: String!

  """
  Примечание
  """
  remark: String

  """
  Подписывающий
  """
  signer: Signer!

  """
  Ответственный
  """
  responder: Responder!

  """
  Исполнитель
  """
  actor: DocumentActor!

  """
  Контролер
  """
  overseer: Overseer!

  """
  Место регистрации
  """
  placeOfRegistration: ReferenceKeyInput

  """
  Скан-копия оригинала
  """
  scanCopyOriginal: FileInstanceInput

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean

  """
  Статус действия
  """
  validStatus: ReferenceKeyInput
}

type LockFileMutationAPI {
  """
  Блокировка вложений в документе
  """
  lockInDocument(
    """
    Ид. документа
    """
    documentId: DocumentId!

    """
    Ид. файлов для блокировки
    """
    files: [FileInstanceId!]!
  ): Void

  """
  Блокировка вложений в комментарии. Пока не реализовано
  """
  lockInPost(
    """
    Ид. комментария
    """
    postId: PostId!

    """
    Ид. файлов для блокировки
    """
    files: [FileInstanceId!]!
  ): Void

  """
  Разблокировка вложений в документе. Admin only
  """
  unlockInDocument(
    """
    Ид. документа
    """
    documentId: DocumentId!

    """
    Ид. файлов для разблокировки
    """
    files: [FileInstanceId!]!
  ): Void

  """
  Блокировка вложений в комментарии. Admin only. Пока не реализовано
  """
  unlockInPost(
    """
    Ид. комментария
    """
    postId: PostId!

    """
    Ид. файлов для разблокировки
    """
    files: [FileInstanceId!]!
  ): Void
}

scalar Long

"""
Данные группы Active Directory
"""
type MailingADGroupType {
  """
  Наименование
  """
  cn: String

  """
  Электронная почта
  """
  mail: String
}

"""
Вся инфа по рассылки
"""
type MailingComplexType {
  """
  Данные группы
  """
  mailingGroup: MailingGroupType

  """
  Данные AD группы
  """
  mailingGroupADInfo: MailingADGroupType

  """
  Подразделения
  """
  mailingGroupOrgIds: [String]

  """
  Пользователи
  """
  mailingGroupUsers: [MailingGroupUserType]
}

type MailingGroupArrayPropertyValueType {
  action: ArrayPropertyOperationType
  groupName: String!
  mailingGroupId: MailingGroupId
}

"""
Группа рассылки. Является строкой/числом
"""
scalar MailingGroupId @fake(type: uuid)

"""
API для групп рассылок
"""
type MailingGroupQueryAPI {
  all: [MailingGroupType]

  """
  Получение дочерних или корневых
  """
  childs(
    """
    ИД родителя или null
    """
    id: MailingGroupId
  ): [MailingGroupType]

  """
  Получение названия и почты по привязанной к мэил группе
  """
  getADInfoById(
    """
    ИД
    """
    id: MailingGroupId
  ): MailingADGroupType

  """
  Получение по id
  """
  getById(
    """
    ИД
    """
    id: MailingGroupId
  ): MailingGroupType

  """
  Получение всей инфы о списке рассылке из MSSQL по id
  """
  getComplexById(
    """
    ИД
    """
    id: MailingGroupId
  ): MailingComplexType

  """
  Получение ID структурных единиц по id
  """
  getORGById(
    """
    ИД
    """
    id: MailingGroupId
  ): [String]

  """
  Получение Пользователей групппы по id
  """
  getUsersById(
    """
    ИД
    """
    id: MailingGroupId
  ): [MailingGroupUserType]
  search(
    """
    Строка поиска
    """
    searchString: String
  ): [MailingGroupType]
}

"""
Группа рассылки
"""
type MailingGroupType {
  """
  GUID AD группы
  """
  aDgroup: String

  """
  Описание
  """
  description: String

  """
  hasChildren
  """
  hasChildren: Boolean

  """
  id
  """
  id: String!

  """
  Признак удаления
  """
  isDeleted: Boolean

  """
  Синхронизирована с группой AD
  """
  isSync: Boolean

  """
  Наименование
  """
  name: String

  """
  parentId
  """
  parentId: String

  """
  Тип группы
  """
  type: Int
}

"""
Пользователи группы рассылки
"""
type MailingGroupUserType {
  """
  Отдел
  """
  department: String

  """
  ФИО
  """
  fio: String

  """
  incorrectInf
  """
  incorrectInf: Boolean

  """
  Должность
  """
  position: String

  """
  Тип пользователя
  """
  type: MailingUserEnum

  """
  userGuid
  """
  userGuid: String!
}

"""
Перечисление возможных состояний элемента групп рассылки
"""
enum MailingItemState {
  UNDEFINED
  PENDING
  ACTIVATED
  SUSPENDED
}

"""
Перечисление возможных типов пользователей в группах рассылки
"""
enum MailingUserEnum {
  NONE

  """
  Пользователь
  """
  USER_TYPE_1

  """
  Утверждающий
  """
  USER_TYPE_2

  """
  Администратор
  """
  USER_TYPE_3

  """
  Исключения
  """
  USER_TYPE_4
}

"""
Элемент персональной рассылки
"""
type MailingUserItem {
  """
  Кто изменил состояние элемента
  """
  authorId: UserId!

  """
  Состояние элемента рассылки
  """
  state: MailingItemState!

  """
  Пользователь рассылки
  """
  userId: UserId!

  """
  Когда изменили состояние элемента
  """
  when: DateTime!
}

"""
Атрибутный поиск
"""
input massMailAttributeSearch {
  """
  Поиск по автору
  """
  author: UserId

  """
  Поиск по содержимому
  """
  contains: String

  """
  Зарегистрирован
  """
  isRegistred: Boolean

  """
  Номер регистрации
  """
  registrationNumber: String

  """
  Дата регистрации документа (с)
  """
  fromRegistrationDate: DateTime

  """
  Дата регистрации документа (по)
  """
  toRegistrationDate: DateTime

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Серийный номер документа
  """
  documentSerialNumber: String

  """
  Фильтр типа документа
  """
  documentTypes: [DocumentType!]

  """
  Наличие скан-копии
  """
  isScanCopyExists: Boolean

  """
  Группы рассылки
  """
  mailingGroupsIds: [MailingGroupId]

  """
  Отправитель
  """
  sender: [UserId]

  """
  Ответственный
  """
  responder: UserId
}

input MassMailBasicPropertiesInput {
  body: String!
  title: String!
  signature: String

  """
  Ответственный
  """
  responder: Responder

  """
  Отправитель
  """
  sender: Sender

  """
  Группы рассылок
  """
  mailingGroups: [MailingGroupId!]!
}

"""
Информационная рассылка
"""
type MassMailItem implements IDocument {
  """
  Администраторы договора
  """
  adminIds: [UserId]

  """
  Вложения
  """
  attachments: [FileVersionListItem]

  """
  Автор
  """
  authorId: UserId

  """
  Тело письма
  """
  body: String

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Серийный номер документа
  """
  documentSerialNumber: Int

  """
  Статус
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус по русски
  """
  documentStatusDescription: String

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Количество событий
  """
  eventCount: Int!

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  Проверяет есть ли доступ у текущего пользователя
  """
  hasAccess: Boolean

  """
  ИД документа
  """
  id: String!

  """
  Опция - доступ по ссылке
  """
  isLinkAccessAllowed: Boolean

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Отправлено
  """
  isSent: Boolean

  """
  Группы рассылок
  """
  mailingGroups: [UsedMailingGroupType]

  """
  Группы рассылок
  """
  mailingGroupsIds: [MailingGroupId]

  """
  Пользователи рассылок
  """
  mailingUsers: [MailingUserItem]

  """
  Группы рассылок
  """
  massMailMailingGroups: [MailingGroupType]

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]

  """
  Читатели договора
  """
  readerIds: [UserId]

  """
  Регистрация в журнале
  """
  registrationBookItem: RegistrationBookItem

  """
  Регистрационные данные
  """
  registrationInfo: RegistrationInfo

  """
  Связанные документы
  """
  relations: [relation]

  """
  Данные по резервированию
  """
  reservationInfo: RegistrationInfo

  """
  Ответственный
  """
  responderId: UserId

  """
  Аннулирование документа
  """
  revoked: revoked

  """
  Отправитель
  """
  senderId: UserId

  """
  Отправитель
  """
  sendingAuthor: UserId

  """
  Время отправки
  """
  sendingDate: DateTime

  """
  Подпись отправителя
  """
  signature: String

  """
  Вложенные документы
  """
  subDocuments: [DocumentDescriptor]

  """
  Заголовок
  """
  title: String

  """
  Список ролей текущего пользователя к этому документу
  """
  userRoles: [UserRoleInDocument]!

  """
  Версия
  """
  version: Int!

  """
  Когда создан
  """
  whenCreated: DateTime

  """
  Когда изменен
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Служебная записка
"""
type MassMailListItem implements IDocumentListItem {
  """
  Автор
  """
  authorId: UserId

  """
  Имя автора без дополнительго зарпоса
  """
  authorName: String

  """
  Тело
  """
  body: String

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Контрольные карты
  """
  controlCardsCount: Int

  """
  Контрольные карты количество снятых
  """
  controlCardsRemovedCount: Int

  """
  Статус документа
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус документа по русски
  """
  documentStatusDescription: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  ИД документа
  """
  id: DocumentId!

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Отправлено
  """
  isSent: Boolean

  """
  Id групп
  """
  mailingGroupsIds: [MailingGroupId]

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]
  registrationBookItem: RegistrationBookItem

  """
  Ответственный
  """
  responderId: UserId

  """
  Документ аннулирован
  """
  revoked: revoked

  """
  Наличие скан-копии оригинала документа
  """
  scanCopy: FileInstanceId

  """
  Отправитель
  """
  senderId: UserId

  """
  Отправитель
  """
  sendingAuthor: UserId

  """
  Время отправки
  """
  sendingDate: DateTime

  """
  Заголовок
  """
  title: String!

  """
  Создано
  """
  whenCreated: DateTime

  """
  Изменено
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Представляет обёртку над коллекцией элементов
"""
type MassMailListItemTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [MassMailListItem]!
}

type MassMailMutationAPI {
  """
  Предпросмотр
  """
  preview: Boolean

  """
  Отправить
  """
  send: Boolean
}

"""
Перечисление возможных полей для сортировки
"""
enum MassMailsSortFieldEnumType {
  """
  По заголовку
  """
  title

  """
  По отправителю
  """
  sender

  """
  По дате создания
  """
  whenCreated

  """
  По дате изменения
  """
  whenEdited
}

type MetaField {
  description: String
  metadata: [KeyValuePairType]
  name: String!
  type: String
}

type MetaInput {
  description: String
  metadata: [KeyValuePairType]
  name: String!
  type: String
}


type MetaSchemaQuery {
  types: [MetaType]
}

type MetaType {
  description: String
  enumValues: [__EnumValue!]
  fields: [MetaField!]
  inputFields: [MetaInput]
  metadata: [KeyValuePairType]
  name: String!
}

"""
MetaValue
"""
scalar MetaValue

"""
The `Milliseconds` scalar type represents a period of time represented as the total number of milliseconds.
"""
scalar Milliseconds

"""
Необходимая для отрисовки информация по пользователю
"""
type MinimalUserItemType {
  """
  Идентификатор пользователя из AD
  """
  adGuid: String

  """
  ФИО
  """
  displayName: String

  """
  ИД внутренний
  """
  id: String

  """
  Признак отсутствия
  """
  isOnVacation: Boolean

  """
  Состояние уволен/не уволен
  """
  isRetired: Boolean

  """
  Время последнего действия
  """
  lastActivity: DateTime
}

type MultiCorrespondentArrayPropertyType implements JournalPropertyInterface {
  action: [ArrayPropertyOperationType]

  """
  Тип
  """
  type: String!
  value: [Correspondent]
}

type MultiMailingGroupArrayPropertyValueType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: [MailingGroupArrayPropertyValueType]
}

"""
Набор справочных кодов из одного справочника
"""
input MultiReferenceKeyInput {
  """
  Код справочника
  """
  catalogKey: String!

  """
  Коды значений
  """
  valueKeys: [String!]!
}

type MultiReferencePropertyType implements JournalPropertyInterface {
  """
  Справочник
  """
  catalog: CatalogItem!

  """
  Тип
  """
  type: String!

  """
  Набор исторических код-значение
  """
  value: [ReferencePropertyValueType!]
}

"""
Много справочных значений одного типа
"""
type MultiReferenceValue {
  """
  Справочник
  """
  catalog: CatalogItem!

  """
  Набор код-значение
  """
  values: [KeyValue!]
}

type MultiUserArrayPropertyType implements JournalPropertyInterface {
  action: [ArrayPropertyOperationType]

  """
  Тип
  """
  type: String!
  value: [UserId]
}

type MultiUserPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: [UserId]
}

type NullPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
}

"""
Элементы документа для маршрута
"""
type ObservedDocument {
  """
  Перечень идентификаторов файлов-вложений в документе
  """
  attachments: [FileInstanceId]

  """
  Идентификатор документа
  """
  documentId: DocumentId!

  """
  Перечень идентификаторов групп событий по документу
  """
  groups: [EventGroupId]
}

"""
Набор элементов документа участвующих в маршруте
"""
input ObservedDocumentInputObject {
  """
  Идентификатор документа
  """
  documentId: DocumentId!

  """
  Идентификаторы групп событий
  """
  groups: [EventGroupId!]

  """
  Набор файлов-вложений документа участвующих в маршруте
  """
  attachments: [FileInstanceId!]
}

"""
Сортировка документов
"""
input OnlineUsersSort {
  """
  Поле для сортировка
  """
  field: OnlineUsersSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Перечисление возможных полей для сортировки
"""
enum OnlineUsersSortFieldEnumType {
  """
  По последней активности
  """
  lastActivity

  """
  По количеству действий
  """
  activityCount
}

"""
Описатель опции
"""
type OptionEntityType {
  """
  Значение по умолчанию
  """
  defaultValue: Boolean!

  """
  Описание опции
  """
  description: String!

  """
  Внутренее имя опции
  """
  id: String!

  """
  Опции к типам документов
  """
  usedForDocuments: [DocumentType!]
}

"""
Описатель приказа
"""
type orderDescriptor {
  """
  Дата
  """
  issuedDate: DateTime!

  """
  Номер
  """
  number: String!
}

"""
Описатель приказа
"""
input OrderDescriptorInput {
  """
  Номер
  """
  number: String!

  """
  Дата
  """
  issuedDate: Date!
}

"""
Даннае по приказу
"""
type orderDescriptorPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: orderDescriptor
}

"""
Подразделение
"""
type OrgUnit {
  """
  Дочерние подраздаления
  """
  childrens: [OrgUnit]

  """
  Идентификатор
  """
  id: Int!

  """
  Название
  """
  name: String

  """
  Идентификатор родителя
  """
  parentId: Int

  """
  Короткое название
  """
  shortName: String

  """
  Теги подразделения
  """
  tags: [Tag]
}

"""
Атрибутный поиск по документам
"""
input outgoingAttributeSearch {
  """
  Поиск по автору
  """
  author: UserId

  """
  Поиск по содержимому
  """
  contains: String

  """
  Зарегистрирован
  """
  isRegistred: Boolean

  """
  Номер регистрации
  """
  registrationNumber: String

  """
  Дата регистрации документа (с)
  """
  fromRegistrationDate: DateTime

  """
  Дата регистрации документа (по)
  """
  toRegistrationDate: DateTime

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Серийный номер документа
  """
  documentSerialNumber: String

  """
  Фильтр типа документа
  """
  documentTypes: [DocumentType!]

  """
  Наличие скан-копии
  """
  isScanCopyExists: Boolean

  """
  Тип документа
  """
  subDocumentType: String

  """
  Адресат
  """
  addressee: String

  """
  Ответственный
  """
  responderId: UserId

  """
  Отправитель
  """
  actorId: UserId

  """
  Отправитель
  """
  senderId: UserId

  """
  Адресат
  """
  correspondentId: ReferenceCorrespondentId
}

"""
Исходящий документ
"""
type OutgoingDocItem implements IDocument {
  """
  Исполнитель
  """
  actor: TaskActor

  """
  Адресаты
  """
  addressees: [Correspondent]

  """
  Администраторы договора
  """
  adminIds: [UserId]

  """
  Вложения
  """
  attachments: [FileVersionListItem]

  """
  Автор
  """
  authorId: UserId

  """
  Информация ограниченного доступа
  """
  commercialSecret: CommercialSecret

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Серийный номер документа
  """
  documentSerialNumber: Int

  """
  Статус
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус по русски
  """
  documentStatusDescription: String

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean

  """
  Количество событий
  """
  eventCount: Int!

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  Проверяет есть ли доступ у текущего пользователя
  """
  hasAccess: Boolean

  """
  Заголовок
  """
  head: String

  """
  ИД документа
  """
  id: String!

  """
  Опция - доступ по ссылке
  """
  isLinkAccessAllowed: Boolean

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Группы рассылок
  """
  mailingGroups: [UsedMailingGroupType]

  """
  Пользователи рассылок
  """
  mailingUsers: [MailingUserItem]

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]

  """
  Читатели договора
  """
  readerIds: [UserId]

  """
  Регистрация в журнале
  """
  registrationBookItem: RegistrationBookItem

  """
  Регистрационные данные
  """
  registrationInfo: RegistrationInfo

  """
  Связанные документы
  """
  relations: [relation]

  """
  Примечание
  """
  remark: String

  """
  Данные по резервированию
  """
  reservationInfo: RegistrationInfo

  """
  Ответственный
  """
  responder: Responder

  """
  Аннулирование документа
  """
  revoked: revoked

  """
  Скан-копия оригинала
  """
  scanCopyOriginal: FileInstance

  """
  Отправитель
  """
  sender: Sender

  """
  Статус
  """
  status: ReferenceValue

  """
  Вложенные документы
  """
  subDocuments: [DocumentDescriptor]

  """
  Тип документа
  """
  type: ReferenceValue

  """
  Список ролей текущего пользователя к этому документу
  """
  userRoles: [UserRoleInDocument]!

  """
  Версия
  """
  version: Int!

  """
  Когда создан
  """
  whenCreated: DateTime

  """
  Когда изменен
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Исходящий документ
"""
type OutgoingDocListItem implements IDocumentListItem {
  """
  Исполнитель
  """
  actorId: UserId

  """
  Id Адресатов
  """
  addresseeIds: [ReferenceCorrespondentId]

  """
  Адресаты
  """
  addressees: [String]

  """
  Автор
  """
  authorId: UserId

  """
  Имя автора без дополнительго зарпоса
  """
  authorName: String

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Контрольные карты
  """
  controlCardsCount: Int

  """
  Контрольные карты количество снятых
  """
  controlCardsRemovedCount: Int

  """
  Статус документа
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус документа по русски
  """
  documentStatusDescription: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  ИД документа
  """
  id: DocumentId!

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]

  """
  Кем зарегистрировано
  """
  registrationAuthorId: UserId
  registrationBookItem: RegistrationBookItem

  """
  Исх. №
  """
  registrationDate: DateTime

  """
  Дата регистрации
  """
  registrationNumber: String

  """
  Кем забронировано
  """
  reservedRegistrationAuthorId: UserId

  """
  Забронированный Вх. №
  """
  reservedRegistrationDate: DateTime

  """
  Дата забронирования
  """
  reservedRegistrationNumber: String

  """
  Ответственный
  """
  responderId: UserId

  """
  Документ аннулирован
  """
  revoked: revoked

  """
  Наличие скан-копии оригинала документа
  """
  scanCopy: FileInstanceId

  """
  Отправитель
  """
  senderId: UserId

  """
  Название
  """
  title: String!

  """
  Создано
  """
  whenCreated: DateTime

  """
  Изменено
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Представляет обёртку над коллекцией элементов
"""
type OutgoingDocListItemTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [OutgoingDocListItem]!
}

type OutgoingDocMutationAPI {
  """
  Зарегистрировать
  """
  registerAndSend(
    """
    id
    """
    documentId: DocumentId!

    """
    prefix
    """
    prefix: String!
  ): Void

  """
  Зарезервировать дату и номер регистрации
  """
  registerReservation(
    """
    id
    """
    documentId: DocumentId!

    """
    prefix
    """
    prefix: String
  ): Void
}

input OutgoingDocPropertiesInput {
  """
  Тип документа
  """
  type: ReferenceKeyInput!

  """
  Заголовок
  """
  head: String!

  """
  Отправитель
  """
  sender: Sender!

  """
  Адресаты
  """
  addressees: [ReferenceCorrespondentId]!

  """
  Исполнитель
  """
  actor: DocumentActor

  """
  Ответственный
  """
  responder: Responder

  """
  Примечание
  """
  remark: String

  """
  Информация ограниченного доступа
  """
  commercialSecret: CommercialSecret

  """
  Файл скан-копии оригинала
  """
  scanCopyOriginal: FileInstanceInput

  """
  Статус
  """
  status: ReferenceKeyInput

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean
}

"""
Перечисление возможных полей для сортировки исх. документов
"""
enum OutgoingDocsSortFieldEnumType {
  """
  По теме
  """
  title

  """
  По отправителю
  """
  sender

  """
  По дате регистрации
  """
  docDate

  """
  По дате создания
  """
  whenCreated

  """
  По дате изменения
  """
  whenEdited
}

"""
Пользователь - контролер. Является строкой - идентификатором пользователя.
"""
scalar Overseer @fake(type: uuid)

"""
Человек
"""
type person {
  """
  Имя
  """
  firstName: String!

  """
  Фамилия
  """
  lastName: String!

  """
  Отчество
  """
  patronymic: String

  """
  Глобальный идентификатор человека
  """
  personalIdentifier: String
}

"""
Глобальный идентификатор человека. Является строкой.
"""
scalar PersonalIdentifier @fake(type: uuid)

"""
Человек
"""
input PersonInput {
  """
  Имя
  """
  firstName: String!

  """
  Фамилия
  """
  lastName: String!

  """
  Отчество
  """
  patronymic: String

  """
  Глобальный идентификатор человека
  """
  personalIdentifier: String
}

"""
Человек
"""
type personPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: person
}

"""
Экземпляр файла вложеного в комментарий
"""
type PostAttachmentType {
  """
  Контент файла
  """
  fileContent: String

  """
  Идентификатор файла
  """
  fileId: String!

  """
  Разрмер файла
  """
  fileLength: Long

  """
  Имя файла
  """
  fileName: String

  """
  Тип файла
  """
  fileType: String
}

"""
Идентификатор комментария. Является строкой.
"""
scalar PostId @fake(type: uuid)

"""
Задача внутренней корреспонденции
"""
type ProcessingTaskListItemType implements TaskListItemInterface {
  """
  Исполнитель задачи
  """
  actorId: UserId

  """
  Создатель задачи
  """
  authorId: UserId

  """
  Те кому задача делегирована
  """
  delegatedActorIds: [UserId]

  """
  Делегирования
  """
  delegations: [DelegationInfoType]

  """
  Документ
  """
  document: DocumentDescriptor!

  """
  Документ последней версии
  """
  documentLastVersion: LastDocumentVersion

  """
  Документ списочный
  """
  documentListItem: IDocumentListItem

  """
  Срок
  """
  dueDate: DateTime

  """
  Кто изменил задачу
  """
  editorId: UserId

  """
  Признак наличия потомков
  """
  hasChildren: Boolean!

  """
  ИД задачи
  """
  id: TaskId!

  """
  Требует персонального рассмотрения
  """
  isPersonalReview: Boolean

  """
  Последний пост актора
  """
  lastActorPost: String

  """
  Заметки во время работы с задачей
  """
  note: String

  """
  Информация по прочтениям
  """
  readAuditList: [ReadAuditType]

  """
  Зеленый гамбургер
  """
  resolutionsFinished: Boolean

  """
  Отправитель задачи
  """
  senderId: UserId

  """
  Состояние задачи
  """
  state: String!

  """
  Текстовое описание состояние задачи
  """
  status: String! @examples(values: ["Initial","InProgress","Accepted","Approved","Resubmitted","Rejected","Final","Canceled"])

  """
  Пользователь который изменил статус
  """
  statusEditorId: UserId

  """
  Количество подзадач
  """
  subTaskCount: Int

  """
  Количество отклоненных подзадач
  """
  subTaskRejectedCount: Int

  """
  Количество разрешенных подзадач
  """
  subTaskSolvedCount: Int

  """
  Тип задачи
  """
  taskType: ProcessingTaskType! @examples(values: ["FOR_INCOMING", "FOR_OUTCOMING","FOR_INTERNAL_USE","FOR_HR_DECISION","FOR_IMPLEMENTATION"])

  """
  Дата создания задачи
  """
  whenCreated: DateTime!

  """
  Дата изменения задачи
  """
  whenEdited: DateTime!

  """
  Дата изменения статуса
  """
  whenStatusEdited: DateTime

  """
  Дата отправки
  """
  whenSubmitted: DateTime
}

"""
Перечисление возможных типов задач для обработки документа
"""
enum ProcessingTaskType {
  UNKNOWN

  """
  Входящая корреспонденция
  """
  FOR_INCOMING

  """
  Исходящая корреспонденция
  """
  FOR_OUTCOMING

  """
  На рассмотрение
  """
  FOR_INTERNAL_USE

  """
  На рассмотрение
  """
  FOR_HR_DECISION

  """
  Для исполнения
  """
  FOR_IMPLEMENTATION
}

"""
Иформация о прочтении
"""
type ReadAuditType {
  """
  Кого замещал тот, кто прочитал
  """
  masters: [UserId]

  """
  Кто прочитал
  """
  userId: UserId

  """
  Когда прочтено
  """
  whenRead: DateTime
}

"""
Корреспондент. Строка - id
"""
scalar ReferenceCorrespondentId @fake(type: uuid)

"""
Ссылочное значение на справочник. Json-строка пример: {
  "CatalogKey": "Код справочника",
  "ValueKey": "Код значения"
}
"""
scalar ReferenceKey @fake(type: number)

"""
Справочный код
"""
input ReferenceKeyInput {
  """
  Код справочника
  """
  catalogKey: String!

  """
  Код значения
  """
  valueKey: String!
}

"""
Набор ссылочных значений из одного справочника. Json-строка пример: {
  "CatalogKey": "Код справочника",
  "ValueKeys": [
    "Код значения - 1",
    "Код значения - 2"
  ]
}
"""
scalar ReferenceKeys

type ReferencePropertyValueType {
  action: ArrayPropertyOperationType
  key: String
  value: String
}

"""
Справочное значение
"""
type ReferenceValue {
  """
  Справочник
  """
  catalog: CatalogItem!

  """
  Признак - используется ли эта пара код-значение
  """
  isUsed: Boolean!

  """
  Код
  """
  key: String!

  """
  Значение
  """
  value: String!
}

"""
Регистрируемый пользователь с идентификатором AD
"""
input RegisterUserInput {
  """
  Идентификатор пользователя AD. В данном случае это строка Object GUID.
  """
  externalUserId: ID!

  """
  ФИО
  """
  name: String!

  """
  Должность
  """
  jobTitle: String

  """
  Отдел
  """
  department: String

  """
  Почта
  """
  email: String
}

"""
Книга регистраций
"""
type RegistrationBook {
  """
  Создан
  """
  created: DateTime

  """
  Название
  """
  name: String

  """
  Id журнала регистрации
  """
  registrationBookId: RegistrationBookId
}

"""
История по регистрации
"""
type RegistrationBookHistoryItem {
  bookId: RegistrationBookId

  """
  DocumentId
  """
  documentId: DocumentId
  number: ULong

  """
  Что
  """
  what: String

  """
  Когда
  """
  when: DateTime

  """
  Кто
  """
  who: UserId
}

"""
Идентификатор журнала регистрации. Является строкой.
"""
scalar RegistrationBookId @fake(type: uuid)

"""
Регистрационные данные
"""
type RegistrationBookItem {
  """
  Автор бронирования/регистрации
  """
  authorId: UserId

  """
  Дата регистрации
  """
  date: DateTime

  """
  Id документа
  """
  documentId: DocumentId

  """
  Зарегистрирован
  """
  isPermanent: Boolean

  """
  Регистрационный номер
  """
  number: ULong

  """
  Журнал регистрации
  """
  registrationBook: RegistrationBook

  """
  Id журнала регистрации
  """
  registrationBookId: RegistrationBookId
}

"""
Представляет обёртку над коллекцией элементов
"""
type RegistrationBookItemTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [RegistrationBookItem]!
}

"""
Регистрационные данные
"""
type RegistrationInfo {
  """
  Состояние зарегистрировано/не зарегистрировано
  """
  isRegistered: Boolean

  """
  Регистрационный номер
  """
  registerNumber: String

  """
  Дата регистрации
  """
  registrationDate: DateTime
}

type RegistrationMutationAPI {
  book(
    """
    ИД документа
    """
    documentId: DocumentId!

    """
    ИД места регистрации
    """
    place: String!

    """
    Номер регистрации регистрации
    """
    number: ULong

    """
    Дата регистрации
    """
    date: DateTime

    """
    Зарегистрировать сразу
    """
    permanent: Boolean
  ): RegistrationBookItem
  create(
    """
    Id места регистрации
    """
    id: String!

    """
    Год журнала, по умолчанию текущий год
    """
    year: Int
  ): Void

  """
  Берёт из проекций книги и создаёт их
  """
  init: Void
  makePermanent(
    """
    Идентификатор дока
    """
    documentId: DocumentId!
  ): RegistrationBookItem
  rename(
    """
    Id места регистрации
    """
    id: String!

    """
    Название
    """
    name: String!
  ): Void
  unbook(
    """
    Идентификатор дока
    """
    documentId: DocumentId!
  ): RegistrationBookItem
}

type RegistrationQueryAPI {
  """
  Список доступных мест регистрации, ключи
  """
  allowedPlaces: [String]
  book(id: String!): RegistrationBook
  books: [RegistrationBook]
  dates(
    """
    Место регистрации
    """
    place: String!

    """
    Номер
    """
    number: ULong
  ): ValuePairOfDateTimeGraphType

  """
  Получить регистрацию
  """
  get(
    """
    Id регистрации
    """
    documentId: DocumentId!
  ): RegistrationBookItem

  """
  Список регистраций
  """
  list(
    """
    skip
    """
    skip: Int! = 0

    """
    limit
    """
    limit: Int! = 10

    """
    Крутой поиск
    """
    search: String
  ): RegistrationBookItemTypeCollection
  numbers(
    """
    Место регистрации
    """
    place: String!

    """
    Дата
    """
    date: DateTime
  ): [ValuePairOfULongGraphType]
}

"""
Связь документа
"""
type relation {
  """
  Связанный документ
  """
  document: IDocument

  """
  Идентификатор связанного документа
  """
  documentId: DocumentId

  """
  Идентификатор связи
  """
  relationId: RelationId

  """
  Тип связи
  """
  relationType: RelationType
}

"""
Идентификатор связи документов. Является строкой.
"""
scalar RelationId @fake(type: uuid)

"""
Перечисление типов связи
"""
enum RelationType {
  """
  Ссылается на
  """
  OPTION_1

  """
  На него ссылаются
  """
  COUNTER_OPTION_1

  """
  Ответ на
  """
  OPTION_2

  """
  На него отвечают
  """
  COUNTER_OPTION_2

  """
  Основание для
  """
  OPTION_3

  """
  На основании
  """
  COUNTER_OPTION_3

  """
  Заменяет
  """
  OPTION_4

  """
  Заменен на
  """
  COUNTER_OPTION_4

  """
  Отменяет
  """
  OPTION_5

  """
  Отменен
  """
  COUNTER_OPTION_5

  """
  Изменяет
  """
  OPTION_6

  """
  Изменен
  """
  COUNTER_OPTION_6

  """
  Утверждает/вводит в действие
  """
  OPTION_7

  """
  Утвержден/введен в действие
  """
  COUNTER_OPTION_7

  """
  Является сопроводительным письмом
  """
  OPTION_8

  """
  Является приложением к сопроводительному письму
  """
  COUNTER_OPTION_8
}

"""
Категория заявления
"""
type RequestCategory {
  """
  Идентификатор
  """
  id: String!

  """
  Идентификатор родительской категории
  """
  parentId: Guid

  """
  Заголовок
  """
  title: String
}

"""
Ответственный куратор заявления
"""
type RequestCuratorType {
  """
  Идентификатор категории
  """
  categoryId: Guid!

  """
  Название категории
  """
  categoryTitle: String!

  """
  Идентификатор подразделения для которого определен куратор-ответственный
  """
  orgId: String!

  """
  Подразделение
  """
  orgUnit: OrgUnit!

  """
  Пользователь
  """
  user: UserItem!

  """
  Идентификатор пользователя
  """
  userId: UserId!
}

"""
Атрибутный поиск по заявлениям
"""
input requestDocAttributeSearch {
  """
  Поиск по автору
  """
  author: UserId

  """
  Поиск по содержимому
  """
  contains: String

  """
  Зарегистрирован
  """
  isRegistred: Boolean

  """
  Номер регистрации
  """
  registrationNumber: String

  """
  Дата регистрации документа (с)
  """
  fromRegistrationDate: DateTime

  """
  Дата регистрации документа (по)
  """
  toRegistrationDate: DateTime

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Серийный номер документа
  """
  documentSerialNumber: String

  """
  Фильтр типа документа
  """
  documentTypes: [DocumentType!]

  """
  Наличие скан-копии
  """
  isScanCopyExists: Boolean

  """
  Адресаты
  """
  addresseeIds: [UserId]

  """
  Ответственный
  """
  responder: UserId

  """
  Заявитель
  """
  applicant: String

  """
  Статус документа
  """
  documentStatus: String

  """
  Тип документа
  """
  type: DocumentType

  """
  Перечень фильтруемых статусов договоров
  """
  statusFilter: [String!]

  """
  Показывать аннулированные документы
  """
  isShowRevokedDocs: Boolean

  """
  Показывать документы со статусом В работе
  """
  isShowInProgressDocs: Boolean
}

"""
Заявление (для списочного отображения)
"""
type RequestDocListItem implements IDocumentListItem {
  """
  Id адресата
  """
  addressee: UserId!

  """
  адресат ФИО
  """
  addresseeName: String

  """
  Заявитель
  """
  applicant: person

  """
  Applicant ExternalUserId
  """
  applicantExternalUserId: String

  """
  Applicant UserId
  """
  applicantId: UserId

  """
  Автор
  """
  authorId: UserId

  """
  Имя автора без дополнительго зарпоса
  """
  authorName: String

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Контрольные карты
  """
  controlCardsCount: Int

  """
  Контрольные карты количество снятых
  """
  controlCardsRemovedCount: Int

  """
  Статус документа
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус документа по русски
  """
  documentStatusDescription: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  ИД документа
  """
  id: DocumentId!

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]
  registrationBookItem: RegistrationBookItem

  """
  Ответственный
  """
  responderId: UserId

  """
  Документ аннулирован
  """
  revoked: revoked

  """
  Наличие скан-копии оригинала документа
  """
  scanCopy: FileInstanceId

  """
  Статус
  """
  status: String

  """
  Название
  """
  title: String!

  """
  Создано
  """
  whenCreated: DateTime

  """
  Изменено
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Представляет обёртку над коллекцией элементов
"""
type RequestDocListItemTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [RequestDocListItem]!
}

"""
Сортировка документов
"""
input RequestDocsSort {
  """
  Поле для сортировка
  """
  field: RequestDocsSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Перечисление возможных полей для сортировки заявлений
"""
enum RequestDocsSortFieldEnumType {
  """
  По заявителю
  """
  applicant

  """
  По типу
  """
  type

  """
  По дате создания
  """
  whenCreated

  """
  По дате изменения
  """
  whenEdited
}

"""
Заявление на увольнение
"""
type RequestForDismissalItem implements IDocument {
  """
  Адресат / Ответственный за рассмотрение
  """
  addresseeId: UserId!

  """
  Администраторы договора
  """
  adminIds: [UserId]

  """
  Заявитель
  """
  applicant: person!

  """
  Данные о заявитель-работник
  """
  applicantDetails: employeeDetails

  """
  Applicant ExternalUserId
  """
  applicantExternalUserId: String

  """
  Applicant UserId
  """
  applicantId: UserId

  """
  Вложения
  """
  attachments: [FileVersionListItem]

  """
  Автор
  """
  authorId: UserId

  """
  Статья трудового права
  """
  clauseEmploymentLaw: String

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Подразделение, с которого производится увольнение
  """
  departmentFrom: DepartmentId

  """
  Дата увольнения
  """
  dismissalDate: DateTime

  """
  Серийный номер документа
  """
  documentSerialNumber: Int

  """
  Статус
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус по русски
  """
  documentStatusDescription: String

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean

  """
  Количество событий
  """
  eventCount: Int!

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  Проверяет есть ли доступ у текущего пользователя
  """
  hasAccess: Boolean

  """
  ИД документа
  """
  id: String!

  """
  Опция - доступ по ссылке
  """
  isLinkAccessAllowed: Boolean

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Группы рассылок
  """
  mailingGroups: [UsedMailingGroupType]

  """
  Пользователи рассылок
  """
  mailingUsers: [MailingUserItem]

  """
  Информация о приказе
  """
  orderDescriptor: orderDescriptor

  """
  Должность, с которой производится увольнение
  """
  positionFrom: String

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]

  """
  Читатели договора
  """
  readerIds: [UserId]

  """
  Регистрация в журнале
  """
  registrationBookItem: RegistrationBookItem

  """
  Регистрационные данные
  """
  registrationInfo: RegistrationInfo

  """
  Связанные документы
  """
  relations: [relation]

  """
  Примечание
  """
  remark: String

  """
  Данные по резервированию
  """
  reservationInfo: RegistrationInfo

  """
  Ответственный
  """
  responderId: UserId

  """
  Аннулирование документа
  """
  revoked: revoked

  """
  Скан-копия оригинала
  """
  scanCopyOriginal: FileInstance

  """
  Статус
  """
  status: ReferenceValue

  """
  Вложенные документы
  """
  subDocuments: [DocumentDescriptor]

  """
  Задачи кадрового решения
  """
  tasks: [TaskId]

  """
  Список ролей текущего пользователя к этому документу
  """
  userRoles: [UserRoleInDocument]!

  """
  Версия
  """
  version: Int!

  """
  Когда создан
  """
  whenCreated: DateTime

  """
  Когда изменен
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

input RequestForDismissalPropertiesInput {
  """
  Адресат
  """
  addresseeId: Addressee!

  """
  Заявитель
  """
  applicant: PersonInput!

  """
  Данные о заявитель-работник
  """
  applicantDetails: EmployeeDetailsInput

  """
  Статья
  """
  clauseEmploymentLaw: String

  """
  Подразделение, с которого производится увольнение
  """
  departmentFrom: DepartmentId

  """
  Дата увольнения
  """
  dismissalDate: DateTime

  """
  Приказ об увольнении
  """
  orderDescriptor: OrderDescriptorInput

  """
  Должность, с которой производится увольнение
  """
  positionFrom: String

  """
  Примечание
  """
  remark: String

  """
  Ответственный
  """
  responderId: Responder!

  """
  Файл скан-копии оригинала заявления
  """
  scanCopyOriginal: FileInstanceInput

  """
  Статус
  """
  status: ReferenceKeyInput

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean
}

"""
Шаблон заявления
"""
type RequestTemplateType {
  """
  Идентификатор категории
  """
  categoryId: Guid!

  """
  Идентификатор шаблона
  """
  id: Guid!

  """
  Идентификатор подразделения для которого шаблон
  """
  orgId: String!

  """
  Подразделение
  """
  orgUnit: OrgUnit!

  """
  Текст шаблона
  """
  text: String

  """
  Название шаблона
  """
  title: String
}

"""
Заявление на прием
"""
type RequestToHireItem implements IDocument {
  """
  Адресат / Ответственный за рассмотрение
  """
  addresseeId: UserId!

  """
  Администраторы договора
  """
  adminIds: [UserId]

  """
  Заявитель
  """
  applicant: person!

  """
  Данные о заявитель-работник
  """
  applicantDetails: employeeDetails

  """
  Applicant ExternalUserId
  """
  applicantExternalUserId: String

  """
  Applicant UserId
  """
  applicantId: UserId

  """
  Вложения
  """
  attachments: [FileVersionListItem]

  """
  Автор
  """
  authorId: UserId

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Дата появления вакансии
  """
  dateOfVacancy: DateTime

  """
  Подразделение, куда осуществляется прием
  """
  departmentTo: DepartmentId

  """
  Серийный номер документа
  """
  documentSerialNumber: Int

  """
  Статус
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус по русски
  """
  documentStatusDescription: String

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean

  """
  Количество событий
  """
  eventCount: Int!

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  Проверяет есть ли доступ у текущего пользователя
  """
  hasAccess: Boolean

  """
  Дата найма
  """
  hireDate: DateTime

  """
  ИД документа
  """
  id: String!

  """
  Опция - доступ по ссылке
  """
  isLinkAccessAllowed: Boolean

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Группы рассылок
  """
  mailingGroups: [UsedMailingGroupType]

  """
  Пользователи рассылок
  """
  mailingUsers: [MailingUserItem]

  """
  Информация о приказе
  """
  orderDescriptor: orderDescriptor

  """
  Должность, на которую осуществляется прием
  """
  positionTo: String

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]

  """
  Читатели договора
  """
  readerIds: [UserId]

  """
  Источник комплектования
  """
  recruitmentSource: ReferenceValue

  """
  Регистрация в журнале
  """
  registrationBookItem: RegistrationBookItem

  """
  Регистрационные данные
  """
  registrationInfo: RegistrationInfo

  """
  Связанные документы
  """
  relations: [relation]

  """
  Примечание
  """
  remark: String

  """
  Данные по резервированию
  """
  reservationInfo: RegistrationInfo

  """
  Ответственный
  """
  responderId: UserId

  """
  Аннулирование документа
  """
  revoked: revoked

  """
  Скан-копия оригинала
  """
  scanCopyOriginal: FileInstance

  """
  Статус
  """
  status: ReferenceValue

  """
  Вложенные документы
  """
  subDocuments: [DocumentDescriptor]

  """
  Задачи кадрового решения
  """
  tasks: [TaskId]

  """
  Список ролей текущего пользователя к этому документу
  """
  userRoles: [UserRoleInDocument]!

  """
  Версия
  """
  version: Int!

  """
  Когда создан
  """
  whenCreated: DateTime

  """
  Когда изменен
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

input RequestToHirePropertiesInput {
  """
  Адресат
  """
  addresseeId: Addressee!

  """
  Заявитель
  """
  applicant: PersonInput!

  """
  Данные о заявитель-работник
  """
  applicantDetails: EmployeeDetailsInput

  """
  Подразделение куда принимают
  """
  departmentTo: DepartmentId

  """
  Дата приема
  """
  hireDate: DateTime

  """
  Дата появления вакансии
  """
  dateOfVacancy: DateTime

  """
  Приказ об увольнении
  """
  orderDescriptor: OrderDescriptorInput

  """
  Должность, на которую принимают
  """
  positionTo: String

  """
  Источник комплектования
  """
  recruitmentSource: ReferenceKeyInput

  """
  Примечание
  """
  remark: String

  """
  Ответственный
  """
  responderId: Responder!

  """
  Файл скан-копии оригинала заявления
  """
  scanCopyOriginal: FileInstanceInput

  """
  Статус
  """
  status: ReferenceKeyInput

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean
}

"""
Резолюция
"""
type Resolution {
  """
  Исполнители
  """
  actorIds: [UserId]

  """
  Создатель задачи
  """
  authorId: UserId

  """
  Автоматическое завершение задачи верхнего уровня
  """
  completeParentOption: Boolean

  """
  Текст резолюции
  """
  description: String

  """
  Документ
  """
  document: DocumentDescriptor!

  """
  Документ последней версии
  """
  documentLastVersion: LastDocumentVersion!

  """
  Срок
  """
  dueDate: DateTime

  """
  Кто изменил задачу
  """
  editorId: UserId

  """
  Резолюция завершается только ответственным исполнителем
  """
  onlyResponsibleResultOption: Boolean

  """
  Постановщик резолюции
  """
  originatorId: UserId

  """
  Контролер
  """
  overseerId: UserId

  """
  Тип вложенности задачи
  """
  ownerMark: ResolutionOwnerMark!

  """
  Перечень участников резолюции (прямые и косвенные)
  """
  people: [UserId!]

  """
  Резолюция может быть завершена любым исполнителем
  """
  requireSingleResultOption: Boolean

  """
  Идентификатор
  """
  resolutionId: ResolutionId!

  """
  Ответственные исполнители
  """
  responsibleIds: [UserId]

  """
  Идентификатор родительской задачи
  """
  sourceTaskId: TaskId

  """
  Состояние
  """
  state: String!

  """
  Статус
  """
  status: String!

  """
  Тип задач по умолчанию
  """
  type: ResolutionTaskType!

  """
  Дата создания задачи
  """
  whenCreated: DateTime!

  """
  Дата изменения задачи
  """
  whenEdited: DateTime!
}

type ResolutionActorAddedHistoryItem implements ResolutionHistoryItemInterface {
  """
  Пользователь - инициатор
  """
  actorId: UserId

  """
  Дата события
  """
  occurredOn: DateTime

  """
  ИД резолюции
  """
  resolutionId: ResolutionId!
  userId: UserId
}

type ResolutionActorRemovedHistoryItem implements ResolutionHistoryItemInterface {
  """
  Пользователь - инициатор
  """
  actorId: UserId

  """
  Дата события
  """
  occurredOn: DateTime

  """
  ИД резолюции
  """
  resolutionId: ResolutionId!
  userId: UserId
}

type ResolutionDescriptionChangedHistoryItem implements ResolutionHistoryItemInterface {
  """
  Пользователь - инициатор
  """
  actorId: UserId
  newDescription: String

  """
  Дата события
  """
  occurredOn: DateTime

  """
  ИД резолюции
  """
  resolutionId: ResolutionId!
}

type ResolutionDueDateChangedHistoryItem implements ResolutionHistoryItemInterface {
  """
  Пользователь - инициатор
  """
  actorId: UserId
  newDueDate: DateTime

  """
  Дата события
  """
  occurredOn: DateTime

  """
  ИД резолюции
  """
  resolutionId: ResolutionId!
}

enum ResolutionFilterEnum {
  """
  Без фильтра
  """
  NO

  """
  Мои резолюции
  """
  AS_MEMBER

  """
  Выданные мной
  """
  AS_ORIGINATOR

  """
  У меня на контроле
  """
  AS_OVERSEER
}

"""
Элемент истории в резолюции
"""
interface ResolutionHistoryItemInterface {
  """
  Пользователь - инициатор
  """
  actorId: UserId

  """
  Дата события
  """
  occurredOn: DateTime

  """
  ИД резолюции
  """
  resolutionId: ResolutionId!
}

"""
Представляет обёртку над коллекцией элементов
"""
type ResolutionHistoryItemInterfaceCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [ResolutionHistoryItemInterface]!
}

"""
Идентификатор резолюции
"""
scalar ResolutionId @fake(type: uuid)

"""
Перечисление возможных фильтров на выбор резолюций
"""
enum ResolutionMark {
  """
  Только к документу
  """
  IN_DOCUMENT

  """
  Только из маршрутов
  """
  IN_ROUTE

  """
  К документу ИЛИ по маршруту
  """
  IN_DOCUMENT_OR_IN_ROUTE
}

type ResolutionMutationAPI {
  """
  Завершить резолюцию
  """
  finishResolution(
    """
    Завершить незавершенные задачи
    """
    isCancelTasks: Boolean = false
  ): Void
}

type ResolutionOverseerClearedHistoryItem implements ResolutionHistoryItemInterface {
  """
  Пользователь - инициатор
  """
  actorId: UserId

  """
  Дата события
  """
  occurredOn: DateTime

  """
  ИД резолюции
  """
  resolutionId: ResolutionId!
}

type ResolutionOverseerSetHistoryItem implements ResolutionHistoryItemInterface {
  """
  Пользователь - инициатор
  """
  actorId: UserId

  """
  Дата события
  """
  occurredOn: DateTime

  """
  ИД резолюции
  """
  resolutionId: ResolutionId!
  userId: UserId
}

"""
Перечисление возможных типов вложенности резолюций
"""
enum ResolutionOwnerMark {
  """
  Неизвестно
  """
  UNKNOWN

  """
  В документе
  """
  IN_DOCUMENT

  """
  В маршруте
  """
  IN_ROUTE
}

type ResolutionQueryAPI {
  """
  История
  """
  history(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10
  ): ResolutionHistoryItemInterfaceCollection
}

"""
Перечисление возможных полей для сортировки резолюций
"""
enum ResolutionsSortFieldEnumType {
  """
  По дате создания
  """
  whenCreated

  """
  По сроку
  """
  dueDate

  """
  По статусу
  """
  status

  """
  По типу
  """
  type

  """
  По названию документа
  """
  documentTitle

  """
  По типу документа
  """
  documentType
}

type ResolutionStateChangedHistoryItem implements ResolutionHistoryItemInterface {
  """
  Пользователь - инициатор
  """
  actorId: UserId
  newState: ResolutionStatusEnumType

  """
  Дата события
  """
  occurredOn: DateTime

  """
  ИД резолюции
  """
  resolutionId: ResolutionId!
}

type ResolutionStateCreatedHistoryItem implements ResolutionHistoryItemInterface {
  """
  Пользователь - инициатор
  """
  actorId: UserId
  description: String

  """
  Дата события
  """
  occurredOn: DateTime

  """
  ИД резолюции
  """
  resolutionId: ResolutionId!
}

"""
Перечисление возможных статусов резолюции
"""
enum ResolutionStatusEnumType {
  """
  Создана
  """
  CREATED

  """
  Инициализирована
  """
  INITIAL

  """
  В работе
  """
  INPROGRESS

  """
  Направлен отчет
  """
  PREPARED

  """
  Согласована
  """
  APPROVED

  """
  Завершена
  """
  FINAL
}

"""
Задача резолюции
"""
type ResolutionTaskListItemType implements TaskListItemInterface {
  """
  Исполнитель задачи
  """
  actorId: UserId

  """
  Создатель задачи
  """
  authorId: UserId

  """
  Заметка при подтверждении
  """
  confirmationNote: String

  """
  Те кому задача делегирована
  """
  delegatedActorIds: [UserId]

  """
  Делегирования
  """
  delegations: [DelegationInfoType]

  """
  Документ
  """
  document: DocumentDescriptor!

  """
  Документ последней версии
  """
  documentLastVersion: LastDocumentVersion

  """
  Документ списочный
  """
  documentListItem: IDocumentListItem

  """
  Срок
  """
  dueDate: DateTime

  """
  Кто изменил задачу
  """
  editorId: UserId

  """
  Признак наличия потомков
  """
  hasChildren: Boolean!

  """
  Признак - на контроле
  """
  hasControl: Boolean

  """
  ИД задачи
  """
  id: TaskId!

  """
  Требует персонального рассмотрения
  """
  isPersonalReview: Boolean

  """
  Ответственный исполнитель
  """
  isResponsible: Boolean

  """
  Последний пост актора
  """
  lastActorPost: String

  """
  Заметки во время работы с задачей
  """
  note: String

  """
  Порядок для сортировки
  """
  order: Int
  originatorId: UserId
  overseerId: UserId

  """
  Информация по прочтениям
  """
  readAuditList: [ReadAuditType]

  """
  Идентификатор резолюции
  """
  resolutionId: ResolutionId!

  """
  Зеленый гамбургер
  """
  resolutionsFinished: Boolean

  """
  Состояние задачи
  """
  state: String!

  """
  Текстовое описание состояние задачи
  """
  status: String! @examples(values: ["Initial","InProgress","Accepted","Approved","Resubmitted","Rejected","Final","Canceled"])

  """
  Пользователь который изменил статус
  """
  statusEditorId: UserId

  """
  Количество подзадач
  """
  subTaskCount: Int

  """
  Количество отклоненных подзадач
  """
  subTaskRejectedCount: Int

  """
  Количество разрешенных подзадач
  """
  subTaskSolvedCount: Int

  """
  Тип задачи
  """
  taskType: ResolutionTaskType! @examples(values: ["FOR_PERFORMANCE","FOR_CONSIDERATION","FOR_AGREEMENT","FOR_INFORMATION","FOR_TAX_EXPERTISE"])

  """
  Когда подтвердили задачу
  """
  whenConfirmed: DateTime

  """
  Дата создания задачи
  """
  whenCreated: DateTime!

  """
  Дата изменения задачи
  """
  whenEdited: DateTime!

  """
  Дата изменения статуса
  """
  whenStatusEdited: DateTime

  """
  Дата отправки
  """
  whenSubmitted: DateTime

  """
  Кто подтвердил задачу
  """
  whoConfirmed: UserId
}

"""
Перечисление возможных типов задач в резолюции
"""
enum ResolutionTaskType {
  UNKNOWN

  """
  Для исполнения
  """
  FOR_PERFORMANCE

  """
  Для рассмотрения
  """
  FOR_CONSIDERATION

  """
  На согласование
  """
  FOR_AGREEMENT

  """
  Для сведения
  """
  FOR_INFORMATION

  """
  Заполнение КНЭ
  """
  FOR_TAX_EXPERTISE
}

"""
Представляет обёртку над коллекцией элементов
"""
type ResolutionTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [Resolution]!
}

"""
Пользователь - исполнитель. Является строкой - идентификатором пользователя.
"""
scalar Responder @fake(type: uuid)

"""
Описатель аннулирования документа
"""
type revoked {
  """
  isRevoked
  """
  isRevoked: Boolean!

  """
  isTaskCanceled
  """
  isTaskCanceled: Boolean!

  """
  revokedNote
  """
  revokedNote: String!
}

input RevokeDocumentMutationInput {
  """
  Идентификатор документа
  """
  documentId: DocumentId!

  """
  IsRevoked
  """
  isRevoked: Boolean!

  """
  RevokedNote
  """
  revokedNote: String!

  """
  IsTaskCanceled
  """
  isTaskCanceled: Boolean!
}

"""
Аннулирование дкоумента
"""
type revokedPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: revoked
}

"""
Идентификатор маршрута. Является строкой.
"""
scalar RouteId @fake(type: uuid)

"""
Маршрут
"""
type RouteItemDto {
  """
  Признак согласия всех подписантов
  """
  areSignatoriesAgree: Boolean!

  """
  Идентификатор документа
  """
  documentId: DocumentId!

  """
  Перечень опций
  """
  options: [BooleanOptionType]

  """
  Идентификатор
  """
  routeId: RouteId!

  """
  Перечень этапов
  """
  stages: [StageItemDto]

  """
  Состояние
  """
  state: String!

  """
  Статус
  """
  status: String!

  """
  Перечень групп событий
  """
  targets: [ObservedDocument]

  """
  Заголовок
  """
  title: String!
}

"""
Тип документа с разрешенными опциями по маршруту
"""
type RouteOptionsIntoDocumentType {
  """
  Тип документа
  """
  documentType: DocumentType!

  """
  Перечень допустимых опций в маршруте
  """
  routeOptions: [OptionEntityType]!
}

"""
Задача маршрута
"""
type RouteTaskListItemType implements TaskListItemInterface {
  """
  Исполнитель задачи
  """
  actorId: UserId

  """
  Создатель задачи
  """
  authorId: UserId

  """
  Те кому задача делегирована
  """
  delegatedActorIds: [UserId]

  """
  Делегирования
  """
  delegations: [DelegationInfoType]

  """
  Документ
  """
  document: DocumentDescriptor!

  """
  Документ последней версии
  """
  documentLastVersion: LastDocumentVersion

  """
  Документ списочный
  """
  documentListItem: IDocumentListItem

  """
  Срок
  """
  dueDate: DateTime

  """
  Кто изменил задачу
  """
  editorId: UserId

  """
  Признак наличия потомков
  """
  hasChildren: Boolean!

  """
  ИД задачи
  """
  id: TaskId!

  """
  Признак что задача 'черствая' (тут будут изменения)
  """
  isObsolete: Boolean!

  """
  Требует персонального рассмотрения
  """
  isPersonalReview: Boolean

  """
  Последний пост актора
  """
  lastActorPost: String

  """
  Заметки во время работы с задачей
  """
  note: String

  """
  Информация по прочтениям
  """
  readAuditList: [ReadAuditType]

  """
  Зеленый гамбургер
  """
  resolutionsFinished: Boolean

  """
  Идентификатор маршрута
  """
  routeId: RouteId!

  """
  Идентификатор этапа
  """
  stageId: StageId!

  """
  Состояние задачи
  """
  state: String!

  """
  Текстовое описание состояние задачи
  """
  status: String! @examples(values: ["Initial","InProgress","Accepted","Approved","Resubmitted","Rejected","Final","Canceled"])

  """
  Пользователь который изменил статус
  """
  statusEditorId: UserId

  """
  Количество подзадач
  """
  subTaskCount: Int

  """
  Количество отклоненных подзадач
  """
  subTaskRejectedCount: Int

  """
  Количество разрешенных подзадач
  """
  subTaskSolvedCount: Int

  """
  Тип задачи
  """
  taskType: TaskType! @examples(values: ["AGREEMENT","SIGNING","APPROVAL","REGISTRATION","NORMATIVE_CONTROL"])

  """
  Дата создания задачи
  """
  whenCreated: DateTime!

  """
  Дата изменения задачи
  """
  whenEdited: DateTime!

  """
  Дата изменения статуса
  """
  whenStatusEdited: DateTime

  """
  Дата отправки
  """
  whenSubmitted: DateTime
}

scalar SByte

"""
Найденный документ
"""
type SearchResultItem {
  """
  Автор
  """
  authorId: UserId

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  ID документа
  """
  documentId: DocumentId

  """
  Кем изменен
  """
  editorId: UserId

  """
  Список найденных отрывков в полях документа
  """
  fieldHighlights: [FieldHighlightRecord]

  """
  Список найденных отрывков в файлах документа
  """
  fileHighlights: [FileHighlightRecord]

  """
  Тип документа
  """
  type: DocumentType

  """
  Когда создан
  """
  whenCreated: DateTime

  """
  Когда изменен
  """
  whenEdited: DateTime
}

"""
Представляет обёртку над коллекцией элементов
"""
type SearchResultItemTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [SearchResultItem]!
}

"""
The `Seconds` scalar type represents a period of time represented as the total number of seconds.
"""
scalar Seconds

"""
Пользователь - отправитель. Является строкой - идентификатором пользователя.
"""
scalar Sender @fake(type: uuid)

"""
Последовательность
"""
type SequenceItemType {
  capacity: Int!
  changed: DateTime!
  containers: [String]
  created: DateTime!
  id: String!
  initValue: Long!
  quantity: Int!
  status: String
  value: Long
}

"""
Представляет обёртку над коллекцией элементов
"""
type SequenceItemTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [SequenceItemType]!
}

type SequenceMutationAPI {
  create(
    """
    Имя последовательности
    """
    name: String

    """
    Идент.
    """
    id: String!

    """
    Кол-во контейнеров
    """
    quantity: Int!

    """
    Емкость каждого контейнера
    """
    capacity: Int!

    """
    Начальное значение
    """
    initValue: Long!
  ): String
  currValue(
    """
    Имя последовательности
    """
    name: String

    """
    Идент.
    """
    id: String!
  ): Long
  nextValue(
    """
    Имя последовательности
    """
    name: String

    """
    Идент.
    """
    id: String!
  ): Long!
}

"""
Серверная информация
"""
type ServerInfo {
  """
  Минимальная информация по всем пользователям
  """
  allUsers: [MinimalUserItemType]

  """
  Проверка исходящего номера отправителя в форме ввода входящего документа
  """
  incomingDocSenderCheck(
    senderId: ReferenceCorrespondentId
    senderNumber: String
    documentDate: DateTime
  ): [IncomingDocListItem]

  """
  Пользователи в системе
  """
  onlineUsers(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов
    """
    limit: Int = 10

    """
    Сортировка
    """
    sort: OnlineUsersSort

    """
    Фильтрация по пользователю
    """
    contains: String
  ): UserItemTypeCollection

  """
  Последовательности в системе
  """
  sequences(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов
    """
    limit: Int = 10
  ): SequenceItemTypeCollection

  """
  Статистика СЭД
  """
  statistics: StatisticsType

  """
  Статистика пользователям по резолюцийм
  """
  userResolutionStatistics(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов
    """
    limit: Int = 10

    """
    Сортировка
    """
    sort: UserResolutionStatisticsSort

    """
    Фильтрация по пользователю
    """
    contains: String
  ): UserResolutionStatisticsTypeCollection

  """
  Информация по последней синхронизации пользователей
  """
  userSyncInfo: UserSyncInfo

  """
  Статистика пользователям по задачам
  """
  userTaskStatistics(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов
    """
    limit: Int = 10

    """
    Сортировка
    """
    sort: UserTaskStatisticsSort

    """
    Фильтрация по пользователю
    """
    contains: String
  ): UserTaskStatisticsTypeCollection
}

type ServerSettingsMutationAPI {
  """
  Разрешить исполнение всех команд
  """
  allowAllCommands: Void

  """
  Разрешить исполнение команды
  """
  allowCommand(name: String!): Void
  clearMaintenanceMessage: Void

  """
  Запретить исполнение команды
  """
  forbidCommand(name: String!): Void

  """
  Запретить исполнение команд по созданию документов
  """
  forbidCreateDocuments: Void
  initVisits(count: Int!, startDate: DateTime!): Void
  setMaintenanceMessage(message: String!): Void
}

type ServerSettingsQueryAPI {
  maintenanceMessage: String
  permitRegistrationBookJumper(value: Boolean): Boolean!
}

type ServiceMutationAPI {
  """
  Запуск синхронизации резолюций пользователей
  """
  launchResolutionStatisticsSync(
    """
    Пользователи для синхронизации резолюций
    """
    users: [UserId!]
  ): Void

  """
  Запуск синхронизации задач пользователей
  """
  launchTaskStatisticsSync(
    """
    Пользователи для синхронизации задач
    """
    users: [UserId!]
  ): Void

  """
  Пересчитать доступы на сетевую папку для документа
  """
  resyncAccessRulesToNetworkFolder(documentId: DocumentId!): Void

  """
  Запуск синхронизации пользователей
  """
  startUserSync: Void
}

scalar Short

"""
Перечисление возможных типов подписей пользователя
"""
enum SignatureType {
  OWN
  IO
}

"""
Пользователь - подписант. Является строкой - идентификатором пользователя.
"""
scalar Signer @fake(type: uuid)

"""
Перечисление возможных действий над задачей утверждения
"""
enum SigningTaskAction {
  """
  Отклонить
  """
  REJECT

  """
  Подписать
  """
  APPROVE
}

"""
Перечисление возможных статусов для задач подписания
"""
enum SigningTaskStatus {
  """
  Инициализирована
  """
  INITIAL

  """
  В ожидании
  """
  PENDING

  """
  Отправлена
  """
  IN_PROGRESS

  """
  Отклонена
  """
  REJECTED

  """
  Подписана
  """
  APPROVED

  """
  Завершена
  """
  FINAL
}

type SingleReferencePropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: ReferenceValue
}

"""
Сортировка
"""
input SortInput_ContractsSortFieldEnumType {
  """
  Поле для сортировки
  """
  field: ContractsSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Сортировка
"""
input SortInput_ControlCardsSortFieldEnumType {
  """
  Поле для сортировки
  """
  field: ControlCardsSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Сортировка
"""
input SortInput_DocumentSortFieldEnumType {
  """
  Поле для сортировки
  """
  field: DocumentSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Сортировка
"""
input SortInput_GenericRequestDocsSortFieldEnumType {
  """
  Поле для сортировки
  """
  field: GenericRequestDocsSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Сортировка
"""
input SortInput_HRRequestDocsSortFieldEnumType {
  """
  Поле для сортировки
  """
  field: HRRequestDocsSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Сортировка
"""
input SortInput_IncomingDocsSortFieldEnumType {
  """
  Поле для сортировки
  """
  field: IncomingDocsSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Сортировка
"""
input SortInput_LettersSortFieldEnumType {
  """
  Поле для сортировки
  """
  field: LettersSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Сортировка
"""
input SortInput_LNADocsSortFieldEnumType {
  """
  Поле для сортировки
  """
  field: LNADocsSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Сортировка
"""
input SortInput_MassMailsSortFieldEnumType {
  """
  Поле для сортировки
  """
  field: MassMailsSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Сортировка
"""
input SortInput_OutgoingDocsSortFieldEnumType {
  """
  Поле для сортировки
  """
  field: OutgoingDocsSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Сортировка
"""
input SortInput_RequestDocsSortFieldEnumType {
  """
  Поле для сортировки
  """
  field: RequestDocsSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Сортировка
"""
input SortInput_ResolutionsSortFieldEnumType {
  """
  Поле для сортировки
  """
  field: ResolutionsSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Сортировка
"""
input SortInput_UserActionsSortFieldEnumType {
  """
  Поле для сортировки
  """
  field: UserActionsSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Сортировка
"""
input SortInput_UserTaskSortFieldEnumType {
  """
  Поле для сортировки
  """
  field: UserTaskSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Идентификатор этапа. Является строкой.
"""
scalar StageId @fake(type: uuid)

"""
Этап
"""
type StageItemDto {
  """
  Тип задач по умолчанию
  """
  defaultTaskType: TaskType!

  """
  Продолжительность (дни)
  """
  duration: Int!

  """
  Порядковый номер
  """
  index: Int

  """
  Идентификатор
  """
  stageId: StageId!

  """
  Состояние
  """
  state: String!

  """
  Статус
  """
  status: String!

  """
  Перечень задач
  """
  tasks: [TaskListItemInterface!]
}

"""
Статистика СЭД
"""
type StatisticsType {
  cancellationRequestForDismissal: Int
  contractsCount: Int
  controlCardsCount: Int
  created: DateTime
  documentsCount: Int
  elapsed: UInt
  filesCount: Int
  filesDataSize: Long
  incomingDocsCount: Int
  lettersCount: Int
  outgoingDocsCount: Int
  refreshed: DateTime
  requestForDismissal: Int
  requestToHire: Int
  resolutionsCount: Int
  tasksCount: Int
  taxExpertisesCount: Int
  transferRequest: Int
  usersCount: Int
  visitsCount: Long
}

type StringPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: String
}

"""
Операция над вложенным документом
"""
enum SubDocumentPropertyOperationType {
  """
  Добавлен
  """
  ATTACHED

  """
  Изменен
  """
  UPDATED

  """
  Удален
  """
  DETACHED
}

"""
Вложенные документы
"""
type SubDocumentPropertyType {
  """
  Операция над вложенным документом
  """
  action: SubDocumentPropertyOperationType

  """
  ID вложенного документа
  """
  documentId: String
}

"""
Информация о замещении или ассистировании
"""
type substitution {
  """
  Признак обозначающий тип замещения как ассистент
  """
  asAssistant: Boolean!

  """
  Основной работник
  """
  masterId: UserId

  """
  Описание причины замещения
  """
  note: String

  """
  Период замещения
  """
  period: substitutionPeriod

  """
  Работник-заместитель/ассистент
  """
  slaveId: UserId

  """
  Идентификатор замещения
  """
  substitutionId: SubstitutionId!
}

"""
Идентификатор документа. Является строкой.
"""
scalar SubstitutionId @fake(type: uuid)

"""
Информация о периоде замещения
"""
type substitutionPeriod {
  """
  Дата окончания
  """
  endOffDate: DateTime!

  """
  Дата начала
  """
  startOnDate: DateTime!
}

"""
Информация о периоде замещения
"""
input SubstitutionPeriodInput {
  """
  Дата начала
  """
  startOnDate: DateTime!

  """
  Дата окончания
  """
  endOffDate: DateTime!
}

"""
Тег
"""
type Tag {
  """
  Дочерние теги
  """
  childrens: [Tag]

  """
  Наличие дочерних элементов
  """
  hasChildren: Boolean!

  """
  Идентификатор
  """
  id: Int!

  """
  Состояние удаления
  """
  isDeleted: Boolean!

  """
  Название
  """
  name: String

  """
  Связанное подразделение
  """
  orgUnit: OrgUnit

  """
  Идентификатор связанного подразделения
  """
  orgUnitId: Int!

  """
  Идентификатор родителя
  """
  parentId: Int

  """
  Короткое название
  """
  shortName: String
  tagId: Int @deprecated(reason: "Теперь его нет, используй id")
}

"""
Пользователь - исполнитель задачи. Является строкой - идентификатором пользователя.
"""
scalar TaskActor @fake(type: uuid)

type TaskAPI {
  """
  Прочитать задачу
  """
  read: Void

  """
  Установка персонального рассмотрения
  """
  setPersonalReview(
    """
    Требует персонального рассмотрения
    """
    isPersonalReview: Boolean!
  ): Boolean
}

type TaskDelegatedHistoryItemType implements TaskHistoryItemInterface {
  """
  Пользователь - инициатор
  """
  actorId: UserId

  """
  Пользователь - делегат
  """
  delegatedActorId: UserId

  """
  Дата события
  """
  occurredOn: DateTime

  """
  ИД задачи
  """
  taskId: TaskId!
}

type TaskDelegationBrokeHistoryItemType implements TaskHistoryItemInterface {
  """
  Пользователь - инициатор
  """
  actorId: UserId

  """
  Пользователь - делегат
  """
  delegatedActorId: UserId

  """
  Дата события
  """
  occurredOn: DateTime

  """
  ИД задачи
  """
  taskId: TaskId!
}

type TaskDueDateShiftedHistoryItemType implements TaskHistoryItemInterface {
  """
  Пользователь - инициатор
  """
  actorId: UserId

  """
  Новый срок
  """
  dueDate: DateTime

  """
  Дата события
  """
  occurredOn: DateTime

  """
  ИД задачи
  """
  taskId: TaskId!
}

"""
Элемент истории в задаче
"""
interface TaskHistoryItemInterface {
  """
  Пользователь - инициатор
  """
  actorId: UserId

  """
  Дата события
  """
  occurredOn: DateTime

  """
  ИД задачи
  """
  taskId: TaskId!
}

"""
Представляет обёртку над коллекцией элементов
"""
type TaskHistoryItemInterfaceCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [TaskHistoryItemInterface]!
}

"""
Идентификатор задачи
"""
scalar TaskId @fake(type: uuid)

"""
Представление задачи
"""
interface TaskListItemInterface {
  """
  Исполнитель задачи
  """
  actorId: UserId

  """
  Создатель задачи
  """
  authorId: UserId

  """
  Те кому задача делегирована
  """
  delegatedActorIds: [UserId]

  """
  Делегирования
  """
  delegations: [DelegationInfoType]

  """
  Документ
  """
  document: DocumentDescriptor!

  """
  Документ последней версии
  """
  documentLastVersion: LastDocumentVersion

  """
  Документ списочный
  """
  documentListItem: IDocumentListItem

  """
  Срок
  """
  dueDate: DateTime

  """
  Кто изменил задачу
  """
  editorId: UserId

  """
  Признак наличия потомков
  """
  hasChildren: Boolean!

  """
  ИД задачи
  """
  id: TaskId!

  """
  Требует персонального рассмотрения
  """
  isPersonalReview: Boolean

  """
  Последний пост актора
  """
  lastActorPost: String

  """
  Заметки во время работы с задачей
  """
  note: String

  """
  Информация по прочтениям
  """
  readAuditList: [ReadAuditType]

  """
  Зеленый гамбургер
  """
  resolutionsFinished: Boolean

  """
  Состояние задачи
  """
  state: String!

  """
  Текстовое описание состояние задачи
  """
  status: String!

  """
  Пользователь который изменил статус
  """
  statusEditorId: UserId

  """
  Количество подзадач
  """
  subTaskCount: Int

  """
  Количество отклоненных подзадач
  """
  subTaskRejectedCount: Int

  """
  Количество разрешенных подзадач
  """
  subTaskSolvedCount: Int

  """
  Дата создания задачи
  """
  whenCreated: DateTime!

  """
  Дата изменения задачи
  """
  whenEdited: DateTime!

  """
  Дата изменения статуса
  """
  whenStatusEdited: DateTime

  """
  Дата отправки
  """
  whenSubmitted: DateTime
}

"""
Представляет обёртку над коллекцией элементов
"""
type TaskListItemInterfaceCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [TaskListItemInterface]! @listLength(min: 20, max: 25)
}

type TaskPostAppendedHistoryItemType implements TaskHistoryItemInterface {
  """
  Пользователь - инициатор
  """
  actorId: UserId

  """
  Дата события
  """
  occurredOn: DateTime

  """
  Сообщение
  """
  postBody: String

  """
  ИД задачи
  """
  taskId: TaskId!
}

type TaskQueryAPI {
  """
  История
  """
  history(
    """
    Сколько пропустить элементов
    """
    skip: Int = 0

    """
    Ограничение количества элементов для выдачи
    """
    limit: Int = 10
  ): TaskHistoryItemInterfaceCollection
}

type TaskResolutionCreatedHistoryItemType implements TaskHistoryItemInterface {
  """
  Пользователь - инициатор
  """
  actorId: UserId

  """
  Дата события
  """
  occurredOn: DateTime

  """
  Тест резолюции
  """
  resolutionDescription: String

  """
  ID Резолюции
  """
  resolutionId: ResolutionId

  """
  Тип задач у резолюции
  """
  resolutionTaskType: ResolutionTaskType

  """
  ИД задачи
  """
  taskId: TaskId!
}

type TaskStateChangedHistoryItemType implements TaskHistoryItemInterface {
  """
  Пользователь - инициатор
  """
  actorId: UserId

  """
  Новое состояние
  """
  newState: String

  """
  Дата события
  """
  occurredOn: DateTime

  """
  ИД задачи
  """
  taskId: TaskId!
}

"""
Перечисление возможных типов задач в маршруте
"""
enum TaskType {
  UNKNOWN

  """
  Согласование
  """
  AGREEMENT

  """
  Подписание
  """
  SIGNING

  """
  Утверждение
  """
  APPROVAL

  """
  Регистрация
  """
  REGISTRATION

  """
  Нормоконтроль
  """
  NORMATIVE_CONTROL
}

"""
Карта налоговой экспертизы
"""
type TaxExpertiseItem implements IDocument {
  """
  Администраторы договора
  """
  adminIds: [UserId]

  """
  Вложения
  """
  attachments: [FileVersionListItem]

  """
  Автор
  """
  authorId: UserId

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Вывод по результатам анализа сделки (договора)
  """
  conclusionResultContract: String

  """
  Налоговые последствия для Общества по налогу на прибыль
  """
  consequenceIncomeTax: Consequence

  """
  Налоговые последствия для Общества по иным налогам
  """
  consequenceOtherTaxes: Consequence

  """
  Налоговые последствия для Общества по НДС
  """
  consequenceVAT: Consequence

  """
  Налоговые последствия для контрагента по налогу на прибыль
  """
  contractorConsequenceIncomeTax: Consequence

  """
  Налоговые последствия для контрагента по иным налогам
  """
  contractorConsequenceOtherTaxes: Consequence

  """
  Налоговые последствия для контрагента по НДС
  """
  contractorConsequenceVAT: Consequence

  """
  Налоговые риски для Контрагента
  """
  contractorTaxRisks: TaxRisk

  """
  Серийный номер документа
  """
  documentSerialNumber: Int

  """
  Статус
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус по русски
  """
  documentStatusDescription: String

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Количество событий
  """
  eventCount: Int!

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  Проверяет есть ли доступ у текущего пользователя
  """
  hasAccess: Boolean

  """
  ИД документа
  """
  id: String!

  """
  Оценка влияния на КГН (Консолидированная группа налогоплательщиков)
  """
  impactAssessmentKGN: String

  """
  Опция - доступ по ссылке
  """
  isLinkAccessAllowed: Boolean

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Группы рассылок
  """
  mailingGroups: [UsedMailingGroupType]

  """
  Пользователи рассылок
  """
  mailingUsers: [MailingUserItem]

  """
  Позиция Минфина
  """
  notionMinFin: String

  """
  Позиция налоговых органов
  """
  notionTaxAuthorities: String

  """
  Позиция судов
  """
  notionTribunal: String

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]

  """
  Читатели договора
  """
  readerIds: [UserId]

  """
  Последствия. Рекомендации. Предложения
  """
  recommendations: String

  """
  Регистрация в журнале
  """
  registrationBookItem: RegistrationBookItem

  """
  Регистрационные данные
  """
  registrationInfo: RegistrationInfo

  """
  Связанные документы
  """
  relations: [relation]

  """
  Данные по резервированию
  """
  reservationInfo: RegistrationInfo

  """
  Исполнитель от бухгалтерии
  """
  responderAccountant: UserId

  """
  Исполнитель от отдела налогов
  """
  responderTaxId: UserId

  """
  Аннулирование документа
  """
  revoked: revoked

  """
  Вложенные документы
  """
  subDocuments: [DocumentDescriptor]

  """
  Налоговые риски для Общества
  """
  taxRisks: TaxRisk

  """
  Список ролей текущего пользователя к этому документу
  """
  userRoles: [UserRoleInDocument]!

  """
  Версия
  """
  version: Int!

  """
  Когда создан
  """
  whenCreated: DateTime

  """
  Когда изменен
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

"""
Сумма по договору с учетом налоговой ставки
"""
type taxMoney {
  """
  Сумма без НДС
  """
  amount: Decimal

  """
  Сумма с НДС
  """
  amountWithTax: Decimal

  """
  Код валюты
  """
  code: ReferenceValue

  """
  Налоговая ставка в процентах
  """
  tax: Int
}

"""
Денежные средства. Json-строка пример: {
  "Amount": 12.34,
  "Code": "RUB",
  "Tax": 14,
  "AmountWithTax": 12.34
}
"""
scalar TaxMoney

"""
Сумма по договору с учетом налоговой ставки
"""
input TaxMoneyInput {
  """
  Сумма без НДС
  """
  amount: Decimal

  """
  Сумма с НДС
  """
  amountWithTax: Decimal

  """
  Код валюты
  """
  code: String!

  """
  Налоговая ставка в процентах
  """
  tax: Int
}

type TaxMoneyPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: taxMoney
}

"""
Налоговые риски
"""
type TaxRisk {
  """
  Оценка риска
  """
  assessment: String

  """
  Степень риска (справочник)
  """
  power: String

  """
  Описание риска
  """
  reason: String
}

"""
Налоговые риски
"""
input TaxRiskInput {
  """
  Описание риска
  """
  reason: String

  """
  Степень риска (справочник)
  """
  power: String

  """
  Оценка риска
  """
  assessment: String
}

"""
Represents a time interval.
"""
scalar TimeSpan

"""
Заявление на перевод
"""
type TransferRequestItem implements IDocument {
  """
  Адресат / Ответственный за рассмотрение
  """
  addresseeId: UserId!

  """
  Администраторы договора
  """
  adminIds: [UserId]

  """
  Заявитель
  """
  applicant: person!

  """
  Данные о заявитель-работник
  """
  applicantDetails: employeeDetails

  """
  Applicant ExternalUserId
  """
  applicantExternalUserId: String

  """
  Applicant UserId
  """
  applicantId: UserId

  """
  Вложения
  """
  attachments: [FileVersionListItem]

  """
  Автор
  """
  authorId: UserId

  """
  Название
  """
  compileTitle: String @examples(values: ["Документ 1", "Документ 2", "Документ 3", "Документ 4", "Документ 5", "Документ 6"])

  """
  Дата появления вакансии
  """
  dateOfVacancy: DateTime

  """
  Подразделение, откуда осуществляется перевод
  """
  departmentFrom: DepartmentId

  """
  Подразделение, куда осуществляется перевод
  """
  departmentTo: DepartmentId

  """
  Серийный номер документа
  """
  documentSerialNumber: Int

  """
  Статус
  """
  documentStatus: DocumentStatusEnumType

  """
  Статус по русски
  """
  documentStatusDescription: String

  """
  Системный номер документа
  """
  documentSystemNumber: String

  """
  Тип документа
  """
  documentType: DocumentType

  """
  Кем изменено
  """
  editorId: UserId

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean

  """
  Количество событий
  """
  eventCount: Int!

  """
  Список ознакомившихся
  """
  examinationAuditList: [ReadAuditType]

  """
  Проверяет есть ли доступ у текущего пользователя
  """
  hasAccess: Boolean

  """
  ИД документа
  """
  id: String!

  """
  Опция - доступ по ссылке
  """
  isLinkAccessAllowed: Boolean

  """
  Опубликован ли документ?
  """
  isPublished: Boolean

  """
  Группы рассылок
  """
  mailingGroups: [UsedMailingGroupType]

  """
  Пользователи рассылок
  """
  mailingUsers: [MailingUserItem]

  """
  Информация о приказе
  """
  orderDescriptor: orderDescriptor

  """
  Должность, с которой осуществляется перевод
  """
  positionFrom: String

  """
  Должность, на которую осуществляется перевод
  """
  positionTo: String

  """
  Инициатор публикации документа
  """
  publisherId: UserId

  """
  Список прочитавших
  """
  readAuditList: [ReadAuditType]

  """
  Читатели договора
  """
  readerIds: [UserId]

  """
  Источник комплектования
  """
  recruitmentSource: ReferenceValue

  """
  Регистрация в журнале
  """
  registrationBookItem: RegistrationBookItem

  """
  Регистрационные данные
  """
  registrationInfo: RegistrationInfo

  """
  Связанные документы
  """
  relations: [relation]

  """
  Примечание
  """
  remark: String

  """
  Данные по резервированию
  """
  reservationInfo: RegistrationInfo

  """
  Ответственный
  """
  responderId: UserId

  """
  Аннулирование документа
  """
  revoked: revoked

  """
  Скан-копия оригинала
  """
  scanCopyOriginal: FileInstance

  """
  Статус
  """
  status: ReferenceValue

  """
  Вложенные документы
  """
  subDocuments: [DocumentDescriptor]

  """
  Задачи кадрового решения
  """
  tasks: [TaskId]

  """
  Дата перевода
  """
  transferDate: DateTime

  """
  Тип перевода
  """
  transferType: TransferRequestType

  """
  Список ролей текущего пользователя к этому документу
  """
  userRoles: [UserRoleInDocument]!

  """
  Версия
  """
  version: Int!

  """
  Когда создан
  """
  whenCreated: DateTime

  """
  Когда изменен
  """
  whenEdited: DateTime

  """
  Дата публикации документа
  """
  whenPublished: DateTime
}

input TransferRequestPropertiesInput {
  """
  Адресат
  """
  addresseeId: Addressee!

  """
  Заявитель
  """
  applicant: PersonInput!

  """
  Данные по заявитель-работник
  """
  applicantDetails: EmployeeDetailsInput

  """
  Подразделение откуда переводят
  """
  departmentFrom: DepartmentId

  """
  Подразделение куда переводят
  """
  departmentTo: DepartmentId

  """
  Приказ о переводе
  """
  orderDescriptor: OrderDescriptorInput

  """
  Должность, с которой переводят
  """
  positionFrom: String

  """
  Должность, на которую переводят
  """
  positionTo: String

  """
  Источник комплектования
  """
  recruitmentSource: ReferenceKeyInput

  """
  Примечание
  """
  remark: String

  """
  Ответственный
  """
  responderId: Responder!

  """
  Файл скан-копии оригинала заявления
  """
  scanCopyOriginal: FileInstanceInput

  """
  Статус
  """
  status: ReferenceKeyInput

  """
  Дата перевода
  """
  transferDate: DateTime

  """
  Дата появления вакансии
  """
  dateOfVacancy: DateTime

  """
  тип перевода
  """
  transferType: TransferRequestType!

  """
  Файлообменная папка
  """
  enableNetworkFolder: Boolean
}

"""
Перечисление возможных типов заявлений на перевод
"""
enum TransferRequestType {
  ON_TEMPORARY
  ON_PERMANENT
}

type TransferRequestTypePropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: TransferRequestType
}

scalar UInt

scalar ULong

scalar Uri

"""
Назначенная группа рассылки
"""
type UsedMailingGroupType {
  """
  Кто изменил состояние элемента
  """
  authorId: UserId!
  hasChildren: Boolean
  id: String!
  isDeleted: Boolean
  name: String
  parentId: String

  """
  Состояние элемента рассылки
  """
  state: MailingItemState!
  type: Int

  """
  Когда изменили состояние элемента
  """
  when: DateTime!
}

"""
Перечисление возможных действий пользователя
"""
enum UserAction {
  READ
  EXAMINED
}

"""
Действие пользователя по документу
"""
type UserActionItemType {
  """
  идент. документа
  """
  documentId: DocumentId!

  """
  Тип действия
  """
  state: UserAction!

  """
  Дата действия
  """
  whenDone: DateTime!
}

"""
Перечисление возможных полей для сортировки действий пользователя
"""
enum UserActionsSortFieldEnumType {
  """
  По дате
  """
  whenDone

  """
  По ФИО
  """
  FIO
}

"""
Кастомное уведомление для пользователя
"""
type userCustomNotify {
  """
  Сообщение в уведомлении
  """
  comment: String

  """
  Какой элемент является родителем уведомления например TaskId
  """
  hostId: String

  """
  Тип элемента
  """
  hostType: HostType!

  """
  JobId в hangfire
  """
  jobId: String
  notifyDate: DateTime
  whenCreated: DateTime
}

"""
Пользователь на дату
"""
type UserDescriptionType {
  department: String!
  jobTitle: String!
  name: String!
  orgUnit: String!
}

"""
Пользователь. Является строкой - идентификатором пользователя.
"""
scalar UserId @fake(type: uuid)

"""
Пользователь
"""
type UserItem {
  """
  Действия пользователя по документу
  """
  actions: [UserActionItemType]

  """
  Количество действий
  """
  activityCount: Int

  """
  Внешний идентификатор, например ADLogin
  """
  adLogin: String @fake(type: currencyName)

  """
  Подразделение
  """
  department: String @fake(type: jobTitle)

  """
  ФИО
  """
  displayName: String @examples(values: ["Иванов Валерий Олегович", "Ivanov Valeriy Olegovich"])

  """
  Тэги, которыми пользователь помечает документы
  """
  documentTags: [Tag]

  """
  Email
  """
  email: String @fake(type: email)

  """
  ИД внутренний
  """
  id: String @fake(type: uuid)

  """
  Внешний идентификатор, например ADGuid
  """
  identity: String @fake(type: uuid)

  """
  Состояние уволен/не уволен
  """
  isRetired: Boolean @examples(values: true)

  """
  Должность
  """
  jobTitle: String @fake(type: jobTitle)

  """
  Время последнего действия
  """
  lastActivity: DateTime

  """
  Список кого замещаю/ассистирую
  """
  masters: [substitution]

  """
  Филиал
  """
  orgUnit: String

  """
  Глобальный идентификатор человека
  """
  personalIdentifier: PersonalIdentifier

  """
  Телефоны
  """
  phone: String

  """
  Url фото
  """
  photoUrl: String

  """
  Дата увольнения
  """
  retiredDate: DateTime @fake(type: date)

  """
  Текущие подписи пользователя
  """
  signatures: [userSignature]

  """
  Список заместителей
  """
  slaves: [substitution]

  """
  Токены доступа
  """
  userAcl: [String]

  """
  Браузер пользователя
  """
  userAgent: String

  """
  Пользователь на дату
  """
  userDescription(onDate: DateTime!): UserDescriptionType

  """
  Отсутствие
  """
  vacation: Vacation
}

"""
Представляет обёртку над коллекцией элементов
"""
type UserItemTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [UserItem]!
}

type UserPropertyType implements JournalPropertyInterface {
  """
  Тип
  """
  type: String!
  value: UserId
}

"""
Сортировка статистики пользователей
"""
input UserResolutionStatisticsSort {
  """
  Поле для сортировка
  """
  field: UserResolutionStatisticsSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Перечисление возможных полей для сортировки
"""
enum UserResolutionStatisticsSortFieldEnumType {
  """
  По пользователю
  """
  displayName

  """
  По количеству резолюций всего
  """
  resolutionsCount

  """
  Создано секретарем
  """
  byAssistant

  """
  Создано заместителем
  """
  bySub

  """
  По количеству резолюций в работе
  """
  resolutionsLaunchedCount

  """
  По количеству завершенных резолюций
  """
  resolutionsDoneCount

  """
  По количеству резолюций на контроле
  """
  resolutionsOnControlCount
}

"""
Статистика пользователя по резолюциям
"""
type UserResolutionStatisticsType {
  created: DateTime

  """
  Создано секретарем
  """
  createdByAssistant: Int

  """
  Создано собой
  """
  createdBySelf: Int

  """
  Создано непойми кем
  """
  createdByStranger: Int

  """
  Создано заместителем
  """
  createdBySub: Int

  """
  Отдел
  """
  department: String

  """
  Должность
  """
  jobTitle: String

  """
  Подразделение
  """
  orgUnit: String

  """
  Всего резолюций
  """
  resolutionsCount: Int

  """
  Завершено
  """
  resolutionsDoneCount: Int

  """
  В работе
  """
  resolutionsLaunchedCount: Int

  """
  Резолюций на контроле
  """
  resolutionsOnControlCount: Int

  """
  Исполнитель задачи
  """
  userId: String
}

"""
Представляет обёртку над коллекцией элементов
"""
type UserResolutionStatisticsTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [UserResolutionStatisticsType]!
}

"""
Перечисление возможных ролей пользователя в документе
"""
enum UserRoleInDocument {
  """
  Никто
  """
  NOBODY

  """
  Участник (через Задачу или явно Читатель)
  """
  PARTICIPANT

  """
  Редактор (через Задачу или явно Админ)
  """
  EDITOR

  """
  Регистратор
  """
  REGISTRAR

  """
  Для ознакомления
  """
  TO_EXAMINE
}

"""
Настройки пользователя
"""
type UserSettings {
  """
  Отправлять уведомления об изменении делегированных мной задач
  """
  isDelegatedTaskNotifyEnabled: Boolean

  """
  Отправлять уведомления обо всех изменениях версии документа
  """
  isDocumentNotify2Enabled: Boolean

  """
  Отправлять уведомления обо всех изменениях статуса документов
  """
  isDocumentNotify3Enabled: Boolean

  """
  Включить/отключить все уведомления
  """
  isEmailNotifyEnabled: Boolean

  """
  Внедрять входящий номер и дату в PDF-файлы при загрузке документов
  """
  isIncomingNumberAndDatePDFInFileEnabled: Boolean

  """
  Отправлять уведомления о назначении новых задач
  """
  isNotifyOnlyOnAssignTasks: Boolean

  """
  Показывать печать Ленты резолюций
  """
  isPrintBtnResolutionActive: Boolean

  """
  Загружать файлы отчетов
  """
  isPrintReportEnabled: Boolean

  """
  Отправлять уведомления об изменениях статуса моих резолюций
  """
  isResolutionNotify1Enabled: Boolean

  """
  Отправлять уведомления об изменениях статуса резолюций у меня на контроле
  """
  isResolutionNotify2Enabled: Boolean

  """
  Отключение оповещений ответственного (уведомлять только о собственных задачах)
  """
  isResponsibleNotifyDisabled: Boolean

  """
  Отправлять уведомления о завершении маршрутов
  """
  isRouteFinishedNotifyEnabled: Boolean

  """
  Отправлять уведомления обо всех изменениях версий завизированных мной документов
  """
  isSignedDocumentChangedNotifyEnabled: Boolean

  """
  Отправлять уведомления о завершении этапов
  """
  isStageFinishedNotifyEnabled: Boolean

  """
  Отправлять уведомления о назначенных мне задачах
  """
  isTaskNotify1Enabled: Boolean

  """
  Отправлять уведомления об изменении статуса моих задач другим пользователем
  """
  isTaskNotify3Enabled: Boolean

  """
  Отправлять уведомления об автоматическом завершении моих задач
  """
  isTaskNotify4Enabled: Boolean

  """
  Отправлять уведомления об изменениях статуса задач визирования документа
  """
  isTaskNotify5Enabled: Boolean

  """
  Отправлять уведомления о добавлении комментариев в задачи
  """
  isTaskNotify6Enabled: Boolean

  """
  Отправлять уведомления об изменениях статуса подзадач по резолюциям других пользователей
  """
  isTaskNotify7Enabled: Boolean

  """
  Отправлять уведомления об изменениях статуса каждой из задач по моим резолюциям
  """
  isTaskNotify8Enabled: Boolean

  """
  Отправлять уведомления по задачам, требующим моего подтверждения
  """
  isTaskNotify9Enabled: Boolean

  """
  Отправлять уведомления о добавленных комментариях в задачу
  """
  isTasNotify2Enabled: Boolean

  """
  Отправлять уведомления о задачах для личного рассмотрения
  """
  personalTaskOnlyNotify: Boolean
}

type UserSettingsMutationAPI {
  """
  Удалить уведомление
  """
  removeCustomNotify(taskId: TaskId!): Void
  set(
    """
    необязательный ключ
    """
    key: String = "default"

    """
    json например
    """
    value: String
  ): Void
  setIsDelegatedTaskNotifyEnabled(isDelegatedTaskNotifyEnabled: Boolean!): Void
  setIsEmailNotifyEnabled(isEmailNotifyEnabled: Boolean!): Void
  setIsIncomingNumberAndDatePDFInFileEnabled(
    isIncomingNumberAndDatePDFInFileEnabled: Boolean!
  ): Void
  setIsNotifyOnlyOnAssignTasks(isNotifyOnlyOnAssignTasks: Boolean!): Void
  setIsPrintBtnResolutionActive(isPrintBtnResolutionActive: Boolean!): Void
  setIsPrintReportEnabled(isPrintReportEnabled: Boolean!): Void
  setIsResponsibleNotifyDisabled(isResponsibleNotifyDisabled: Boolean!): Void
  setIsRouteFinishedNotifyEnabled(isRouteFinishedNotifyEnabled: Boolean!): Void
  setIsSignedDocumentChangedNotifyEnabled(
    isSignedDocumentChangedNotifyEnabled: Boolean!
  ): Void
  setIsStageFinishedNotifyEnabled(isStageFinishedNotifyEnabled: Boolean!): Void
  setPersonalTaskOnlyNotify(personalTaskOnlyNotify: Boolean!): Void

  """
  Создаёт либо редактирует уведомление на задачу
  """
  upsertTaskCustomNotify(
    comment: String
    taskId: TaskId!
    notifyDate: DateTime!
  ): userCustomNotify
}

type UserSettingsQueryAPI {
  get(
    """
    необязательный ключ
    """
    key: String = "default"
  ): String

  """
  Получить все уведомления пользователя
  """
  getCustomNotifies: [userCustomNotify]

  """
  Получить уведомление
  """
  getCustomNotify(host: TaskId!): userCustomNotify

  """
  Настройки пользователя
  """
  userSettings: UserSettings
}

"""
Подпись пользователя
"""
type userSignature {
  """
  Подразделение
  """
  department: String!

  """
  Слепок подписи
  """
  hash: Guid!

  """
  Должность
  """
  jobTitle: String!

  """
  ФИО
  """
  name: String!

  """
  Тип подписи
  """
  signatureType: SignatureType!

  """
  Идентификатор пользователя-подписанта, владелец подписи
  """
  userId: UserId!
}

"""
Ошибка синхронизации
"""
type UserSyncError {
  """
  Внешний пользователь
  """
  externalUser: ExternalUser

  """
  Сообщение ошибки
  """
  message: String
}

"""
Информация по сервису синхронизации
"""
type UserSyncInfo {
  """
  Текущее количество синхронизированных пользователей
  """
  currentUserSyncCount: Int

  """
  Ошибки при синхронизации
  """
  errors: [UserSyncError]

  """
  Время последней синхронизации
  """
  lastSyncTime: DateTime

  """
  Количество синхронизированных пользователей за последнюю синхронизацию
  """
  lastTimeUserSyncCount: Int

  """
  Текущее состояние
  """
  status: String

  """
  Затрачено времени
  """
  timeElapsed: TimeSpan
}

input UserTasksAttributeSearchType {
  """
  Идентификатор пользователя как исполнитель задач
  """
  actor: TaskActor

  """
  Перечень фильтруемых типов задач
  """
  taskTypes: [AllTaskTypeEnumType] = []

  """
  Фильтр задач по типу документа
  """
  documentTypeFilter: [DocumentType!] = []

  """
  Скрывать отписанные задачи
  """
  hideWithChildren: Boolean = false

  """
  Не скрывать просроченные
  """
  withChildrenDone: Boolean = false

  """
  Не скрывать выполненные
  """
  withChildrenOverdue: Boolean = false

  """
  Отображать завершенные задачи
  """
  showCompletedTasks: Boolean = false

  """
  За количество дней
  """
  showCompletedTasksDays: Int = 1

  """
  Отображать отклоненные задачи
  """
  showRejectedTasks: Boolean = false

  """
  За количество дней
  """
  showRejectedTasksDays: Int = 1

  """
  Скрывать делегированные задачи
  """
  hideDelegatedTasks: Boolean

  """
  Не скрывать визирование не актуальных версий
  """
  showObsoleteTasks: Boolean

  """
  Не скрывать отклоненные подзадачи
  """
  withChildrenRejected: Boolean = false

  """
  Отображать задачи контроля
  """
  withTasksOnControl: Boolean = false

  """
  Только требующие подтверждения выполнения
  """
  onlyPreparedTasks: Boolean = false

  """
  Только задачи на контроле
  """
  onlyOnControlTasks: Boolean = false

  """
  Фильтр по название документа
  """
  contains: String

  """
  Требует персонального рассмотрения
  """
  isPersonalReview: Boolean
}

"""
Перечисление возможных полей для сортировки задач
"""
enum UserTaskSortFieldEnumType {
  """
  По дате создания
  """
  whenCreated

  """
  По сроку
  """
  dueDate

  """
  По статусу
  """
  status

  """
  По типу задачи
  """
  type
}

"""
Сортировка статистики пользователей
"""
input UserTaskStatisticsSort {
  """
  Поле для сортировка
  """
  field: UserTaskStatisticsSortFieldEnumType

  """
  Сортировать по убыванию
  """
  isDesc: Boolean
}

"""
Перечисление возможных полей для сортировки
"""
enum UserTaskStatisticsSortFieldEnumType {
  """
  По пользователю
  """
  displayName

  """
  По количеству задач всего
  """
  tasksCount

  """
  По количеству завершенных задач
  """
  tasksDoneCount

  """
  По количесту просроченных задач
  """
  taskOverdue

  """
  По количеству задач без рассмотрения более 1 дня
  """
  taskIgnoredMoreOneDay

  """
  По количеству задач без рассмотрения более 3 дней
  """
  taskIgnoredMoreThreeDay

  """
  По количеству задач без рассмотрения более 7 дней
  """
  taskIgnoredMoreSevenDay

  """
  По количеству задач без рассмотрения более 30 дней
  """
  taskIgnoredMoreThirtyDay
}

"""
Статистика пользователя по задачам
"""
type UserTaskStatisticsType {
  created: DateTime

  """
  Отдел
  """
  department: String

  """
  Должность
  """
  jobTitle: String

  """
  Подразделение
  """
  orgUnit: String

  """
  Количество делегированных задач
  """
  taskDelegatedCount: Int

  """
  Количество задач без рассмотрения
  """
  taskIgnoredCount: Int

  """
  Количество просроченных задач
  """
  taskOverdue: Int

  """
  Количество прочитанных задач
  """
  taskReadCount: Int

  """
  Количество отписанных задач
  """
  taskResolutedCount: Int

  """
  Количество принятых в работу задач
  """
  tasksAcceptedCount: Int

  """
  Количество отправленных задач
  """
  tasksCount: Int

  """
  Количество созданных, еще не отправленных задач
  """
  tasksCreated: Int

  """
  Количество завершенных задач
  """
  tasksDoneCount: Int

  """
  Количество отправленных повторно задач
  """
  tasksResubmittedCount: Int

  """
  Количество задач без рассмотрения более 1 дня
  """
  taskSubmittedMoreOneDay: Int

  """
  Количество задач без рассмотрения более 7 дней
  """
  taskSubmittedMoreSevenDay: Int

  """
  Количество задач без рассмотрения более 30 дней
  """
  taskSubmittedMoreThirtyDay: Int

  """
  Количество задач без рассмотрения более 3 дней
  """
  taskSubmittedMoreThreeDay: Int

  """
  Исполнитель задачи
  """
  userId: String
}

"""
Представляет обёртку над коллекцией элементов
"""
type UserTaskStatisticsTypeCollection {
  """
  Всего элементов в коллекции
  """
  count: Int!

  """
  Коллекция элементов
  """
  items: [UserTaskStatisticsType]!
}

scalar UShort

"""
Отсутствие
"""
type Vacation {
  """
  Описание
  """
  description: String

  """
  С
  """
  from: DateTime

  """
  По
  """
  to: DateTime
}

"""
Период действия договора
"""
type ValidityPeriod {
  """
  Дата начала действия договора
  """
  commencementDate: DateTime

  """
  Дата окончания действия договора
  """
  expirationDate: DateTime
}

"""
Период действия договора
"""
input ValidityPeriodInput {
  """
  Дата начала действия договора
  """
  commencementDate: DateTime

  """
  Дата окончания действия договора
  """
  expirationDate: DateTime
}

type ValuePairOfDateTimeGraphType {
  left: DateTime
  right: DateTime
}

type ValuePairOfULongGraphType {
  left: ULong
  right: ULong
}

"""
Ничего, будет null
"""
scalar Void
